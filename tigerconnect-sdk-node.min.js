module.exports = (function (n) {
  var r = {};
  function o(e) {
    if (r[e]) return r[e].exports;
    var t = (r[e] = { i: e, l: !1, exports: {} });
    return n[e].call(t.exports, t, t.exports, o), (t.l = !0), t.exports;
  }
  return (
    (o.m = n),
    (o.c = r),
    (o.d = function (e, t, n) {
      o.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
    }),
    (o.r = function (e) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (o.t = function (t, e) {
      if ((1 & e && (t = o(t)), 8 & e)) return t;
      if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
      var n = Object.create(null);
      if (
        (o.r(n),
        Object.defineProperty(n, 'default', { enumerable: !0, value: t }),
        2 & e && 'string' != typeof t)
      )
        for (var r in t)
          o.d(
            n,
            r,
            function (e) {
              return t[e];
            }.bind(null, r)
          );
      return n;
    }),
    (o.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return o.d(t, 'a', t), t;
    }),
    (o.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (o.p = ''),
    o((o.s = 35))
  );
})([
  function (e, t) {
    e.exports = require('lodash');
  },
  function (e, t) {
    e.exports = require('reuse-promise');
  },
  function (e, t) {
    e.exports = require('lodash-bound/uniq');
  },
  function (e, t) {
    e.exports = require('events');
  },
  function (e, t) {
    e.exports = require('uuid');
  },
  function (e, t) {
    e.exports = require('moment');
  },
  function (e, t) {
    e.exports = require('lodash/get');
  },
  function (e, t) {
    e.exports = require('lodash-bound/map');
  },
  function (e, t) {
    e.exports = require('lodash-bound/flatten');
  },
  function (e, t) {
    e.exports = require('invariant');
  },
  function (e, t) {
    e.exports = require('btoa');
  },
  function (e, t) {
    e.exports = require('lodash.throttle');
  },
  function (e, t) {
    e.exports = require('shallowequal');
  },
  function (e, t) {
    e.exports = require('lodash-bound/values');
  },
  function (e, t) {
    e.exports = require('lodash-bound/omitBy');
  },
  function (e, t) {
    e.exports = require('jshashes');
  },
  function (e, t) {
    e.exports = require('lodash-bound/without');
  },
  function (e, t) {
    e.exports = require('sorted-array-functions');
  },
  function (e, t) {
    e.exports = require('path');
  },
  function (e, t) {
    e.exports = require('fs');
  },
  function (e, t) {
    e.exports = require('raf');
  },
  function (e, t) {
    e.exports = require('superagent-prefix');
  },
  function (e, t) {
    e.exports = require('maltypart');
  },
  function (e, t, n) {},
  function (e, t, n) {
    'use strict';
    !(function () {
      try {
        var e = n(52).request().constructor.prototype;
        e.setNoDelay || (e.setNoDelay = function () {}),
          e.abort ||
            (e.abort = function () {
              this.xhr && this.xhr.abort();
            });
      } catch (e) {}
    })();
  },
  function (e, t) {
    e.exports = require('is-email');
  },
  function (e, t) {
    e.exports = require('file-type');
  },
  function (e, t) {
    e.exports = require('superagent');
  },
  function (e, t) {
    e.exports = require('lodash-bound/initial');
  },
  function (e, t) {
    e.exports = require('lodash-bound/keyBy');
  },
  function (e, t) {
    e.exports = require('lodash-bound/each');
  },
  function (e, t) {
    e.exports = require('lodash-bound/filter');
  },
  function (e, t) {
    e.exports = require('lodash-bound/keys');
  },
  function (e, t) {
    e.exports = require('lodash-bound/toPairs');
  },
  function (e) {
    e.exports = JSON.parse(
      '{"name":"tigerconnect","private":true,"version":"12.4.0","description":"JS (web and node) SDK for TigerConnect","homepage":"https://tigerconnect.github.io/js-sdk/","repository":"tigerconnect/js-sdk","author":{"name":"TigerConnect Developers","email":"developersupport@tigerconnect.com","url":"https://tigerconnect.github.io/js-sdk/"},"main":"lib/index.js","keywords":["tigerconnect","tigertext","communications","messenger","sdk"],"scripts":{"build:clean":"rimraf lib dist","build:js":"babel -d lib/ src/","build:travis":"run-s lint coverage:test build","build:webpack":"webpack","build:webpack:node":"webpack --target node","build":"run-p build:clean build:webpack","build:node":"run-s build:webpack:node","coverage":"run-s coverage:clean coverage:test coverage:report:html","coverage:check":"nyc check-coverage","coverage:clean":"rimraf .nyc_output","coverage:open":"open-cli coverage/index.html","coverage:report":"run-s coverage:report:*","coverage:report:codecov":"nyc report --reporter=lcov > coverage.lcov && codecov","coverage:report:html":"rimraf coverage && nyc report --reporter=html","coverage:test":"cross-env jest --collectCoverage test/**/*.test.ts  > coverage.lcov && codecov","coverage:travis":"run-s coverage:test coverage:report coverage:check","deploy:docs":"gulp npm:publish:docs:prepare","deps":"npm-check -s","deps:update":"npm-check -u","lint":"eslint ./src --ext .js,.ts,.tsx","lint:fix":"eslint ./src --ext .js,.ts,.tsx --fix","test":"mocha \\"test/**/*.test.js\\"","watch":"run-s build:clean && gulp build:js && run-p watch:js watch:webpack","watch:js":"gulp watch:js","watch:test":"npm test -- -w","watch:webpack":"webpack --watch","test:jest":"jest test/**/*.test.ts --watch","tsc":"tsc --project tsconfig.json"},"husky":{"hooks":{"pre-commit":"lint-staged","pre-push":"./hooks/pre-push"}},"lint-staged":{"*":["pretty-quick --staged"]},"jest":{"collectCoverageFrom":["src/**/*.ts","!<rootDir>/node_modules/**","!<rootDir>/src/**/*.d.ts"],"coverageThreshold":{"global":{"statements":10,"branches":3,"lines":11,"functions":12}}},"dependencies":{"@tigerconnect/node-fetch":"^2.6.0-tc1","@types/node":"^14.11.5","abortcontroller-polyfill":"^1.3.0","btoa":"^1.1.2","events":"^3.1.0","file-saver":"^1.3.3","file-type":"^4.0.0","humanize-list":"^1.0.1","invariant":"^2.2.2","is-email":"^1.0.0","jshashes":"^1.0.7","lodash":"^4.17.15","lodash-bound":"^1.1.2","lodash.throttle":"^4.1.1","maltypart":"^1.5.0","mime":"^1.6.0","moment":"^2.24.0","promise":"^8.0.3","raf":"^3.4.0","request":"^2.88.0","reuse-promise":"^1.1.0","shallowequal":"^0.2.2","sorted-array-functions":"^1.1.0","superagent":"^5.1.0","superagent-prefix":"0.0.2","tslint":"^6.1.3","uuid":"^3.0.0","visibilityjs":"^2.0.2"},"devDependencies":{"@babel/core":"^7.11.6","@babel/plugin-proposal-class-properties":"^7.10.4","@babel/plugin-proposal-decorators":"^7.10.5","@babel/plugin-proposal-function-bind":"^7.11.5","@babel/plugin-proposal-object-rest-spread":"^7.11.0","@babel/plugin-syntax-flow":"^7.10.4","@babel/plugin-transform-flow-strip-types":"^7.10.4","@babel/plugin-transform-runtime":"^7.11.5","@babel/preset-env":"^7.11.5","@babel/preset-es2015":"^7.0.0-beta.53","@babel/preset-typescript":"^7.10.4","@babel/register":"^7.11.5","@types/events":"^3.0.0","@types/jest":"^26.0.14","@types/lodash":"^4.14.161","@typescript-eslint/eslint-plugin":"^4.3.0","@typescript-eslint/parser":"^4.3.0","assets-webpack-plugin":"^4.0.0","awesome-typescript-loader":"^5.2.1","babel-eslint":"^10.1.0","babel-jest":"^26.3.0","babel-loader":"^8.1.0","babel-plugin-istanbul":"^6.0.0","busboy":"^0.2.14","chai":"^4.2.0","chai-as-promised":"^7.1.1","chai-deep-match":"^1.2.1","codecov":"^3.6.5","core-js":"^3.2.1","cross-env":"^3.2.4","decache":"^4.1.0","dom-storage":"^2.0.2","eslint":"^7.10.0","eslint-config-prettier":"^6.11.0","eslint-config-react-app":"^5.2.1","eslint-plugin-flowtype":"^5.2.0","eslint-plugin-import":"^2.22.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-prettier":"^3.1.4","eslint-plugin-react":"^7.21.2","eslint-plugin-react-hooks":"^4.1.2","gulp":"^4.0.2","gulp-babel":"^8.0.0","gulp-changed":"^4.0.1","gulp-debug":"^4.0.0","gulp-file":"^0.4.0","gulp-if":"^3.0.0","gulp-load-plugins":"^2.0.1","gulp-plumber":"^1.2.1","gulp-uglify":"^3.0.2","gulp-watch":"^5.0.1","husky":"^3.0.3","jest":"^26.4.2","jsdom":"^15.1.1","jsdom-global":"^3.0.2","json-loader":"^0.5.4","lint-staged":"^10.3.0","lodash-webpack-plugin":"^0.11.2","mocha":"^7.2.0","mocha-clean":"^1.0.0","nock":"^9.0.2","npm-check":"^5.9.0","npm-run-all":"^4.0.2","nyc":"^15.1.0","open-cli":"^5.0.0","performance-now":"^2.0.0","prettier":"^2.1.2","pretty-quick":"^3.0.2","promisify-child-process":"^3.1.1","rimraf":"^2.5.4","sinon":"^7.4.1","sinon-chai":"^3.3.0","source-map-loader":"^1.1.0","strip-loader":"^0.1.2","timekeeper":"1.0.0","tslint-loader":"^3.5.4","typescript":"^4.0.3","watch":"^1.0.1","webpack":"^4.44.2","webpack-cli":"^3.3.12","webpack-node-externals":"^1.5.4","yargs":"^6.4.0"},"eslintConfig":{"extends":["react-app","prettier"],"globals":{"__SDK_VERSION__":"readonly","__DEV__":"readonly"},"plugins":["react","prettier"],"rules":{"prettier/prettier":"error"}},"prettier":{"arrowParens":"always","bracketSpacing":true,"jsxBracketSameLine":false,"jsxSingleQuote":false,"printWidth":100,"proseWrap":"always","quoteProps":"as-needed","semi":true,"singleQuote":true,"tabWidth":2,"trailingComma":"es5","useTabs":false},"license":{"type":"Commercial","url":"https://tigerconnect.com/terms/end-user-terms-use-license-agreement/"}}'
    );
  },
  function (e, t, n) {
    'use strict';
    n.r(t),
      n.d(t, 'Client', function () {
        return r;
      }),
      global._babelPolyfill || !1 === global._tcShouldPolyfill ? n(50) : n(36),
      n(51)('./node');
    var r = n(56).TigerConnectClient;
  },
  function (e, t, n) {
    'use strict';
    if (
      ((0, n(37).getGlobals)(),
      n(38),
      n(39),
      n(40),
      n(41),
      n(42),
      n(43),
      n(44),
      n(45),
      n(46),
      n(47),
      'undefined' == typeof fetch)
    ) {
      var r = n(48);
      (global.fetch = r.default),
        (global.Headers = r.Headers),
        (global.Request = r.Request),
        (global.Response = r.Response),
        n(49);
    }
  },
  function (e, t, n) {
    'use strict';
    e.exports = {
      getGlobals: function () {
        if ('undefined' != typeof self) return self;
        if ('undefined' != typeof window) return window;
        if ('undefined' != typeof global) return global;
        throw new Error('unable to locate global object');
      },
    };
  },
  function (e, t) {
    e.exports = require('core-js/features/array/find');
  },
  function (e, t) {
    e.exports = require('core-js/features/array/from');
  },
  function (e, t) {
    e.exports = require('core-js/features/array/includes');
  },
  function (e, t) {
    e.exports = require('core-js/features/object/assign');
  },
  function (e, t) {
    e.exports = require('core-js/features/object/entries');
  },
  function (e, t) {
    e.exports = require('core-js/features/object/values');
  },
  function (e, t) {
    e.exports = require('core-js/features/string/ends-with');
  },
  function (e, t) {
    e.exports = require('core-js/features/string/includes');
  },
  function (e, t) {
    e.exports = require('core-js/features/string/starts-with');
  },
  function (e, t) {
    e.exports = require('core-js/features/symbol');
  },
  function (e, t) {
    e.exports = require('@tigerconnect/node-fetch');
  },
  function (e, t) {
    e.exports = require('abortcontroller-polyfill/dist/polyfill-patch-fetch');
  },
  function (e, t, n) {
    'use strict';
    if (!('find' in Array.prototype)) throw new Error('Missing polyfill for Array.find');
    if (!('from' in Array)) throw new Error('Missing polyfill for Array.from');
    if (!('includes' in Array.prototype)) throw new Error('Missing polyfill for Array.includes');
    if (!('assign' in Object)) throw new Error('Missing polyfill for Object.assign');
    if (!('entries' in Object)) throw new Error('Missing polyfill for Object.entries');
    if (!('values' in Object)) throw new Error('Missing polyfill for Object.values');
    if (!('endsWith' in String.prototype)) throw new Error('Missing polyfill for String.endsWith');
    if (!('includes' in String.prototype)) throw new Error('Missing polyfill for String.includes');
    if ('undefined' == typeof Symbol) throw new Error('Missing polyfill for Symbol');
    if ('undefined' == typeof Promise) throw new Error('Missing polyfill for Promise');
    if (!('finally' in Promise.prototype)) throw new Error('Missing polyfill for Promise.finally');
    if ('undefined' == typeof AbortController)
      throw new Error('Missing polyfill for AbortController');
    if ('undefined' == typeof fetch) throw new Error('Missing polyfill for fetch');
    if ('undefined' == typeof Headers)
      throw new Error('Missing polyfill for Headers (part of fetch polyfill)');
    if ('undefined' == typeof Request)
      throw new Error('Missing polyfill for Request (part of fetch polyfill)');
    if ('undefined' == typeof Response)
      throw new Error('Missing polyfill for Response (part of fetch polyfill)');
  },
  function (e, t, n) {
    var r = { './node': 23, './node.ts': 23, './web': 24, './web.ts': 24 };
    function o(e) {
      var t = i(e);
      return n(t);
    }
    function i(e) {
      if (n.o(r, e)) return r[e];
      var t = new Error("Cannot find module '" + e + "'");
      throw ((t.code = 'MODULE_NOT_FOUND'), t);
    }
    (o.keys = function () {
      return Object.keys(r);
    }),
      (o.resolve = i),
      ((e.exports = o).id = 51);
  },
  function (e, t) {
    e.exports = require('http');
  },
  function (e, t) {
    e.exports = require('request');
  },
  function (e, t) {
    e.exports = require('file-saver');
  },
  function (e, t) {
    e.exports = require('mime');
  },
  function (e, t, d) {
    'use strict';
    d.r(t),
      d.d(t, 'TigerConnectClient', function () {
        return af;
      });
    var m = {};
    d.r(m),
      d.d(m, 'ConnectionUnavailableError', function () {
        return B;
      }),
      d.d(m, 'NotFoundError', function () {
        return G;
      }),
      d.d(m, 'NotSignedInError', function () {
        return K;
      }),
      d.d(m, 'NotSupportedError', function () {
        return $;
      }),
      d.d(m, 'PermissionDeniedError', function () {
        return X;
      }),
      d.d(m, 'RequiresBasicAuthError', function () {
        return Y;
      }),
      d.d(m, 'TargetNotSupportedError', function () {
        return Z;
      }),
      d.d(m, 'ValidationError', function () {
        return ne;
      }),
      d.d(m, 'WrongCredentialsError', function () {
        return oe;
      });
    var _ = {};
    d.r(_),
      d.d(_, 'isEmail', function () {
        return Fn.a;
      });
    var b = {};
    d.r(b),
      d.d(b, 'isPhone', function () {
        return mo;
      }),
      d.d(b, 'formatPhone', function () {
        return _o;
      }),
      d.d(b, 'formatPhoneWithDash', function () {
        return bo;
      }),
      d.d(b, 'normalizePhone', function () {
        return wo;
      }),
      d.d(b, 'normalizePhoneUS', function () {
        return Io;
      });
    var w = {};
    d.r(w),
      d.d(w, 'Calls', function () {
        return En;
      }),
      d.d(w, 'Conversations', function () {
        return An;
      }),
      d.d(w, 'DistributionLists', function () {
        return Pn;
      }),
      d.d(w, 'Entities', function () {
        return Mn;
      }),
      d.d(w, 'Escalations', function () {
        return Nn;
      }),
      d.d(w, 'Events', function () {
        return Un;
      }),
      d.d(w, 'Groups', function () {
        return Dn;
      }),
      d.d(w, 'Messages', function () {
        return Hn;
      }),
      d.d(w, 'MessageTemplates', function () {
        return Xn;
      }),
      d.d(w, 'Metadata', function () {
        return Yn;
      }),
      d.d(w, 'Mute', function () {
        return Zn;
      }),
      d.d(w, 'Notifications', function () {
        return tr;
      }),
      d.d(w, 'Organizations', function () {
        return rr;
      }),
      d.d(w, 'Patients', function () {
        return ir;
      }),
      d.d(w, 'QRCode', function () {
        return ar;
      }),
      d.d(w, 'Reporting', function () {
        return pr;
      }),
      d.d(w, 'Roles', function () {
        return vr;
      }),
      d.d(w, 'RoleTags', function () {
        return gr;
      }),
      d.d(w, 'Roster', function () {
        return br;
      }),
      d.d(w, 'Scheduler', function () {
        return Or;
      }),
      d.d(w, 'ScheduledMessages', function () {
        return Rr;
      }),
      d.d(w, 'Search', function () {
        return Cr;
      }),
      d.d(w, 'Teams', function () {
        return Mr;
      }),
      d.d(w, 'Twilio', function () {
        return kr;
      }),
      d.d(w, 'TypingStatus', function () {
        return xr;
      }),
      d.d(w, 'UserRoles', function () {
        return Lr;
      }),
      d.d(w, 'Users', function () {
        return Uo;
      }),
      d.d(w, 'VirtualWaitingRoom', function () {
        return Do;
      });
    var I = {};
    d.r(I),
      d.d(I, 'AllowedSendersReason', function () {
        return ni;
      }),
      d.d(I, 'ConversationAnchorPoints', function () {
        return ri;
      }),
      d.d(I, 'EscalationChangeAction', function () {
        return oi;
      }),
      d.d(I, 'EscalationStatus', function () {
        return ii;
      }),
      d.d(I, 'GroupType', function () {
        return si;
      }),
      d.d(I, 'MessagePriority', function () {
        return ai;
      }),
      d.d(I, 'MessageRecipientStatus', function () {
        return li;
      }),
      d.d(I, 'MessageSenderStatus', function () {
        return di;
      }),
      d.d(I, 'MessageSubType', function () {
        return hi;
      }),
      d.d(I, 'MessageType', function () {
        return pi;
      }),
      d.d(I, 'Networks', function () {
        return fi;
      }),
      d.d(I, 'PatientCareCardActionType', function () {
        return vi;
      }),
      d.d(I, 'PatientCareCardType', function () {
        return yi;
      }),
      d.d(I, 'PatientCareCardUIType', function () {
        return gi;
      }),
      d.d(I, 'PresenceStatus', function () {
        return mi;
      }),
      d.d(I, 'ProcessingActionTypes', function () {
        return _i;
      }),
      d.d(I, 'SearchType', function () {
        return bi;
      }),
      d.d(I, 'TypingContext', function () {
        return wi;
      }),
      d.d(I, 'VisibilityType', function () {
        return Ii;
      });
    var O = {};
    d.r(O),
      d.d(O, 'allContentTypes', function () {
        return Ks;
      }),
      d.d(O, 'allExtensions', function () {
        return Hs;
      }),
      d.d(O, 'getMimeEntryByContentType', function () {
        return $s;
      }),
      d.d(O, 'getMimeEntryByExtension', function () {
        return Ws;
      });
    var T = {};
    d.r(T),
      d.d(T, 'formatDob', function () {
        return ga;
      }),
      d.d(T, 'secondsToDurationFormat', function () {
        return ma;
      });
    var E = {};
    d.r(E),
      d.d(E, 'downloadFile', function () {
        return wa;
      }),
      d.d(E, 'loadLocalFilePathWithFileReader', function () {
        return Ia;
      }),
      d.d(E, 'saveByteArray', function () {
        return Oa;
      });
    var R = {};
    d.r(R),
      d.d(R, 'Calls', function () {
        return cc;
      }),
      d.d(R, 'Conversations', function () {
        return Nc;
      }),
      d.d(R, 'DistributionLists', function () {
        return Dc;
      }),
      d.d(R, 'Entities', function () {
        return Fc;
      }),
      d.d(R, 'Escalations', function () {
        return Vc;
      }),
      d.d(R, 'EventRouter', function () {
        return Hc;
      }),
      d.d(R, 'Events', function () {
        return ol;
      }),
      d.d(R, 'Forums', function () {
        return sl;
      }),
      d.d(R, 'Groups', function () {
        return cl;
      }),
      d.d(R, 'Messages', function () {
        return fl;
      }),
      d.d(R, 'MessageTemplates', function () {
        return gl;
      }),
      d.d(R, 'Metadata', function () {
        return bl;
      }),
      d.d(R, 'Mute', function () {
        return Tl;
      }),
      d.d(R, 'NotificationRouter', function () {
        return El;
      }),
      d.d(R, 'Notifications', function () {
        return Cl;
      }),
      d.d(R, 'Organizations', function () {
        return zl;
      }),
      d.d(R, 'Patients', function () {
        return Ul;
      }),
      d.d(R, 'Presence', function () {
        return Ed;
      }),
      d.d(R, 'Products', function () {
        return Ad;
      }),
      d.d(R, 'Roles', function () {
        return jd;
      }),
      d.d(R, 'RoleTags', function () {
        return kd;
      }),
      d.d(R, 'ScheduledMessages', function () {
        return Ud;
      }),
      d.d(R, 'Search', function () {
        return Nh;
      }),
      d.d(R, 'Teams', function () {
        return Uh;
      }),
      d.d(R, 'TypingStatus', function () {
        return Fh;
      }),
      d.d(R, 'UserRoles', function () {
        return Kh;
      }),
      d.d(R, 'Users', function () {
        return Wh;
      }),
      d.d(R, 'VirtualWaitingRoom', function () {
        return Qh;
      });
    var i = {};
    d.r(i),
      d.d(i, 'Call', function () {
        return Yh;
      }),
      d.d(i, 'CallLogEntry', function () {
        return Jh;
      }),
      d.d(i, 'Conversation', function () {
        return Zh;
      }),
      d.d(i, 'DistributionList', function () {
        return ep;
      }),
      d.d(i, 'EscalationExecution', function () {
        return tp;
      }),
      d.d(i, 'EscalationExecutionChange', function () {
        return np;
      }),
      d.d(i, 'EscalationPolicy', function () {
        return rp;
      }),
      d.d(i, 'Group', function () {
        return op;
      }),
      d.d(i, 'GroupMembersChange', function () {
        return ip;
      }),
      d.d(i, 'Message', function () {
        return sp;
      }),
      d.d(i, 'MessageStatusPerRecipient', function () {
        return ap;
      }),
      d.d(i, 'MessageTemplate', function () {
        return up;
      }),
      d.d(i, 'Metadata', function () {
        return cp;
      }),
      d.d(i, 'Mute', function () {
        return lp;
      }),
      d.d(i, 'Organization', function () {
        return Ip;
      }),
      d.d(i, 'Patient', function () {
        return Op;
      }),
      d.d(i, 'PatientContact', function () {
        return Tp;
      }),
      d.d(i, 'Product', function () {
        return Ep;
      }),
      d.d(i, 'ProductRoles', function () {
        return Ap;
      }),
      d.d(i, 'Role', function () {
        return Cp;
      }),
      d.d(i, 'RoleTag', function () {
        return Sp;
      }),
      d.d(i, 'ScheduledMessage', function () {
        return Pp;
      }),
      d.d(i, 'Team', function () {
        return jp;
      }),
      d.d(i, 'TeamRequest', function () {
        return Mp;
      }),
      d.d(i, 'User', function () {
        return Sh;
      }),
      d.d(i, 'UserRoles', function () {
        return zp;
      }),
      d.d(i, 'VirtualWaitingRoom', function () {
        return kp;
      });
    var r,
      s,
      o,
      a,
      u,
      n,
      c,
      l,
      h,
      p,
      f,
      v,
      y,
      g,
      A,
      C,
      S,
      P,
      j = d(3),
      M = d.n(j),
      z = d(9),
      k = d.n(z),
      N = d(0),
      ee = d.n(N),
      x = d(20),
      U = d.n(x),
      L = d(4),
      q = d.n(L),
      D =
        ((r = function (e, t) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          r(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      B = ((P = Error), D(me, P), (me.CODE = 'connection-unavailable'), me),
      F =
        ((S = function (e, t) {
          return (S =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          S(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      G = ((C = Error), F(ge, C), (ge.CODE = 'not-found'), ge),
      V =
        ((A = function (e, t) {
          return (A =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          A(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      K = ((g = Error), V(ye, g), (ye.CODE = 'not-signed-in'), ye),
      H =
        ((y = function (e, t) {
          return (y =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          y(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      $ = ((v = Error), H(ve, v), (ve.CODE = 'not-supported'), ve),
      W =
        ((f = function (e, t) {
          return (f =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          f(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      X = ((p = Error), W(fe, p), (fe.CODE = 'permission-denied'), fe),
      Q =
        ((h = function (e, t) {
          return (h =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          h(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Y = ((l = Error), Q(pe, l), (pe.CODE = 'requires-basic-auth'), pe),
      J =
        ((c = function (e, t) {
          return (c =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          c(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Z =
        ((n = Error),
        J(he, n),
        (he.raise = function (e) {
          throw new this(e);
        }),
        (he.CODE = 'target-not-supported'),
        he),
      te =
        ((u = function (e, t) {
          return (u =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          u(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      ne = ((a = Error), te(de, a), (de.CODE = 'validation'), de),
      re =
        ((o = function (e, t) {
          return (o =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          o(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      oe = ((s = Error), re(le, s), (le.CODE = 'wrong-credentials'), le),
      ie = [403, 404],
      se = 'v2',
      ae =
        ((ce.prototype.getVersion = function (e) {
          return { version: this.config.condensedReplays ? 'v5' : 'v2' };
        }),
        ce),
      ue = ae;
    function ce(e, t) {
      Object.assign(this, t),
        (this.config = e.config),
        (this.host = e),
        (this.httpClient = e.httpClient);
    }
    function le(e) {
      void 0 === e && (e = {});
      for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
      var r = s.apply(this, t) || this,
        o = e.tt_login_attempts_left;
      return (r.code = le.CODE), (r.loginAttemptsLeft = void 0 === o ? null : o), r;
    }
    function de(e, t, n) {
      void 0 === t && (t = 'invalid'), void 0 === n && (n = e + ' is ' + t);
      var r = a.call(this, n) || this;
      return (r.code = de.CODE), (r.name = e), (r.reason = t), r;
    }
    function he(e) {
      return n.call(this, 'method' + (e ? ' ' + e : '') + ' not supported in target node') || this;
    }
    function pe() {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      var n = l.apply(this, e) || this;
      return (n.code = pe.CODE), n;
    }
    function fe(e, t, n, r) {
      void 0 === r && (r = "can't perform action '" + n + "' on " + (e.name || e) + ' #' + t);
      var o = p.call(this, r) || this;
      return (o.code = fe.CODE), (o.resource = e), (o.action = n), (o.id = t), o;
    }
    function ve(e) {
      var t = v.call(this, e) || this;
      return (t.code = ve.CODE), t;
    }
    function ye() {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      var n = g.apply(this, e) || this;
      return (n.code = ye.CODE), n;
    }
    function ge(e, t, n) {
      var r = this;
      return (
        (n = n || e + " '" + t + "' not found"),
        ((r = C.call(this, n) || this).code = ge.CODE),
        (r.resource = e),
        (r.id = t),
        r
      );
    }
    function me() {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      var n = P.call(this, 'No internet connection') || this;
      return (n.code = me.CODE), n;
    }
    function _e(e) {
      var t = void 0 === e ? {} : e,
        n = t.fallbackValue,
        o = void 0 === n ? null : n,
        r = t.httpStatusCodes,
        i = void 0 === r ? ie : r;
      return function (e, t, n) {
        var r = n.value;
        return (
          (n.value = function () {
            for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
            return (function (e, s, a, u) {
              return new (a = a || Promise)(function (n, t) {
                function r(e) {
                  try {
                    i(u.next(e));
                  } catch (e) {
                    t(e);
                  }
                }
                function o(e) {
                  try {
                    i(u.throw(e));
                  } catch (e) {
                    t(e);
                  }
                }
                function i(e) {
                  var t;
                  e.done
                    ? n(e.value)
                    : ((t = e.value) instanceof a
                        ? t
                        : new a(function (e) {
                            e(t);
                          })
                      ).then(r, o);
                }
                i((u = u.apply(e, s || [])).next());
              });
            })(this, void 0, void 0, function () {
              var t;
              return (function (n, r) {
                var o,
                  i,
                  s,
                  e,
                  a = {
                    label: 0,
                    sent: function () {
                      if (1 & s[0]) throw s[1];
                      return s[1];
                    },
                    trys: [],
                    ops: [],
                  };
                return (
                  (e = { next: t(0), throw: t(1), return: t(2) }),
                  'function' == typeof Symbol &&
                    (e[Symbol.iterator] = function () {
                      return this;
                    }),
                  e
                );
                function t(t) {
                  return function (e) {
                    return (function (t) {
                      if (o) throw new TypeError('Generator is already executing.');
                      for (; a; )
                        try {
                          if (
                            ((o = 1),
                            i &&
                              (s =
                                2 & t[0]
                                  ? i.return
                                  : t[0]
                                  ? i.throw || ((s = i.return) && s.call(i), 0)
                                  : i.next) &&
                              !(s = s.call(i, t[1])).done)
                          )
                            return s;
                          switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                            case 0:
                            case 1:
                              s = t;
                              break;
                            case 4:
                              return a.label++, { value: t[1], done: !1 };
                            case 5:
                              a.label++, (i = t[1]), (t = [0]);
                              continue;
                            case 7:
                              (t = a.ops.pop()), a.trys.pop();
                              continue;
                            default:
                              if (
                                !(
                                  (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                  (6 !== t[0] && 2 !== t[0])
                                )
                              ) {
                                a = 0;
                                continue;
                              }
                              if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                                a.label = t[1];
                                break;
                              }
                              if (6 === t[0] && a.label < s[1]) {
                                (a.label = s[1]), (s = t);
                                break;
                              }
                              if (s && a.label < s[2]) {
                                (a.label = s[2]), a.ops.push(t);
                                break;
                              }
                              s[2] && a.ops.pop(), a.trys.pop();
                              continue;
                          }
                          t = r.call(n, a);
                        } catch (e) {
                          (t = [6, e]), (i = 0);
                        } finally {
                          o = s = 0;
                        }
                      if (5 & t[0]) throw t[1];
                      return { value: t[0] ? t[1] : void 0, done: !0 };
                    })([t, e]);
                  };
                }
              })(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      e.trys.push([0, 2, , 3]),
                      [
                        4,
                        r.call.apply(
                          r,
                          (function () {
                            for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                              e += arguments[t].length;
                            var r = Array(e),
                              o = 0;
                            for (t = 0; t < n; t++)
                              for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++)
                                r[o] = i[s];
                            return r;
                          })([this], n)
                        ),
                      ]
                    );
                  case 1:
                    return [2, e.sent()];
                  case 2:
                    if ((t = e.sent()).response && i.includes(t.response.status)) return [2, o];
                    if (t.code === X.CODE && i.includes(403)) return [2, o];
                    if (t.code === oe.CODE && i.includes(401)) return [2, o];
                    throw t;
                  case 3:
                    return [2];
                }
              });
            });
          }),
          n
        );
      };
    }
    Object.assign(ae.prototype, M.a.prototype);
    var be = {
      camelizeKey: ee.a.memoize(ee.a.camelCase),
      underscoreKey: ee.a.memoize(ee.a.snakeCase),
      camelizeObject: function (e) {
        return we(e, be.camelizeKey);
      },
      underscoreObject: function (e) {
        return we(e, be.underscoreKey);
      },
    };
    function we(e, r) {
      return ee.a.isArray(e)
        ? e.map(function (e) {
            return we(e, r);
          })
        : ee.a.isObject(e)
        ? ee.a.transform(
            e,
            function (e, t, n) {
              e[r(n)] = we(t, r);
            },
            {}
          )
        : e;
    }
    function Ie(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Oe(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Te(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Ee(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Re(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Ae(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Ce(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Se(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Pe(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function je(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Me(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ze(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function ke(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Ne(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function xe(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ue(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Le(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function qe(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function De(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Be(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Fe(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ge(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Ve(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ke(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function He(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function $e(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function We(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Xe(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Qe(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Ye(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Je(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ze(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function et(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function tt(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function nt(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function rt(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function ot(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function it(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function st(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function at(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function ut(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ct(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function lt(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function dt(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function ht(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function pt(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ft(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function vt(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function yt(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function gt(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function mt(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function _t(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function bt(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function wt(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function It(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var Ot,
      Tt,
      Et,
      Rt,
      At,
      Ct,
      St,
      Pt,
      jt,
      Mt,
      zt,
      kt,
      Nt,
      xt,
      Ut,
      Lt,
      qt,
      Dt,
      Bt,
      Ft,
      Gt,
      Vt,
      Kt,
      Ht,
      $t,
      Wt,
      Xt,
      Qt,
      Yt,
      Jt,
      Zt,
      en,
      tn,
      nn,
      rn,
      on,
      sn,
      an,
      un,
      cn,
      ln,
      dn,
      hn,
      pn,
      fn,
      vn,
      yn,
      gn,
      mn,
      _n,
      bn,
      wn,
      In = be,
      On =
        ((wn = function (e, t) {
          return (wn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          wn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Tn = function () {
        return (Tn =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      En =
        (On(go, (bn = ue)),
        (go.prototype.start = function (o) {
          return Ie(this, void 0, void 0, function () {
            var t, n, r;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/voip_call', {
                      data: In.underscoreObject(o),
                      headers: { 'TT-X-Organization-Key': o.organizationId },
                    }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = Object(N.get)(t, 'data.disabled_participants', {})),
                    ((r = In.camelizeObject(t.data)).disabledParticipants = n),
                    [2, r]
                  );
              }
            });
          });
        }),
        (go.prototype.end = function (r, o, e) {
          var i = e.callId,
            s = e.payload,
            a = e.reason;
          return Ie(this, void 0, void 0, function () {
            var t, n;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Object(N.get)(s, 'disabledParticipants', {})),
                    ((n = In.underscoreObject({
                      payload: s,
                      reason: a,
                      callId: i,
                    })).payload.disabled_participants = t),
                    [
                      4,
                      this.httpClient.post('/v2/voip_call/' + r + '/end', {
                        data: n,
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (go.prototype.decline = function (r, o, e) {
          var i = e.callId,
            s = e.payload;
          return Ie(this, void 0, void 0, function () {
            var t, n;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Object(N.get)(s, 'disabledParticipants', {})),
                    ((n = In.underscoreObject({
                      payload: Tn(Tn({}, s), { reason: 'declined', callId: i }),
                      reason: 'declined',
                      callId: i,
                      type: 'call_ended',
                      roomName: r,
                    })).payload.disabled_participants = t),
                    [
                      4,
                      this.httpClient.post('/v2/voip_call/' + r + '/end', {
                        data: n,
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (go.prototype.join = function (t, n) {
          return Ie(this, void 0, void 0, function () {
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/v2/voip_call/' + t, {
                      headers: { 'TT-X-Organization-Key': n },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (go.prototype.answer = function (r, o, e) {
          var i = e.callId,
            s = e.payload;
          return Ie(this, void 0, void 0, function () {
            var t, n;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Object(N.get)(s, 'disabledParticipants', {})),
                    ((n = In.underscoreObject({
                      callId: i,
                      payload: Tn(Tn({}, s), { reason: 'answered', callId: i }),
                      reason: 'answered',
                      type: 'call_answered',
                      roomName: r,
                    })).payload.disabled_participants = t),
                    [
                      4,
                      this.httpClient.post('/v2/voip_call/' + r + '/answer', {
                        data: n,
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (go.prototype.invite = function (r, o, e) {
          var i = e.callId,
            s = e.payload,
            a = e.recipients;
          return Ie(this, void 0, void 0, function () {
            var t, n;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Object(N.get)(s, 'disabledParticipants', {})),
                    ((n = In.underscoreObject({
                      callId: i,
                      payload: s,
                      recipients: a,
                    })).payload.disabled_participants = t),
                    [
                      4,
                      this.httpClient.post('/v2/voip_call/' + r + '/add_participants', {
                        data: n,
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (go.prototype.state = function (r, o, e) {
          var i = e.callId,
            s = e.payload;
          return Ie(this, void 0, void 0, function () {
            var t, n;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Object(N.get)(s, 'disabledParticipants', {})),
                    ((n = In.underscoreObject({
                      callId: i,
                      payload: Tn(Tn({}, s), { callId: i }),
                    })).payload.disabled_participants = t),
                    [
                      4,
                      this.httpClient.post('/v2/voip_call/' + r + '/state', {
                        data: n,
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (go.prototype.log = function (e) {
          var r = e.network,
            o = e.organizationId,
            i = e.page;
          return Ie(this, void 0, void 0, function () {
            var t, n;
            return Oe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { network: r, size: 10 }),
                    i && (t.page = i),
                    [
                      4,
                      this.httpClient.get('/v2/call_log', {
                        headers: { 'TT-X-Organization-Key': o },
                        query: t,
                      }),
                    ]
                  );
                case 1:
                  return (n = e.sent()), [2, In.camelizeObject(n.data)];
              }
            });
          });
        }),
        go),
      Rn =
        ((_n = function (e, t) {
          return (_n =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          _n(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      An =
        (Rn(yo, (mn = ue)),
        (yo.prototype.find = function (t) {
          return Te(this, void 0, void 0, function () {
            return Ee(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.httpClient.get('/v5/conversation/:id', { urlParams: { id: t } })];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (yo.prototype.updateConversationStatus = function (n, r, e) {
          var t = void 0 === e ? {} : e,
            o = t.highestSortNumber,
            i = t.lowestSortNumber;
          return Te(this, void 0, void 0, function () {
            var t;
            return Ee(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { status: r }),
                    o && (t.highest_sort_number = o),
                    i && (t.lowest_sort_number = i),
                    [
                      4,
                      this.httpClient.post('/v5/conversation/:id/status', {
                        urlParams: { id: n },
                        data: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (yo.prototype.fetchTimeline = function (t, n, r, e) {
          var o = e.continuation,
            i = e.markAsDelivered,
            s = void 0 === i || i;
          return Te(this, void 0, void 0, function () {
            return Ee(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/conversation/:id/timeline', {
                      urlParams: { id: t },
                      data: {
                        anchor_point: n,
                        continuation: o,
                        mark_as_delivered: s,
                        max_items: r,
                      },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        yo),
      Cn =
        ((gn = function (e, t) {
          return (gn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          gn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Sn = 'distributionLists.find',
      Pn =
        (Cn(vo, (yn = ue)),
        (vo.prototype.batch = function (e) {
          var n = e.ids,
            r = e.operation,
            o = e.organizationId;
          return Ae(this, void 0, void 0, function () {
            var t;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.patch('/v5/dist_list', {
                        data: { ids: n, operation: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (vo.prototype.create = function (e) {
          var n = e.adminOnly,
            r = e.members,
            o = e.name,
            i = e.network,
            s = e.organizationId;
          return Ae(this, void 0, void 0, function () {
            var t;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': s }),
                    [
                      4,
                      this.httpClient.post('/v5/dist_list', {
                        data: { admin_only: n, members: r, name: o, network: i },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (vo.prototype.delete = function (n, r) {
          return Ae(this, void 0, void 0, function () {
            var t;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.del('/v5/dist_list/:id', {
                        headers: t,
                        urlParams: { id: n },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (vo.prototype.find = function (o, e) {
          var i = (void 0 === e ? {} : e).organizationId;
          return Ae(this, void 0, void 0, function () {
            var t, n, r;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = yn.prototype.getVersion.call(this, Sn).version),
                    (n = void 0 === t ? 'v2' : t),
                    (r = {}),
                    i && (r['TT-X-Organization-Key'] = i),
                    [
                      4,
                      this.httpClient.get('/:version/dist_list/:id', {
                        headers: r,
                        urlParams: { id: o, version: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (vo.prototype.findMemberIds = function (i, s, e) {
          var a = (void 0 === e ? {} : e).continuation;
          return Ae(this, void 0, void 0, function () {
            var t, n, r, o;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = yn.prototype.getVersion.call(this, Sn).version),
                    (n = void 0 === t ? 'v2' : t),
                    (r = { 'TT-X-Organization-Key': s }),
                    (o = '/:version/dist_list/:id/members'),
                    a && (o += '/?continuation=:continuation'),
                    [
                      4,
                      this.httpClient.get(o, {
                        headers: r,
                        urlParams: { continuation: a, id: i, version: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (vo.prototype.membersBatch = function (e) {
          var n = e.id,
            r = e.members,
            o = e.operation,
            i = e.organizationId;
          return Ae(this, void 0, void 0, function () {
            var t;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': i }),
                    [
                      4,
                      this.httpClient.patch('/v5/dist_list/:id/members', {
                        data: { members: r, operation: o },
                        headers: t,
                        urlParams: { id: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (vo.prototype.update = function (e) {
          var n = e.adminOnly,
            r = e.id,
            o = e.name,
            i = e.organizationId;
          return Ae(this, void 0, void 0, function () {
            var t;
            return Ce(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': i }),
                    [
                      4,
                      this.httpClient.put('/v5/dist_list/:id', {
                        data: { admin_only: n, name: o },
                        headers: t,
                        urlParams: { id: r },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        Re([_e()], vo.prototype, 'delete', null),
        Re([_e()], vo.prototype, 'find', null),
        Re([_e()], vo.prototype, 'findMemberIds', null),
        Re([_e()], vo.prototype, 'membersBatch', null),
        Re([_e()], vo.prototype, 'update', null),
        vo),
      jn =
        ((vn = function (e, t) {
          return (vn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          vn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Mn =
        (jn(fo, (fn = ue)),
        (fo.prototype.findMulti = function (e) {
          var i = e.users,
            s = e.metadata,
            a = e.organizationId;
          return (function (e, s, a, u) {
            return new (a = a || Promise)(function (n, t) {
              function r(e) {
                try {
                  i(u.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function o(e) {
                try {
                  i(u.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function i(e) {
                var t;
                e.done
                  ? n(e.value)
                  : ((t = e.value) instanceof a
                      ? t
                      : new a(function (e) {
                          e(t);
                        })
                    ).then(r, o);
              }
              i((u = u.apply(e, s || [])).next());
            });
          })(this, void 0, void 0, function () {
            var t, n, r, o;
            return (function (n, r) {
              var o,
                i,
                s,
                e,
                a = {
                  label: 0,
                  sent: function () {
                    if (1 & s[0]) throw s[1];
                    return s[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (e = { next: t(0), throw: t(1), return: t(2) }),
                'function' == typeof Symbol &&
                  (e[Symbol.iterator] = function () {
                    return this;
                  }),
                e
              );
              function t(t) {
                return function (e) {
                  return (function (t) {
                    if (o) throw new TypeError('Generator is already executing.');
                    for (; a; )
                      try {
                        if (
                          ((o = 1),
                          i &&
                            (s =
                              2 & t[0]
                                ? i.return
                                : t[0]
                                ? i.throw || ((s = i.return) && s.call(i), 0)
                                : i.next) &&
                            !(s = s.call(i, t[1])).done)
                        )
                          return s;
                        switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                          case 0:
                          case 1:
                            s = t;
                            break;
                          case 4:
                            return a.label++, { value: t[1], done: !1 };
                          case 5:
                            a.label++, (i = t[1]), (t = [0]);
                            continue;
                          case 7:
                            (t = a.ops.pop()), a.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                (6 !== t[0] && 2 !== t[0])
                              )
                            ) {
                              a = 0;
                              continue;
                            }
                            if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                              a.label = t[1];
                              break;
                            }
                            if (6 === t[0] && a.label < s[1]) {
                              (a.label = s[1]), (s = t);
                              break;
                            }
                            if (s && a.label < s[2]) {
                              (a.label = s[2]), a.ops.push(t);
                              break;
                            }
                            s[2] && a.ops.pop(), a.trys.pop();
                            continue;
                        }
                        t = r.call(n, a);
                      } catch (e) {
                        (t = [6, e]), (i = 0);
                      } finally {
                        o = s = 0;
                      }
                    if (5 & t[0]) throw t[1];
                    return { value: t[0] ? t[1] : void 0, done: !0 };
                  })([t, e]);
                };
              }
            })(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = fn.prototype.getVersion.call(this, 'entities.findAll').version),
                    (n = void 0 === t ? 'v2' : t),
                    (r = { 'TT-X-Organization-Key': a }),
                    (o = { render_owner_object: 'true' }),
                    [
                      4,
                      this.httpClient.post('/:version/entities_bulk', {
                        urlParams: { version: n },
                        data: { users: i, metadata: s },
                        headers: r,
                        query: o,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([_e()], fo.prototype, 'findMulti', null),
        fo),
      zn =
        ((pn = function (e, t) {
          return (pn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          pn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      kn = 'escalation',
      Nn =
        (zn(po, (hn = ue)),
        (po.prototype.escalateMessage = function (r) {
          return Pe(this, void 0, void 0, function () {
            var t, n;
            return je(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = hn.prototype.getVersion.call(this, kn).version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.post('/:version/message/:messageId/escalation', {
                        urlParams: { version: n, messageId: r },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (po.prototype.acknowledge = function (r, e) {
          var o = e.messageId,
            i = e.userTokens;
          return Pe(this, void 0, void 0, function () {
            var t, n;
            return je(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = hn.prototype.getVersion.call(this, kn).version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.post(
                        '/:version/message/:messageId/escalation/:escalationId/confirm',
                        {
                          urlParams: { version: n, escalationId: r, messageId: o },
                          data: { confirm_as: i },
                        }
                      ),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (po.prototype.cancel = function (r) {
          return Pe(this, void 0, void 0, function () {
            var t, n;
            return je(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = hn.prototype.getVersion.call(this, kn).version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.del('/:version/message/:messageId/escalation', {
                        urlParams: { version: n, messageId: r },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (po.prototype.skip = function (r, e) {
          var o = e.messageId,
            i = e.userTokens;
          return Pe(this, void 0, void 0, function () {
            var t, n;
            return je(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = hn.prototype.getVersion.call(this, kn).version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.post(
                        '/:version/message/:messageId/escalation/:escalationId/skip',
                        {
                          urlParams: { version: n, escalationId: r, messageId: o },
                          data: { skip_as: i },
                        }
                      ),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        Se([_e()], po.prototype, 'escalateMessage', null),
        Se([_e()], po.prototype, 'acknowledge', null),
        Se([_e()], po.prototype, 'cancel', null),
        Se([_e()], po.prototype, 'skip', null),
        po),
      xn =
        ((dn = function (e, t) {
          return (dn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          dn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Un =
        (xn(ho, (ln = ue)),
        (ho.prototype.ack = function (r) {
          return Me(this, void 0, void 0, function () {
            var t, n;
            return ze(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = ln.prototype.getVersion.call(this, 'events.ack').version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.post('/:version/events/ack', {
                        urlParams: { version: n },
                        data: { events: r },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (ho.prototype.closeAllConnections = function () {
          return Me(this, void 0, void 0, function () {
            var t, n;
            return ze(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = ln.prototype.getVersion.call(this, 'events.closeAllConnections').version),
                    (n = void 0 === t ? 'v2' : t),
                    [4, this.httpClient.del('/:version/events', { urlParams: { version: n } })]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        ho),
      Ln =
        ((cn = function (e, t) {
          return (cn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          cn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      qn = se,
      Dn =
        (Ln(lo, (un = ue)),
        (lo.prototype.create = function (e) {
          var a = e.avatarFile,
            u = e.description,
            c = e.excludeCreator,
            t = e.isPublic,
            l = void 0 !== t && t,
            n = e.memberIds,
            d = void 0 === n ? [] : n,
            h = e.metadata,
            p = e.name,
            f = e.organizationId,
            r = e.renderEntity,
            v = void 0 === r || r,
            o = e.replayHistory,
            y = void 0 !== o && o;
          return Ne(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = un.prototype.getVersion.call(this, 'group.create').version),
                    (n = void 0 === t ? qn : t),
                    (r = {}),
                    (o = {
                      is_public: l,
                      members: d.join(','),
                      metadata: h,
                      name: p,
                      replay_history: y,
                    }),
                    (i = {}),
                    (s = { exclude_creator: c, render_entity: v }),
                    a && (i.avatar = a),
                    u && (o.description = u),
                    f && (r['TT-X-Organization-Key'] = f),
                    [
                      4,
                      this.httpClient.post('/:version/group', {
                        urlParams: { version: n },
                        query: s,
                        headers: r,
                        data: o,
                        files: i,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (lo.prototype.update = function (a, e) {
          var t = e.name,
            u = void 0 === t ? void 0 : t,
            n = e.avatarFile,
            c = void 0 === n ? void 0 : n,
            r = e.replayHistory,
            l = void 0 === r ? void 0 : r,
            d = e.memberIds;
          return Ne(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = un.prototype.getVersion.call(this, 'group.update').version),
                    (n = void 0 === t ? qn : t),
                    (r = {}),
                    (o = {}),
                    void 0 !== u && (r.name = u),
                    void 0 !== d && (r.members = d.join(',')),
                    void 0 !== l && (r.replay_history = l),
                    c && (o.avatar = c),
                    [
                      4,
                      this.httpClient.post('/:version/group/:id', {
                        urlParams: { id: a, version: n },
                        data: r,
                        files: o,
                      }),
                    ]
                  );
                case 1:
                  return (
                    (i = e.sent()),
                    (s = i.getHeader('TT-X-Group-Avatar')),
                    [2, { id: a, avatarUrl: s }]
                  );
              }
            });
          });
        }),
        (lo.prototype.find = function (r) {
          return Ne(this, void 0, void 0, function () {
            var t, n;
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = un.prototype.getVersion.call(this, 'group.find').version),
                    (n = void 0 === t ? qn : t),
                    [
                      4,
                      this.httpClient.get('/:version/group/:id', {
                        urlParams: { id: r, version: n },
                        query: { render_metadata: 'true' },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (lo.prototype.findAllMemberIds = function (t) {
          return Ne(this, void 0, void 0, function () {
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/:version/group/:id/members', {
                      urlParams: { id: t, version: qn },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (lo.prototype.destroy = function (r) {
          return Ne(this, void 0, void 0, function () {
            var t, n;
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = un.prototype.getVersion.call(this, 'group.destroy').version),
                    (n = void 0 === t ? qn : t),
                    [
                      4,
                      this.httpClient.del('/:version/group/:id', {
                        urlParams: { id: r, version: n },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2, !0];
              }
            });
          });
        }),
        (lo.prototype.addMembers = function (r, o) {
          return Ne(this, void 0, void 0, function () {
            var t, n;
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = un.prototype.getVersion.call(this, 'group.addMembers').version),
                    (n = void 0 === t ? qn : t),
                    [
                      4,
                      this.httpClient.post('/:version/group/:id/members', {
                        urlParams: { id: r, version: n },
                        data: { members: o },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (lo.prototype.removeMembers = function (t, n) {
          return Ne(this, void 0, void 0, function () {
            return xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/group/:id/members/remove', {
                      urlParams: { id: t },
                      data: { members: n },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        ke([_e()], lo.prototype, 'find', null),
        ke([_e()], lo.prototype, 'findAllMemberIds', null),
        ke([_e()], lo.prototype, 'destroy', null),
        lo),
      Bn = d(25),
      Fn = d.n(Bn),
      Gn =
        ((an = function (e, t) {
          return (an =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          an(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Vn = function () {
        return (Vn =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Kn = se,
      Hn =
        (Gn(co, (sn = ue)),
        (co.prototype.send = function (e) {
          var d = e.attachment,
            h = e.body,
            p = e.conversationId,
            f = e.counterPartyId,
            v = e.deleteOnRead,
            y = e.escalate,
            g = e.localId,
            m = e.metadata,
            _ = e.priority,
            b = e.recipientOrganizationId,
            w = e.senderOrganizationId,
            I = e.ttl;
          return Le(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l;
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = sn.prototype.getVersion.call(this, 'message.send').version),
                    (r = { body: h }),
                    (o = {}),
                    (i = {}),
                    (n = void 0 === t ? Kn : t) === Kn
                      ? (Fn()(f) && (f = f.toLowerCase()),
                        (r.recipient = f),
                        (o.response_format = 'message'),
                        (b = b || w),
                        w && (r.sender_organization = w),
                        b && (r.recipient_organization = b))
                      : 'v5' === n && (r.conversation_id = p),
                    m &&
                      (r.data = m.map(function (e) {
                        return Vn(Vn({}, e), { payload: JSON.stringify(e.payload) });
                      })),
                    d && (i.attachment = d),
                    v && (r.dor = v),
                    y && (r.escalate = y),
                    void 0 !== _ && (r.priority = _),
                    I && (r.ttl = I),
                    (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 5, , 6]),
                    [
                      4,
                      this.httpClient.post('/:version/message', {
                        urlParams: { version: n },
                        data: r,
                        files: i,
                        query: o,
                        requestId: g,
                        timeout: !d,
                      }),
                    ]
                  );
                case 2:
                  return (
                    (s = e.sent()),
                    (a = s.headers['tt-x-message-id']),
                    this.config.condensedReplays &&
                    s.data.last_message &&
                    a !== s.data.last_message.message_id
                      ? [4, this.host.api.messages.find(a)]
                      : [3, 4]
                  );
                case 3:
                  (u = e.sent()) && (s.data.last_message = u.message), (e.label = 4);
                case 4:
                  return [2, s.data];
                case 5:
                  return 304 !== (c = e.sent()).status
                    ? [2, Promise.reject(c)]
                    : (l = c.response.headers['TT-X-Message-Id'.toLowerCase()])
                    ? [2, { message_id: l }]
                    : [2, Promise.reject(c)];
                case 6:
                  return [2];
              }
            });
          });
        }),
        (co.prototype.destroy = function (t) {
          return Le(this, void 0, void 0, function () {
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    e.trys.push([0, 2, , 3]),
                    [4, this.httpClient.del('/v2/message/:id', { urlParams: { id: t } })]
                  );
                case 1:
                  return e.sent(), [2, !0];
                case 2:
                  return e.sent(), [2, !1];
                case 3:
                  return [2];
              }
            });
          });
        }),
        (co.prototype.forward = function (i, s, e) {
          var a = e.conversationId,
            u = e.localId,
            c = e.metadata,
            l = e.priority,
            d = e.recipientOrganizationId,
            h = e.senderOrganizationId;
          return Le(this, void 0, void 0, function () {
            var t, n, r, o;
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = sn.prototype.getVersion.call(this, 'message.forward').version),
                    (r = {}),
                    (n = void 0 === t ? Kn : t) === Kn
                      ? ((r.recipient = s),
                        (d = d || h),
                        h && (r.sender_organization = h),
                        d && (r.recipient_organization = d))
                      : 'v5' === n && (r.conversation_id = a),
                    c &&
                      (r.data = c.map(function (e) {
                        return Vn(Vn({}, e), { payload: JSON.stringify(e.payload) });
                      })),
                    void 0 !== l && (r.priority = l),
                    [
                      4,
                      this.httpClient.post('/:version/message/:id/forward', {
                        urlParams: { id: i, version: n },
                        data: r,
                        requestId: u,
                      }),
                    ]
                  );
                case 1:
                  return (
                    (o = e.sent()),
                    n === Kn ? [2, { message_id: o.getHeader('TT-X-Message-Id') }] : [2, o.data]
                  );
              }
            });
          });
        }),
        (co.prototype.find = function (r) {
          return Le(this, void 0, void 0, function () {
            var t, n;
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = sn.prototype.getVersion.call(this, 'messages.find').version),
                    (n = void 0 === t ? Kn : t),
                    [
                      4,
                      this.httpClient.get('/:version/message/:id', {
                        urlParams: { id: r, version: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (co.prototype.findRecipientStatus = function (t) {
          return Le(this, void 0, void 0, function () {
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/:version/message/:id/status', {
                      urlParams: { id: t, version: Kn },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (co.prototype.findRecipientStatusMulti = function (t) {
          return Le(this, void 0, void 0, function () {
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/:version/get_bulk_message_status', {
                      urlParams: { version: Kn },
                      data: { messages: t },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data.bulk_message_statuses];
              }
            });
          });
        }),
        (co.prototype.updateRecipientStatusMulti = function (r) {
          return Le(this, void 0, void 0, function () {
            var t, n;
            return qe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = sn.prototype.getVersion.call(this, 'messages.updateRecipientStatusMulti')
                      .version),
                    (n = void 0 === t ? Kn : t),
                    [
                      4,
                      this.httpClient.post('/:version/message/status', {
                        urlParams: { version: n },
                        data: r,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (co.prototype.createAttachmentTokens = function (t) {
          return (
            void 0 === t && (t = 20),
            Le(this, void 0, void 0, function () {
              return qe(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [
                      4,
                      this.httpClient.post('/v5/attachment_tokens_bulk', {
                        data: { count: t, expire_after_sec: 43200, expire_after_used_sec: 5 },
                      }),
                    ];
                  case 1:
                    return [2, e.sent().data];
                }
              });
            })
          );
        }),
        Ue([_e()], co.prototype, 'find', null),
        Ue([_e()], co.prototype, 'findRecipientStatus', null),
        co),
      $n =
        ((on = function (e, t) {
          return (on =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          on(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Wn = function () {
        return (Wn =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Xn =
        ($n(uo, (rn = ue)),
        (uo.prototype.batch = function (e) {
          var n = e.ids,
            r = e.operation,
            o = e.organizationId;
          return Be(this, void 0, void 0, function () {
            var t;
            return Fe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.patch('/v5/message_template', {
                        data: { ids: n, operation: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (uo.prototype.create = function (e) {
          var r = e.attachment,
            o = e.body,
            i = e.network,
            s = e.organizationId,
            a = e.repository,
            u = e.title;
          return Be(this, void 0, void 0, function () {
            var t, n;
            return Fe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {}),
                    (n = { 'TT-X-Organization-Key': s }),
                    r && (t.attachment = r),
                    [
                      4,
                      this.httpClient.post('/v5/message_template', {
                        files: t,
                        data: { body: o, network: i, repository: a, template_label: u },
                        headers: n,
                        timeout: !r,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (uo.prototype.delete = function (n, r) {
          return Be(this, void 0, void 0, function () {
            var t;
            return Fe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.del('/v5/message_template/:id', {
                        headers: t,
                        urlParams: { id: n },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (uo.prototype.downloadTemplateFile = function (e) {
          var r = e.templateId,
            o = e.fileName,
            i = e.organizationId;
          return Be(this, void 0, void 0, function () {
            var t, n;
            return Fe(this, function (e) {
              return (
                (t = { 'TT-X-Organization-Key': i }),
                (n = '/v5/message_template/' + r + '/attachment/' + o),
                [2, this.httpClient.downloadFileBlob(n, { headers: t })]
              );
            });
          });
        }),
        (uo.prototype.find = function (n, r) {
          return Be(this, void 0, void 0, function () {
            var t;
            return Fe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.get('/v5/message_template/:id', {
                        headers: t,
                        urlParams: { id: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (uo.prototype.update = function (e) {
          var r = e.attachment,
            o = e.body,
            i = e.id,
            s = e.organizationId,
            a = e.repository,
            u = e.title;
          return Be(this, void 0, void 0, function () {
            var t, n;
            return Fe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {}),
                    (n = { 'TT-X-Organization-Key': s }),
                    r && (t.attachment = r),
                    [
                      4,
                      this.httpClient.put('/v5/message_template/:id', {
                        files: t,
                        data: Wn(Wn({}, t.attachment ? null : { attachment: r }), {
                          body: o,
                          repository: a,
                          template_label: u,
                        }),
                        headers: n,
                        timeout: !r,
                        urlParams: { id: i },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        De([_e()], uo.prototype, 'delete', null),
        De([_e()], uo.prototype, 'downloadTemplateFile', null),
        De([_e()], uo.prototype, 'find', null),
        De([_e()], uo.prototype, 'update', null),
        uo),
      Qn =
        ((nn = function (e, t) {
          return (nn =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          nn(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Yn =
        (Qn(ao, (tn = ue)),
        (ao.prototype.update = function (t, n, r) {
          return Ge(this, void 0, void 0, function () {
            return Ve(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/metadata/:id', {
                      urlParams: { id: t },
                      data: n,
                      headers: { 'TT-X-Organization-Key': r },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (ao.prototype.find = function (r, o) {
          return Ge(this, void 0, void 0, function () {
            var t, n;
            return Ve(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = tn.prototype.getVersion.call(this, 'metadata.find').version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.get('/:version/metadata/:id', {
                        urlParams: { id: r, version: n },
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        ao),
      Jn =
        ((en = function (e, t) {
          return (en =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          en(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Zn =
        (Jn(so, (Zt = ue)),
        (so.prototype.findAll = function () {
          return He(this, void 0, void 0, function () {
            var t, n;
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Zt.prototype.getVersion.call(this, 'mute.findAll').version),
                    (n = void 0 === t ? 'v2' : t),
                    [4, this.httpClient.get('/:version/mute', { urlParams: { version: n } })]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (so.prototype.unmuteAll = function () {
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.httpClient.del('/v2/mute')];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (so.prototype.muteUser = function (t, n, r, e) {
          var o = (void 0 === e ? {} : e).recipientOrganizationId,
            i = void 0 === o ? r : o;
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/mute/p2p', {
                      data: {
                        sender_token: t,
                        sender_organization: r,
                        receiver_organization: i,
                        duration: n.toString(),
                      },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (so.prototype.unmuteUser = function (t, n, e) {
          var r = (void 0 === e ? {} : e).recipientOrganizationId,
            o = void 0 === r ? n : r;
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.del('/v2/mute/p2p', {
                      headers: {
                        'TT-X-Sender-Token': t,
                        'TT-X-Sender-Organization': n,
                        'TT-X-Receiver-Organization': o,
                      },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (so.prototype.muteGroup = function (t, n, r) {
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/mute/group/:groupId', {
                      urlParams: { groupId: t },
                      data: { duration: n.toString(), receiver_organization: r },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (so.prototype.unmuteGroup = function (t, n) {
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.del('/v2/mute/group/:groupId', {
                      urlParams: { groupId: t },
                      headers: { 'TT-X-Receiver-Organization': n },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (so.prototype.muteOrganization = function (t, n) {
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/mute/organization/:organizationId', {
                      urlParams: { organizationId: t },
                      data: { duration: n.toString(), receiver_organization: t },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (so.prototype.unmuteOrganization = function (t) {
          return He(this, void 0, void 0, function () {
            return $e(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.del('/v2/mute/organization/:organizationId', {
                      urlParams: { organizationId: t },
                      headers: { 'TT-X-Receiver-Organization': t },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        Ke([_e()], so.prototype, 'muteUser', null),
        Ke([_e()], so.prototype, 'unmuteUser', null),
        Ke([_e()], so.prototype, 'muteGroup', null),
        Ke([_e()], so.prototype, 'unmuteGroup', null),
        Ke([_e()], so.prototype, 'muteOrganization', null),
        Ke([_e()], so.prototype, 'unmuteOrganization', null),
        so),
      er =
        ((Jt = function (e, t) {
          return (Jt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Jt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      tr =
        (er(io, (Yt = ue)),
        (io.prototype.closeAllConnections = function (n, r) {
          return We(this, void 0, void 0, function () {
            var t;
            return Xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = this.httpClient.getAuthHeaders({ key: n, secret: r })),
                    [4, this.httpClient.del('/v2/events/simple_notifications', { headers: t })]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (io.prototype.signIn = function () {
          return We(this, void 0, void 0, function () {
            var t, n, r;
            return Xe(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.httpClient.post('/v2/events/simple_notifications/key')];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = t.getHeader('TT-X-Api-Key')),
                    (r = t.getHeader('TT-X-Api-Secret')),
                    [2, { key: n, secret: r }]
                  );
              }
            });
          });
        }),
        (io.prototype.signOut = function (n, r) {
          return We(this, void 0, void 0, function () {
            var t;
            return Xe(this, function (e) {
              return (
                (t = this.httpClient.getAuthHeaders({ key: n, secret: r })),
                [2, this.httpClient.post('/v2/logout', { headers: t })]
              );
            });
          });
        }),
        io),
      nr =
        ((Qt = function (e, t) {
          return (Qt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Qt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      rr =
        (nr(oo, (Xt = ue)),
        (oo.prototype.find = function (r, o) {
          return Ye(this, void 0, void 0, function () {
            var t, n;
            return Je(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Xt.prototype.getVersion.call(this, 'organization.find').version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.get('/:version/user/:userId/organization/:id', {
                        urlParams: { version: n, userId: r, id: o },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (oo.prototype.findAllOfUser = function (r) {
          return Ye(this, void 0, void 0, function () {
            var t, n;
            return Je(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Xt.prototype.getVersion.call(this, 'organization.findAllOfUser').version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.get('/:version/user/:userId/organization', {
                        urlParams: { version: n, userId: r },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (oo.prototype.getPreferences = function (t) {
          return Ye(this, void 0, void 0, function () {
            return Je(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/v2/organization/:organizationId/preferences', {
                      urlParams: { organizationId: t },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (oo.prototype.editPreferences = function (e) {
          var t = e.organizationId,
            n = e.quickReplies;
          return Ye(this, void 0, void 0, function () {
            return Je(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/organization/:organizationId/preferences', {
                      headers: { 'TT-X-Organization-Key': t },
                      data: In.underscoreObject({ network: { patient: { quickReplies: n } } }),
                      urlParams: { organizationId: t },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        Qe([_e()], oo.prototype, 'find', null),
        Qe([_e()], oo.prototype, 'findAllOfUser', null),
        Qe([_e()], oo.prototype, 'getPreferences', null),
        Qe([_e()], oo.prototype, 'editPreferences', null),
        oo),
      or =
        ((Wt = function (e, t) {
          return (Wt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Wt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      ir =
        (or(ro, ($t = ue)),
        (ro.prototype.create = function (t) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient', {
                      data: In.underscoreObject(Object(N.omit)(t, 'organizationId')),
                      headers: { 'TT-X-Organization-Key': t.organizationId },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.delete = function (t, n) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.del('/v5/patient/:id', {
                      urlParams: { id: t },
                      headers: { 'TT-X-Organization-Key': n },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.update = function (t) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient/:id', {
                      data: In.underscoreObject(Object(N.omit)(t, ['organizationId', 'patientId'])),
                      headers: { 'TT-X-Organization-Key': t.organizationId },
                      urlParams: { id: t.patientId },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.createContact = function (t) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient/:patient_id/contact', {
                      data: In.underscoreObject(Object(N.omit)(t, ['organizationId', 'patientId'])),
                      headers: { 'TT-X-Organization-Key': t.organizationId },
                      urlParams: { patient_id: t.patientId },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.deleteContact = function (t) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.del('/v5/patient/:patient_id/contact/:contact_id', {
                      urlParams: { contact_id: t.contactId, patient_id: t.patientId },
                      headers: { 'TT-X-Organization-Key': t.organizationId },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.updateContact = function (t) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient/:patient_id/contact/:contact_id', {
                      data: In.underscoreObject(
                        Object(N.omit)(t, ['organizationId', 'patientId', 'contactId'])
                      ),
                      headers: { 'TT-X-Organization-Key': t.organizationId },
                      urlParams: { patient_id: t.patientId, contact_id: t.contactId },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.login = function (u, c, l, d) {
          return Ze(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a;
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {
                      want_condensed_replays: this.config.wantCondensedReplays,
                      want_processing_events: this.config.wantCondensedReplays,
                    }),
                    c
                      ? ((t.auth = { access_token: c }), l && (t.auth.dob = l))
                      : l && (t.auth = { dob: l }),
                    Array.isArray(d) && (t.session_tokens = In.underscoreObject(d)),
                    [
                      4,
                      this.httpClient.post('/v5/patient/login/:linkToken', {
                        urlParams: { linkToken: u },
                        data: t,
                      }),
                    ]
                  );
                case 1:
                  return (
                    (n = e.sent()).data &&
                      ((r = n.data),
                      (o = r.condensed_replays),
                      (i = void 0 !== o && o),
                      (s = r.processing_events),
                      (a = void 0 !== s && s),
                      this.host.configure({ condensedReplays: i, processingEvents: a })),
                    [2, n.data]
                  );
              }
            });
          });
        }),
        (ro.prototype.loginCheck = function (n, r) {
          return Ze(this, void 0, void 0, function () {
            var t;
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {}),
                    Array.isArray(r) && (t.session_tokens = In.underscoreObject(r)),
                    [
                      4,
                      this.httpClient.post('/v5/patient/login_check/:linkToken', {
                        urlParams: { linkToken: n },
                        data: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.requestAccessToken = function (t) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient/request_access_token/:linkToken', {
                      urlParams: { linkToken: t },
                      data: {},
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.csvUpload = function (t, n) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient/csv/upload', {
                      data: n,
                      headers: { 'TT-X-Organization-Key': t },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (ro.prototype.getWhiteLabel = function (n) {
          return Ze(this, void 0, void 0, function () {
            var t;
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/v5/patient/white_label/:organizationId', {
                      urlParams: { organizationId: n },
                      headers: { 'TT-X-Organization-Key': n },
                    }),
                  ];
                case 1:
                  return (t = e.sent()), [2, In.camelizeObject(t.data)];
              }
            });
          });
        }),
        (ro.prototype.setWhiteLabel = function (t, n) {
          return Ze(this, void 0, void 0, function () {
            return et(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/patient/white_label/:organizationId', {
                      urlParams: { organizationId: t },
                      headers: { 'TT-X-Organization-Key': t },
                      data: In.underscoreObject(n),
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        ro),
      sr =
        ((Ht = function (e, t) {
          return (Ht =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Ht(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      ar =
        (sr(no, (Kt = ue)),
        (no.prototype.create = function () {
          return (function (e, s, a, u) {
            return new (a = a || Promise)(function (n, t) {
              function r(e) {
                try {
                  i(u.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function o(e) {
                try {
                  i(u.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function i(e) {
                var t;
                e.done
                  ? n(e.value)
                  : ((t = e.value) instanceof a
                      ? t
                      : new a(function (e) {
                          e(t);
                        })
                    ).then(r, o);
              }
              i((u = u.apply(e, s || [])).next());
            });
          })(this, void 0, void 0, function () {
            var t;
            return (function (n, r) {
              var o,
                i,
                s,
                e,
                a = {
                  label: 0,
                  sent: function () {
                    if (1 & s[0]) throw s[1];
                    return s[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (e = { next: t(0), throw: t(1), return: t(2) }),
                'function' == typeof Symbol &&
                  (e[Symbol.iterator] = function () {
                    return this;
                  }),
                e
              );
              function t(t) {
                return function (e) {
                  return (function (t) {
                    if (o) throw new TypeError('Generator is already executing.');
                    for (; a; )
                      try {
                        if (
                          ((o = 1),
                          i &&
                            (s =
                              2 & t[0]
                                ? i.return
                                : t[0]
                                ? i.throw || ((s = i.return) && s.call(i), 0)
                                : i.next) &&
                            !(s = s.call(i, t[1])).done)
                        )
                          return s;
                        switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                          case 0:
                          case 1:
                            s = t;
                            break;
                          case 4:
                            return a.label++, { value: t[1], done: !1 };
                          case 5:
                            a.label++, (i = t[1]), (t = [0]);
                            continue;
                          case 7:
                            (t = a.ops.pop()), a.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                (6 !== t[0] && 2 !== t[0])
                              )
                            ) {
                              a = 0;
                              continue;
                            }
                            if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                              a.label = t[1];
                              break;
                            }
                            if (6 === t[0] && a.label < s[1]) {
                              (a.label = s[1]), (s = t);
                              break;
                            }
                            if (s && a.label < s[2]) {
                              (a.label = s[2]), a.ops.push(t);
                              break;
                            }
                            s[2] && a.ops.pop(), a.trys.pop();
                            continue;
                        }
                        t = r.call(n, a);
                      } catch (e) {
                        (t = [6, e]), (i = 0);
                      } finally {
                        o = s = 0;
                      }
                    if (5 & t[0]) throw t[1];
                    return { value: t[0] ? t[1] : void 0, done: !0 };
                  })([t, e]);
                };
              }
            })(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = this.httpClient.getAuthHeaders()),
                    [4, this.httpClient.get('/v2/qr_login_code/', { headers: t })]
                  );
                case 1:
                  return [2, e.sent().data.qr_key];
              }
            });
          });
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([_e()], no.prototype, 'create', null),
        no),
      ur =
        ((Vt = function (e, t) {
          return (Vt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Vt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      cr = [
        'messageId',
        'sender.name',
        'sender.title',
        'sender.department',
        'sender.mrn',
        'senderRoleDisplayName',
        'recipient.name',
        'recipient.title',
        'recipient.department',
        'recipient.mrn',
        'recipientRoleDisplayName',
        'group.name',
        'distributionList.name',
        'sentTimestamp',
        'attachment.hasAttachment',
        'recalledTimestamp',
        'forwardedMessageId',
        'expireTimestamp',
        'dndAutoForwardedFrom',
      ],
      lr = {
        script:
          "(doc['deliveredTimestamp'].empty ? '' : _source.deliveredTimestamp < _source.sentTimestamp ? _source.sentTimestamp : _source.deliveredTimestamp)",
      },
      dr = {
        script:
          "(doc['readTimestamp'].empty ? '' :_source.readTimestamp < _source.sentTimestamp ? _source.sentTimestamp : _source.readTimestamp)",
      },
      hr = [
        'sender.title',
        'recipient.title',
        'sender.department',
        'sender.mrn',
        'recipient.mrn',
        'senderRoleDisplayName',
        'recipient.department',
        'recipientRoleDisplayName',
        'sender.username',
        'recipient.username',
        'sender.verifiedEmails',
        'recipient.verifiedEmails',
        'sender.unverifiedEmails',
        'recipient.unverifiedEmails',
        'sender.verifiedPhones',
        'recipient.verifiedPhones',
        'sender.unverifiedPhones',
        'recipient.unverifiedPhones',
        'group.groupId',
        'group.name',
        'distributionList.distributionListId',
        'distributionList.name',
        'forwardedMessageId',
        'messageId',
      ],
      pr =
        (ur(to, (Gt = ue)),
        (to.prototype.fetchTransactions = function (a, e) {
          var u = e.page,
            c = e.size,
            l = e.startDate,
            d = e.endDate,
            h = e.query;
          return tt(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return nt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': a }),
                    (n = u * c - c),
                    (r = a),
                    (i = (o = h) && h.split(' ').join('*')),
                    (s = [
                      { range: { sentTimestamp: { from: l, to: d } } },
                      { match: { 'sender.organization.orgId': r } },
                      { constant_score: { filter: { missing: { field: 'message.hideMessage' } } } },
                      {
                        bool: {
                          should: [
                            {
                              query_string: {
                                query: '*' + i + '*',
                                fields: ['sender.name', 'recipient.name'],
                              },
                            },
                            { multi_match: { query: o, fields: hr } },
                          ],
                        },
                      },
                    ]),
                    [
                      4,
                      this.httpClient.post('/v2/report/messages', {
                        headers: t,
                        data: {
                          from: n,
                          size: c,
                          fields: cr,
                          script_fields: { deliveredTimestamp: lr, readTimestamp: dr },
                          sort: { sentTimestamp: { order: 'desc' } },
                          query: { bool: { must: s } },
                        },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([_e()], to.prototype, 'fetchTransactions', null),
        to),
      fr =
        ((Ft = function (e, t) {
          return (Ft =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Ft(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      vr =
        (fr(eo, (Bt = ue)),
        (eo.prototype.createP2PGroup = function (e) {
          var l = e.createdByUserId,
            d = e.name,
            t = e.replayHistory,
            h = void 0 !== t && t,
            n = e.memberIds,
            p = void 0 === n ? [] : n,
            f = e.organizationId;
          return ot(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = Bt.prototype.getVersion.call(this, 'roles.createP2PGroup').version),
                    (n = void 0 === t ? 'v2' : t),
                    (r = { 'TT-X-Organization-Key': f }),
                    (o = { created_by: l, members: p, name: d, replay_history: h }),
                    [
                      4,
                      this.httpClient.post('/:version/role_group', {
                        urlParams: { version: n },
                        headers: r,
                        data: o,
                      }),
                    ]
                  );
                case 1:
                  return (
                    (i = e.sent()),
                    (s = i.data),
                    (a = s.conversation_id),
                    (u = s.metadata),
                    (c = i.data.token),
                    [
                      2,
                      {
                        conversationId: a,
                        memberIds: p,
                        metadata: u,
                        name: d,
                        organizationId: f,
                        token: c,
                      },
                    ]
                  );
              }
            });
          });
        }),
        (eo.prototype.find = function (n, r) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [4, this.httpClient.get('/v2/role/:id', { urlParams: { id: n }, headers: t })]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (eo.prototype.createRole = function (e) {
          var o = e.description,
            i = e.escalationPolicy,
            s = e.name,
            a = e.noOwnersMessage,
            u = e.openAssignment,
            c = e.organizationId,
            l = e.ownerRequired,
            d = e.owners,
            h = e.replayHistory,
            p = e.tagColor,
            f = e.tagName,
            v = e.tagToken;
          return ot(this, void 0, void 0, function () {
            var t, n, r;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': c }),
                    (n = { display_name: s, open_assignment: u ? '1' : '0', replay_history: h }),
                    void 0 !== o && (n.description = o),
                    void 0 !== i && (n.escalation_policy = i),
                    void 0 !== a && (n.no_owners_message = a),
                    void 0 !== l && (n.owner_required = l ? '1' : '0'),
                    void 0 !== d && (n.owners = d),
                    void 0 !== p && (n.tag_color = p),
                    void 0 !== f && (n.tag_name = f),
                    void 0 !== v && (n.tag_id = v),
                    [4, this.httpClient.post('/v2/role', { headers: t, data: n })]
                  );
                case 1:
                  return ((r = e.sent()).token = r.headers['tt-x-role-token']), [2, r];
              }
            });
          });
        }),
        (eo.prototype.updateRole = function (o, e) {
          var i = e.description,
            s = e.name,
            a = e.noOwnersMessage,
            u = e.openAssignment,
            c = e.organizationId,
            l = e.ownerRequired,
            d = e.owners,
            h = e.replayHistory,
            p = e.tagColor,
            f = e.tagName,
            v = e.tagToken,
            y = e.escalationPolicy;
          return ot(this, void 0, void 0, function () {
            var t, n, r;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': c }),
                    (n = {}),
                    void 0 !== i && (n.description = i),
                    void 0 !== s && (n.display_name = s),
                    void 0 !== a && (n.no_owners_message = a),
                    void 0 !== y && (n.escalation_policy = y),
                    void 0 !== u && (n.open_assignment = u ? '1' : '0'),
                    void 0 !== l && (n.owner_required = l ? '1' : '0'),
                    void 0 !== d && (n.owners = d),
                    void 0 !== h && (n.replay_history = h),
                    void 0 !== p && (n.tag_color = p),
                    void 0 !== v && (n.tag_id = v),
                    void 0 !== f && (n.tag_name = f),
                    [
                      4,
                      this.httpClient.put('/v2/role/:token', {
                        urlParams: { token: o },
                        headers: t,
                        data: n,
                      }),
                    ]
                  );
                case 1:
                  return ((r = e.sent()).token = o), [2, r];
              }
            });
          });
        }),
        (eo.prototype.deleteRole = function (n, r) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.del('/v2/role/:token', {
                        urlParams: { token: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (eo.prototype.findSavedRoles = function (n, r) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.get('/v2/user/:userId/saved_roles', {
                        urlParams: { userId: n },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (eo.prototype.saveRole = function (n, r, o) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.post('/v2/user/:userId/saved_roles', {
                        urlParams: { userId: r },
                        data: { role_id: n },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (eo.prototype.removeSavedRole = function (n, r, o) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.del('/v2/user/:userId/saved_roles/:roleId', {
                        urlParams: { userId: r, roleId: n },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (eo.prototype.optIn = function (n, r, o) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.post('/v2/role/:roleId/members/:userId', {
                        urlParams: { roleId: n, userId: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (eo.prototype.optOut = function (n, r, o) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.del('/v2/role/:roleId/members/:userId', {
                        urlParams: { roleId: n, userId: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (eo.prototype.saveAwayResponse = function (n, r, o) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.post('/v2/role/:roleId/away', {
                        urlParams: { roleId: n },
                        headers: t,
                        data: { status: o },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (eo.prototype.removeAwayResponse = function (n, r) {
          return ot(this, void 0, void 0, function () {
            var t;
            return it(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.del('/v2/role/:roleId/away', {
                        urlParams: { roleId: n },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        rt([_e()], eo.prototype, 'find', null),
        rt([_e()], eo.prototype, 'findSavedRoles', null),
        eo),
      yr =
        ((Dt = function (e, t) {
          return (Dt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Dt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      gr =
        (yr(Zr, (qt = ue)),
        (Zr.prototype.findAll = function (n) {
          return st(this, void 0, void 0, function () {
            var t;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [4, this.httpClient.get('/v2/role/tags', { headers: t })]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Zr.prototype.createOrUpdateTag = function (r, o, i, s) {
          return st(this, void 0, void 0, function () {
            var t, n;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { color: r, name: o, organizationId: i }),
                    s ? [4, this.updateTag(s, t)] : [3, 2]
                  );
                case 1:
                  return (n = e.sent()), [3, 4];
                case 2:
                  return [4, this.createTag(t)];
                case 3:
                  (n = e.sent()), (e.label = 4);
                case 4:
                  return [2, n];
              }
            });
          });
        }),
        (Zr.prototype.createTag = function (e) {
          var r = e.color,
            o = e.name,
            i = e.organizationId;
          return st(this, void 0, void 0, function () {
            var t, n;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': i }),
                    [
                      4,
                      this.httpClient.post('/v2/tags', { data: { color: r, name: o }, headers: t }),
                    ]
                  );
                case 1:
                  return ((n = e.sent()).token = n.headers['tt-x-tag-id']), [2, n];
              }
            });
          });
        }),
        (Zr.prototype.updateTag = function (r, e) {
          var o = e.color,
            i = e.name,
            s = e.organizationId;
          return st(this, void 0, void 0, function () {
            var t, n;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': s }),
                    [
                      4,
                      this.httpClient.put('/v2/tags/:token', {
                        urlParams: { token: r },
                        data: { color: o, name: i },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return ((n = e.sent()).token = r), [2, n];
              }
            });
          });
        }),
        (Zr.prototype.destroy = function (n, r) {
          return st(this, void 0, void 0, function () {
            var t;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.del('/v2/tags/:token', {
                        urlParams: { token: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Zr.prototype.findColors = function (n) {
          return st(this, void 0, void 0, function () {
            var t;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.get('/v2/tag/color_list/:organizationId', {
                        urlParams: { organizationId: n },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Zr.prototype.findTag = function (n, r) {
          return st(this, void 0, void 0, function () {
            var t;
            return at(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.get('/v2/tags/:tagId', {
                        urlParams: { tagId: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([_e()], Zr.prototype, 'findAll', null),
        Zr),
      mr =
        ((Lt = function (e, t) {
          return (Lt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Lt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      _r = ['user', 'distributionList'],
      br =
        (mr(Jr, (Ut = ue)),
        (Jr.prototype.findAll = function (s) {
          return (
            void 0 === s && (s = { organizationId: null }),
            ut(this, void 0, void 0, function () {
              var t, n, r, o, i;
              return ct(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = Ut.prototype.getVersion.call(this, 'conversations.findAll').version),
                      (o = { render_metadata: 'true' }),
                      'v5' === (n = void 0 === t ? 'v2' : t) &&
                        ((r = s.organizationId),
                        (o.mark_as_delivered = 'true'),
                        (o.paginated = 'true'),
                        (o.organization_id = r || void 0)),
                      [
                        4,
                        this.httpClient.get('/:version/roster', {
                          query: o,
                          urlParams: { version: n },
                        }),
                      ]
                    );
                  case 1:
                    return (i = e.sent()).data.continuation
                      ? [4, this._findAllPaginated(i.data.continuation, r, i.data.items)]
                      : [3, 3];
                  case 2:
                    return [2, e.sent()];
                  case 3:
                    return [2, i.data.items || i.data];
                }
              });
            })
          );
        }),
        (Jr.prototype._findAllPaginated = function (n, r, o) {
          return ut(this, void 0, void 0, function () {
            var t;
            return ct(this, function (e) {
              switch (e.label) {
                case 0:
                  return null === n
                    ? [2, o]
                    : [
                        4,
                        this.httpClient.get('/v5/roster', {
                          query: {
                            render_metadata: 'true',
                            mark_as_delivered: 'true',
                            paginated: 'true',
                            continuation: encodeURI(n),
                            organization_id: r || void 0,
                          },
                        }),
                      ];
                case 1:
                  return (
                    (t = e.sent()),
                    (o = o.concat(t.data.items)),
                    [2, this._findAllPaginated(t.data.continuation, r, o)]
                  );
              }
            });
          });
        }),
        (Jr.prototype.add = function (r, o, i) {
          return ut(this, void 0, void 0, function () {
            var t, n;
            return ct(this, function (e) {
              switch (e.label) {
                case 0:
                  return ee.a.includes(_r, r)
                    ? ((t = {}),
                      i && (t['TT-X-Organization-Key'] = i),
                      (n = this.__typeToNS(r)),
                      [
                        4,
                        this.httpClient.post('/v2/roster', {
                          headers: t,
                          data: { entity: o, type: n },
                        }),
                      ])
                    : [2];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Jr.prototype.remove = function (r, o, i) {
          return ut(this, void 0, void 0, function () {
            var t, n;
            return ct(this, function (e) {
              switch (e.label) {
                case 0:
                  return ee.a.includes(_r, r)
                    ? ((t = {}),
                      (n = this.__typeToNS(r)),
                      i && ((t['TT-X-Organization-Key'] = i), (t['TT-X-Type'] = n)),
                      [
                        4,
                        this.httpClient.del('/v2/roster/:counterPartyId', {
                          headers: t,
                          urlParams: { counterPartyId: o },
                          data: { type: n },
                        }),
                      ])
                    : [2];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Jr.prototype.__typeToNS = function (e) {
          return wr[e];
        }),
        Jr),
      wr = { user: 'tigertext:entity:account', distributionList: 'tigertext:entity:list' },
      Ir =
        ((xt = function (e, t) {
          return (xt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          xt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Or =
        (Ir(Yr, (Nt = ue)),
        (Yr.prototype.findIntegrationIds = function (n) {
          return lt(this, void 0, void 0, function () {
            var t;
            return dt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { Accept: '*', 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.post('/v1/integrations/scheduler/configs/info/org', {
                        headers: t,
                        data: { org: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Yr.prototype.sendCsvSchedule = function (s, a, u, c) {
          return lt(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return dt(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = {
                    'Content-Type': 'text/csv',
                    'TT-X-Organization-Key': u,
                    'TT-X-Integration-Id': s,
                    'TT-X-Timezone': c,
                  }),
                    (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 3, , 4]),
                    [
                      4,
                      this.httpClient.post('/v1/integrations/scheduler/webhook/csv', {
                        data: a,
                        headers: t,
                      }),
                    ]
                  );
                case 2:
                  return (o = e.sent()), (n = o.data), (r = o.status), [3, 4];
                case 3:
                  return 400 !== (i = e.sent()).status
                    ? [2, Promise.reject(i)]
                    : ((n = i.response && (i.response.body || i.response.text)),
                      (r = i.status),
                      [3, 4]);
                case 4:
                  return [2, { json: n, status: r }];
              }
            });
          });
        }),
        (Yr.prototype.findCsv = function (n, r) {
          return lt(this, void 0, void 0, function () {
            var t;
            return dt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.post('/v1/integrations/scheduler/webhook/csv/download', {
                        headers: t,
                        data: { org: n, id: r },
                        resFormat: 'text',
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Yr.prototype.clearSchedule = function (n, r) {
          return lt(this, void 0, void 0, function () {
            var t;
            return dt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { Accept: '*', 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.post('/v1/integrations/scheduler/configs/truncate', {
                        headers: t,
                        data: { id: r },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().status];
              }
            });
          });
        }),
        Yr),
      Tr =
        ((kt = function (e, t) {
          return (kt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          kt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Er = function () {
        return (Er =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Rr =
        (Tr(Qr, (zt = ue)),
        (Qr.prototype.batch = function (e) {
          var n = e.ids,
            r = e.operation,
            o = e.organizationId;
          return pt(this, void 0, void 0, function () {
            var t;
            return ft(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.patch('/v5/schedule_message', {
                        data: { ids: n, operation: r },
                        headers: t,
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Qr.prototype.create = function (e) {
          var r = e.attachment,
            o = e.body,
            i = e.end_date,
            s = e.network,
            a = e.no_reply,
            u = e.organizationId,
            c = e.recipients,
            l = e.repeating,
            d = e.send_now,
            h = e.start_date,
            p = e.start_time,
            f = e.template_id,
            v = e.timezone_name;
          return pt(this, void 0, void 0, function () {
            var t, n;
            return ft(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {}),
                    (n = { 'TT-X-Organization-Key': u }),
                    r && (t.attachment = r),
                    [
                      4,
                      this.httpClient.post('/v5/schedule_message', {
                        files: t,
                        data: Er(
                          Er(
                            Er(
                              Er(
                                Er(
                                  Er(
                                    Er(Er({}, t.attachment ? null : { attachment: r }), {
                                      body: o,
                                    }),
                                    l ? { end_date: i } : null
                                  ),
                                  { network: s, no_reply: a, recipients: c }
                                ),
                                l ? { repeating: l } : null
                              ),
                              { send_now: d, start_date: h, start_time: p }
                            ),
                            f ? { template_id: f } : null
                          ),
                          { timezone_name: v }
                        ),
                        headers: n,
                        timeout: !(r || f),
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Qr.prototype.delete = function (n, r) {
          return pt(this, void 0, void 0, function () {
            var t;
            return ft(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.del('/v5/schedule_message/:id', {
                        headers: t,
                        urlParams: { id: n },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Qr.prototype.downloadScheduledMessageFile = function (e) {
          var r = e.scheduleId,
            o = e.fileName,
            i = e.organizationId;
          return pt(this, void 0, void 0, function () {
            var t, n;
            return ft(this, function (e) {
              return (
                (t = { 'TT-X-Organization-Key': i }),
                (n = '/v5/schedule_message/' + r + '/attachment/' + o),
                [2, this.httpClient.downloadFileBlob(n, { headers: t })]
              );
            });
          });
        }),
        (Qr.prototype.find = function (e) {
          var n = e.id,
            r = e.organizationId,
            o = e.isHistoryCategory;
          return pt(this, void 0, void 0, function () {
            var t;
            return ft(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.get('/v5/schedule_message/:id?history=' + o, {
                        headers: t,
                        urlParams: { id: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Qr.prototype.findCoarseTimezone = function (n, r) {
          return pt(this, void 0, void 0, function () {
            var t;
            return ft(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.get('/v5/timezone/:timezone', {
                        headers: t,
                        urlParams: { timezone: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Qr.prototype.update = function (e) {
          var r = e.attachment,
            o = e.body,
            i = e.end_date,
            s = e.id,
            a = e.organizationId,
            u = e.repeating,
            c = e.start_date,
            l = e.start_time,
            d = e.template_id,
            h = e.timezone_name;
          return pt(this, void 0, void 0, function () {
            var t, n;
            return ft(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {}),
                    (n = { 'TT-X-Organization-Key': a }),
                    r && (t.attachment = r),
                    [
                      4,
                      this.httpClient.put('/v5/schedule_message/:id', {
                        files: t,
                        data: Er(
                          Er(
                            Er(
                              Er(
                                Er(
                                  Er(Er({}, t.attachment ? null : { attachment: r }), { body: o }),
                                  u ? { end_date: i } : null
                                ),
                                u ? { repeating: u } : null
                              ),
                              { start_date: c, start_time: l }
                            ),
                            d ? { template_id: d } : null
                          ),
                          { timezone_name: h }
                        ),
                        headers: n,
                        timeout: !(r || d),
                        urlParams: { id: s },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        ht([_e()], Qr.prototype, 'delete', null),
        ht([_e()], Qr.prototype, 'downloadScheduledMessageFile', null),
        ht([_e()], Qr.prototype, 'find', null),
        ht([_e()], Qr.prototype, 'update', null),
        Qr),
      Ar =
        ((Mt = function (e, t) {
          return (Mt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Mt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Cr =
        (Ar(Xr, (jt = ue)),
        (Xr.prototype.query = function (r) {
          return vt(this, void 0, void 0, function () {
            var t, n;
            return yt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = jt.prototype.getVersion.call(this, 'search.query').version),
                    (n = void 0 === t ? 'v2' : t),
                    [
                      4,
                      this.httpClient.post('/:version/search', {
                        data: r,
                        urlParams: { version: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Xr.prototype.patientQuery = function (t) {
          return vt(this, void 0, void 0, function () {
            return yt(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.httpClient.post('/v5/patient/search', { data: t })];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        Xr),
      Sr =
        ((Pt = function (e, t) {
          return (Pt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Pt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Pr = se,
      jr = 'teams.create',
      Mr =
        (Sr(Wr, (St = ue)),
        (Wr.prototype.find = function (r, e) {
          var o = e.organizationId;
          return gt(this, void 0, void 0, function () {
            var t, n;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, 'teams.find').version),
                    (n = void 0 === t ? Pr : t),
                    [
                      4,
                      this.httpClient.get('/:version/team/:team_id', {
                        headers: { 'TT-X-Organization-Key': o },
                        urlParams: { team_id: r, version: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Wr.prototype.create = function (e) {
          var s = e.avatar,
            t = e.canMembersLeave,
            a = void 0 === t || t,
            n = e.canRequestToJoin,
            u = void 0 === n || n,
            c = e.description,
            l = e.displayName,
            r = e.memberIds,
            d = void 0 === r ? [] : r,
            h = e.organizationId;
          return gt(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, jr).version),
                    (n = void 0 === t ? Pr : t),
                    (r = {}),
                    (o = {
                      can_members_leave: a,
                      can_request_to_join: u,
                      display_name: l,
                      members: d,
                    }),
                    (i = {}),
                    s && (i.avatar = s),
                    c && (o.description = c),
                    h && (r['TT-X-Organization-Key'] = h),
                    [
                      4,
                      this.httpClient.post('/:version/team', {
                        urlParams: { version: n },
                        headers: r,
                        data: o,
                        files: i,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Wr.prototype.update = function (e) {
          var s = e.avatar,
            t = e.canMembersLeave,
            a = void 0 === t || t,
            n = e.canRequestToJoin,
            u = void 0 === n || n,
            c = e.description,
            l = e.displayName,
            d = e.id,
            r = e.memberIds,
            h = void 0 === r ? [] : r,
            p = e.organizationId;
          return gt(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, 'teams.update').version),
                    (n = void 0 === t ? Pr : t),
                    (r = {}),
                    (o = {
                      can_members_leave: a,
                      can_request_to_join: u,
                      display_name: l,
                      members: h,
                    }),
                    (i = {}),
                    s && (i.avatar = s),
                    c && (o.description = c),
                    p && (r['TT-X-Organization-Key'] = p),
                    [
                      4,
                      this.httpClient.post('/:version/team/:id', {
                        urlParams: { id: d, version: n },
                        headers: r,
                        data: o,
                        files: i,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Wr.prototype.delete = function (r, e) {
          var o = e.organizationId;
          return gt(this, void 0, void 0, function () {
            var t, n;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, jr).version),
                    (n = void 0 === t ? Pr : t),
                    [
                      4,
                      this.httpClient.del('/:version/team/:id', {
                        headers: { 'TT-X-Organization-Key': o },
                        urlParams: { version: n, id: r },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().status];
              }
            });
          });
        }),
        (Wr.prototype.requestToJoin = function (r, e) {
          var o = e.organizationId,
            i = e.requestedById;
          return gt(this, void 0, void 0, function () {
            var t, n;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, jr).version),
                    (n = void 0 === t ? Pr : t),
                    [
                      4,
                      this.httpClient.post('/:version/team/:id/request', {
                        headers: { 'TT-X-Organization-Key': o },
                        urlParams: { id: r, version: n },
                        data: { requested_by: i },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().status];
              }
            });
          });
        }),
        (Wr.prototype.updateJoinRequest = function (r, e) {
          var o = e.organizationId,
            i = e.teamId,
            s = e.handledAsId,
            a = e.status;
          return gt(this, void 0, void 0, function () {
            var t, n;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, jr).version),
                    (n = void 0 === t ? Pr : t),
                    [
                      4,
                      this.httpClient.post('/:version/team/:team_id/request/:request_id', {
                        headers: { 'TT-X-Organization-Key': o },
                        urlParams: { version: n, team_id: i, request_id: r },
                        data: { handled_as: s, status: a },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Wr.prototype.leave = function (r, e) {
          var o = e.organizationId;
          return gt(this, void 0, void 0, function () {
            var t, n;
            return mt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = St.prototype.getVersion.call(this, 'teams.leave').version),
                    (n = void 0 === t ? Pr : t),
                    [
                      4,
                      this.httpClient.post('/:version/team/:team_id/leave', {
                        headers: { 'TT-X-Organization-Key': o },
                        urlParams: { team_id: r, version: n },
                        data: {},
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().status];
              }
            });
          });
        }),
        Wr),
      zr =
        ((Ct = function (e, t) {
          return (Ct =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Ct(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      kr =
        (zr($r, (At = ue)),
        ($r.prototype.getTwilioNumbers = function (n, r) {
          return _t(this, void 0, void 0, function () {
            var t;
            return bt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.post('/v2/twilio/numbers', {
                        headers: t,
                        data: { area_code: r },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        ($r.prototype.assignPagerNumber = function (n, r, o) {
          return _t(this, void 0, void 0, function () {
            var t;
            return bt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.post(
                        '/v2/user/:roleToken/organization/:organizationId/pagers?process_number=true',
                        {
                          headers: t,
                          urlParams: { organizationId: n, roleToken: o },
                          data: { pager_numbers: r },
                        }
                      ),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        ($r.prototype.removePagerNumber = function (n, r, o) {
          return _t(this, void 0, void 0, function () {
            var t;
            return bt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': n }),
                    [
                      4,
                      this.httpClient.del(
                        '/v2/user/:roleToken/organization/:organizationId/pagers/:number?process_number=true',
                        { headers: t, urlParams: { organizationId: n, roleToken: o, number: r } }
                      ),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        $r),
      Nr =
        ((Rt = function (e, t) {
          return (Rt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Rt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      xr =
        (Nr(Hr, (Et = ue)),
        (Hr.prototype.startTyping = function (n, r, o) {
          return wt(this, void 0, void 0, function () {
            var t;
            return It(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { recipient: n }),
                    r && r !== this.host.currentUserId && (t.proxy_token = r),
                    [
                      4,
                      this.httpClient.post('/v2/message/typing', {
                        data: t,
                        headers: { 'TT-X-Organization-Key': o },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Hr.prototype.stopTyping = function (t, n) {
          return wt(this, void 0, void 0, function () {
            return It(this, function (e) {
              switch (e.label) {
                case 0:
                  return n
                    ? [
                        4,
                        this.httpClient.del('/v2/message/typing/:recipientId/:senderId', {
                          urlParams: { recipientId: t, senderId: n },
                        }),
                      ]
                    : [3, 2];
                case 1:
                  return e.sent(), [3, 4];
                case 2:
                  return [
                    4,
                    this.httpClient.del('/v2/message/typing/:recipientId', {
                      urlParams: { recipientId: t },
                    }),
                  ];
                case 3:
                  e.sent(), (e.label = 4);
                case 4:
                  return [2];
              }
            });
          });
        }),
        Hr),
      Ur =
        ((Tt = function (e, t) {
          return (Tt =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Tt(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Lr =
        (Ur(Kr, (Ot = ue)),
        (Kr.prototype.findAll = function (t, n) {
          return (function (e, s, a, u) {
            return new (a = a || Promise)(function (n, t) {
              function r(e) {
                try {
                  i(u.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function o(e) {
                try {
                  i(u.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function i(e) {
                var t;
                e.done
                  ? n(e.value)
                  : ((t = e.value) instanceof a
                      ? t
                      : new a(function (e) {
                          e(t);
                        })
                    ).then(r, o);
              }
              i((u = u.apply(e, s || [])).next());
            });
          })(this, void 0, void 0, function () {
            return (function (n, r) {
              var o,
                i,
                s,
                e,
                a = {
                  label: 0,
                  sent: function () {
                    if (1 & s[0]) throw s[1];
                    return s[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (e = { next: t(0), throw: t(1), return: t(2) }),
                'function' == typeof Symbol &&
                  (e[Symbol.iterator] = function () {
                    return this;
                  }),
                e
              );
              function t(t) {
                return function (e) {
                  return (function (t) {
                    if (o) throw new TypeError('Generator is already executing.');
                    for (; a; )
                      try {
                        if (
                          ((o = 1),
                          i &&
                            (s =
                              2 & t[0]
                                ? i.return
                                : t[0]
                                ? i.throw || ((s = i.return) && s.call(i), 0)
                                : i.next) &&
                            !(s = s.call(i, t[1])).done)
                        )
                          return s;
                        switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                          case 0:
                          case 1:
                            s = t;
                            break;
                          case 4:
                            return a.label++, { value: t[1], done: !1 };
                          case 5:
                            a.label++, (i = t[1]), (t = [0]);
                            continue;
                          case 7:
                            (t = a.ops.pop()), a.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                (6 !== t[0] && 2 !== t[0])
                              )
                            ) {
                              a = 0;
                              continue;
                            }
                            if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                              a.label = t[1];
                              break;
                            }
                            if (6 === t[0] && a.label < s[1]) {
                              (a.label = s[1]), (s = t);
                              break;
                            }
                            if (s && a.label < s[2]) {
                              (a.label = s[2]), a.ops.push(t);
                              break;
                            }
                            s[2] && a.ops.pop(), a.trys.pop();
                            continue;
                        }
                        t = r.call(n, a);
                      } catch (e) {
                        (t = [6, e]), (i = 0);
                      } finally {
                        o = s = 0;
                      }
                    if (5 & t[0]) throw t[1];
                    return { value: t[0] ? t[1] : void 0, done: !0 };
                  })([t, e]);
                };
              }
            })(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/v2/user/:userId/organization/:organizationId/roles', {
                      urlParams: { userId: t, organizationId: n },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data.roles];
              }
            });
          });
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([_e()], Kr.prototype, 'findAll', null),
        Kr),
      qr = d(14),
      Dr = d.n(qr),
      Br = d(10),
      Fr = d.n(Br),
      Gr = d(15),
      Vr = d.n(Gr);
    function Kr() {
      return (null !== Ot && Ot.apply(this, arguments)) || this;
    }
    function Hr() {
      return (null !== Et && Et.apply(this, arguments)) || this;
    }
    function $r() {
      return (null !== At && At.apply(this, arguments)) || this;
    }
    function Wr() {
      return (null !== St && St.apply(this, arguments)) || this;
    }
    function Xr() {
      return (null !== jt && jt.apply(this, arguments)) || this;
    }
    function Qr() {
      return (null !== zt && zt.apply(this, arguments)) || this;
    }
    function Yr() {
      return (null !== Nt && Nt.apply(this, arguments)) || this;
    }
    function Jr() {
      return (null !== Ut && Ut.apply(this, arguments)) || this;
    }
    function Zr() {
      return (null !== qt && qt.apply(this, arguments)) || this;
    }
    function eo() {
      return (null !== Bt && Bt.apply(this, arguments)) || this;
    }
    function to() {
      var e = (null !== Gt && Gt.apply(this, arguments)) || this;
      return (
        (e.generateLookerEmbed = function (r, o) {
          return tt(e, void 0, void 0, function () {
            var t, n;
            return nt(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': r }),
                    [
                      4,
                      this.httpClient.post('/v2/looker', {
                        headers: t,
                        data: { dashboard_type: o },
                      }),
                    ]
                  );
                case 1:
                  return [2, (n = e.sent().data) && n.looker_url];
              }
            });
          });
        }),
        e
      );
    }
    function no() {
      return (null !== Kt && Kt.apply(this, arguments)) || this;
    }
    function ro() {
      return (null !== $t && $t.apply(this, arguments)) || this;
    }
    function oo() {
      return (null !== Xt && Xt.apply(this, arguments)) || this;
    }
    function io() {
      return (null !== Yt && Yt.apply(this, arguments)) || this;
    }
    function so() {
      return (null !== Zt && Zt.apply(this, arguments)) || this;
    }
    function ao() {
      return (null !== tn && tn.apply(this, arguments)) || this;
    }
    function uo() {
      return (null !== rn && rn.apply(this, arguments)) || this;
    }
    function co() {
      return (null !== sn && sn.apply(this, arguments)) || this;
    }
    function lo() {
      return (null !== un && un.apply(this, arguments)) || this;
    }
    function ho() {
      return (null !== ln && ln.apply(this, arguments)) || this;
    }
    function po() {
      return (null !== hn && hn.apply(this, arguments)) || this;
    }
    function fo() {
      return (null !== fn && fn.apply(this, arguments)) || this;
    }
    function vo() {
      return (null !== yn && yn.apply(this, arguments)) || this;
    }
    function yo() {
      return (null !== mn && mn.apply(this, arguments)) || this;
    }
    function go() {
      return (null !== bn && bn.apply(this, arguments)) || this;
    }
    function mo(e) {
      return e && /^\+?([0-9]{7,15})$/.test(e.replace(/[-.● ()]/g, ''));
    }
    function _o(e) {
      var t = e.replace(/\D/g, '');
      return /^\+?1/.test(e)
        ? t.replace(/^(1)(\d{3})(\d{3})(\d{4})/, '+$1 $2 $3 $4')
        : ('1' === t[0] && (t = t.slice(1)), t.replace(/^(\d{3})(\d{3})(\d{4})/, '$1 $2 $3'));
    }
    function bo(e) {
      var t = e.replace(/\D/g, '');
      return '1' === t[0] && (t = t.slice(1)), t.replace(/^(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
    }
    function wo(e) {
      return e.replace(/\D/g, '');
    }
    function Io(e) {
      var t = e.replace(/\D/g, '');
      return '1' !== t[0] && (t = '1' + t), '+' + t;
    }
    function Oo(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function To(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Eo(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ro(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Ao(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Co(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var So,
      Po,
      jo,
      Mo,
      zo =
        ((Mo = function (e, t) {
          return (Mo =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Mo(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      ko = function () {
        return (ko =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      No = 'user.find',
      xo = new Vr.a.MD5(),
      Uo =
        (zo(Go, (jo = ue)),
        (Go.getSignInAuthHeader = function (e, t, n) {
          var r = [e, t, n].join(':');
          return 'XMPP-Simple ' + Fr()(r);
        }),
        (Go.prototype.getAnonymousAuthHeader = function (e) {
          var t = this.config.signUpHashKey,
            n = this.config.signUpHashSalt,
            r = [t, n, e].join(':'),
            o = xo.hex(r),
            i = [o.substr(0, 2), o.substr(o.length - 2)].join(''),
            s = [this.config.productKey, t, n, e, i].join(':');
          return 'XMPP-Anonymous ' + Fr()(s);
        }),
        (Go.prototype.getSignInAuthHeader = function () {
          for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
          return (e = this.constructor).getSignInAuthHeader.apply(e, t);
        }),
        (Go.prototype.checkLogin = function (r, o) {
          return To(this, void 0, void 0, function () {
            var t, n;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { Authorization: this.getAnonymousAuthHeader(o.udid) }),
                    (n = { device: o.udid, tt_product_version: this.config.partnerName }),
                    mo(r) ? (n.phones = Io(r)) : (n.emails = r),
                    [4, this.httpClient.get('/v4/login_check', { headers: t, query: n })]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.signUp = function (r) {
          return To(this, void 0, void 0, function () {
            var t, n;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { Authorization: this.getAnonymousAuthHeader(r.udid) }),
                    (n = {
                      primary_email: r.email,
                      unique_id: r.email,
                      password: r.password,
                      push_routing: this.config.pushAgent,
                      product: this.config.productKey,
                      country_code: r.countryCode,
                      device_id: r.udid,
                      version: this.config.version,
                    }),
                    [4, this.httpClient.post('/v2/signup', { headers: t, data: n })]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.signIn = function (u, c) {
          return To(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {
                      device_id: c.udid,
                      metadata: {
                        device_type: 'js_sdk',
                        device_version: '12.4.0',
                        tt_product_version: this.config.partnerName,
                        user_agent: global.navigator && global.navigator.userAgent,
                      },
                      push_routing: this.config.pushAgent,
                      version: this.config.version,
                      want_condensed_replays: this.config.wantCondensedReplays,
                      want_processing_events: this.config.wantCondensedReplays,
                    }),
                    [4, this.httpClient.post('/v5/login', { headers: u, data: t })]
                  );
                case 1:
                  return (
                    (n = e.sent()).data &&
                      n.data.settings &&
                      ((r = n.data.settings),
                      (o = r.condensed_replays),
                      (i = void 0 !== o && o),
                      (s = r.processing_events),
                      (a = void 0 !== s && s),
                      this.host.configure({ condensedReplays: i, processingEvents: a })),
                    [2, n]
                  );
              }
            });
          });
        }),
        (Go.prototype.signOut = function () {
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.httpClient.post('/v2/logout')];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.lookup = function (o) {
          return To(this, void 0, void 0, function () {
            var t, n, r;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = jo.prototype.getVersion.call(this, No).version),
                    (n = void 0 === t ? 'v2' : t),
                    (r = { display_name: o }),
                    Fn()(o) ? (r.email_address = o) : mo(o) && (r.phone_number = Io(o)),
                    [
                      4,
                      this.httpClient.post('/:version/user_lookup/:id', {
                        urlParams: { id: o, version: n },
                        data: r,
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Go.prototype.wipe = function (t) {
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.httpClient.post('/v2/wipe', { data: {}, query: { token: t } })];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.find = function (o, e) {
          var i = (void 0 === e ? {} : e).organizationId;
          return To(this, void 0, void 0, function () {
            var t, n, r;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = jo.prototype.getVersion.call(this, No).version),
                    (n = void 0 === t ? 'v2' : t),
                    Fn()(o) && (o = o.toLowerCase()),
                    (r = i ? { 'TT-X-Organization-Key': i } : null),
                    [
                      4,
                      this.httpClient.get('/:version/user/:id', {
                        headers: r,
                        urlParams: { id: o, version: n },
                        query: { render_metadata: !0 },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Go.prototype.findMe = function (e) {
          var o = (void 0 === e ? {} : e).organizationId;
          return To(this, void 0, void 0, function () {
            var t, n, r;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = jo.prototype.getVersion.call(this, 'user.findMe').version),
                    (n = void 0 === t ? 'v2' : t),
                    (r = o ? { 'TT-X-Organization-Key': o } : null),
                    [
                      4,
                      this.httpClient.get('/:version/user', {
                        headers: r,
                        query: { render_metadata: !0 },
                        urlParams: { version: n },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Go.prototype.update = function (r, e) {
          var t = e.firstName,
            o = void 0 === t ? void 0 : t,
            n = e.lastName,
            i = void 0 === n ? void 0 : n,
            s = e.displayName,
            a = void 0 === s ? void 0 : s,
            u = e.status,
            c = void 0 === u ? void 0 : u,
            l = e.dnd,
            d = void 0 === l ? void 0 : l,
            h = e.dndText,
            p = void 0 === h ? void 0 : h,
            f = e.avatarFile,
            v = void 0 === f ? void 0 : f,
            y = e.removeAvatar,
            g = void 0 === y ? void 0 : y;
          return To(this, void 0, void 0, function () {
            var t, n;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = {}),
                    g ? (t.avatar = null) : v && (t.avatar = v),
                    (n = Dr.a.call(
                      {
                        first_name: o,
                        last_name: i,
                        display_name: a,
                        status: c,
                        dnd: d,
                        dnd_text: p,
                      },
                      function (e, t) {
                        return void 0 === e;
                      }
                    )),
                    [
                      4,
                      this.httpClient.post('/v2/user/:id/settings', {
                        urlParams: { id: r },
                        data: n,
                        files: t,
                      }),
                    ]
                  );
                case 1:
                  return (
                    e.sent(), [2, ko({ id: r }, v && v.preview ? { avatarUrl: v.preview } : null)]
                  );
              }
            });
          });
        }),
        (Go.prototype.updatePassword = function (n, r, o, i) {
          return To(this, void 0, void 0, function () {
            var t;
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { Authorization: this.getSignInAuthHeader(i, n, r) }),
                    [
                      4,
                      this.httpClient.post('/v2/user/:id/password', {
                        urlParams: { id: n },
                        headers: t,
                        data: { password: o },
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.setAutoForward = function (t, n, e) {
          var r = e.dnd,
            o = e.receiverId;
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/user/:userId/organization/:organizationId', {
                      urlParams: { userId: t, organizationId: n },
                      data: { dnd: r, dnd_auto_forward_receiver: o },
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.removeAutoForward = function (t, n) {
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.del(
                      '/v2/user/:userId/organization/:organizationId/dnd_auto_forward_receiver',
                      { urlParams: { userId: t, organizationId: n } }
                    ),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.setAwayMessage = function (t, n, e) {
          var r = e.dnd,
            o = e.dndText;
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v5/user/:userId/organization/:organizationId', {
                      urlParams: { userId: t, organizationId: n },
                      data: { network: { patient: { dnd: r, dnd_text: o } } },
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Go.prototype.setEulaAccepted = function (t, n, r) {
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/user/:userId/organization/:organizationId', {
                      urlParams: { userId: t, organizationId: n },
                      data: { eula: !r },
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Go.prototype.getPreferences = function (t) {
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/v2/user/:userId/preferences', {
                      urlParams: { userId: t },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        (Go.prototype.editPreferences = function (e) {
          var t = e.organizationId,
            n = e.quickReplies,
            r = e.userId;
          return To(this, void 0, void 0, function () {
            return Eo(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.post('/v2/user/:userId/preferences', {
                      headers: { 'TT-X-Organization-Key': t },
                      data: In.underscoreObject({ quickReplies: n }),
                      urlParams: { userId: r },
                    }),
                  ];
                case 1:
                  return [2, e.sent().data];
              }
            });
          });
        }),
        Oo([_e({ httpStatusCodes: [400] })], Go.prototype, 'lookup', null),
        Oo([_e()], Go.prototype, 'find', null),
        Oo([_e()], Go.prototype, 'getPreferences', null),
        Oo([_e()], Go.prototype, 'editPreferences', null),
        Go),
      Lo =
        ((Po = function (e, t) {
          return (Po =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Po(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      qo = window.location.href.includes('FAKE-VISIT'),
      Do =
        (Lo(Fo, (So = ue)),
        (Fo.prototype.findAll = function (n) {
          return Ao(this, void 0, void 0, function () {
            var t;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.httpClient.get('/vwr/v1/rooms', {
                      headers: { 'TT-X-Organization-Key': n },
                    }),
                  ];
                case 1:
                  return (t = e.sent()), [2, In.camelizeObject(t.data)];
              }
            });
          });
        }),
        (Fo.prototype.find = function (r, o) {
          return Ao(this, void 0, void 0, function () {
            var t, n;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.get('/vwr/v1/room/:id', { headers: t, urlParams: { id: r } }),
                    ]
                  );
                case 1:
                  return (n = e.sent()), [2, In.camelizeObject(n.data)];
              }
            });
          });
        }),
        (Fo.prototype.create = function (o, e) {
          var i = e.staff,
            s = e.name;
          return Ao(this, void 0, void 0, function () {
            var t, n, r;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    (n = In.underscoreObject({ staff: i, name: s })),
                    [4, this.httpClient.post('/vwr/v1/room', { headers: t, data: n })]
                  );
                case 1:
                  return (r = e.sent()), [2, In.camelizeObject(r.data)];
              }
            });
          });
        }),
        (Fo.prototype.update = function (o, i, e) {
          var s = e.staff,
            a = e.name,
            u = e.status,
            c = e.version;
          return Ao(this, void 0, void 0, function () {
            var t, n, r;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': i }),
                    (n = In.underscoreObject({ staff: s, name: a, status: u, version: c })),
                    [
                      4,
                      this.httpClient.put('/vwr/v1/room/:id', {
                        headers: t,
                        urlParams: { id: o },
                        data: n,
                      }),
                    ]
                  );
                case 1:
                  return (r = e.sent()), [2, In.camelizeObject(r.data)];
              }
            });
          });
        }),
        (Fo.prototype.delete = function (r, o) {
          return Ao(this, void 0, void 0, function () {
            var t, n;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.del('/vwr/v1/room/:id', { headers: t, urlParams: { id: r } }),
                    ]
                  );
                case 1:
                  return (n = e.sent()), [2, In.camelizeObject(n.data)];
              }
            });
          });
        }),
        (Fo.prototype.createVisit = function (n) {
          return Ao(this, void 0, void 0, function () {
            var t;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return qo
                    ? [
                        2,
                        {
                          visitId: 'v123456',
                          roomId: 'r123456',
                          orgLogo:
                            'https://logos-med-tc.s3.amazonaws.com/dev/logos/YXhLQMGnJ4RazqVVUmrHbUy3_1.png',
                          orgName: 'PF VWR Org',
                        },
                      ]
                    : [
                        4,
                        this.httpClient.get('/vwr/v1/visit/join?join_id=:joinId', {
                          urlParams: { joinId: n },
                        }),
                      ];
                case 1:
                  return (t = e.sent()), [2, In.camelizeObject(t.data)];
              }
            });
          });
        }),
        (Fo.prototype.editVisit = function (e) {
          var r = e.visitId,
            o = e.firstName,
            i = e.lastName,
            s = e.mobilePhone,
            a = e.visitReason,
            u = e.createResources;
          return Ao(this, void 0, void 0, function () {
            var t, n;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return qo
                    ? [2, { groupId: 'g123456', conversationId: 'c123456', accountId: 'a123456' }]
                    : ((t = In.underscoreObject({
                        visitId: r,
                        firstName: o,
                        lastName: i,
                        mobilePhone: s,
                        visitReason: a,
                        createResources: u,
                      })),
                      [4, this.httpClient.put('/vwr/v1/room/join', { data: t })]);
                case 1:
                  return (n = e.sent()), [2, In.camelizeObject(n.data)];
              }
            });
          });
        }),
        (Fo.prototype.cleanupVisits = function (e) {
          var n = e.type,
            r = e.roomId,
            o = e.organizationId;
          return Ao(this, void 0, void 0, function () {
            var t;
            return Co(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = { 'TT-X-Organization-Key': o }),
                    [
                      4,
                      this.httpClient.put('/vwr/v1/room/:roomId/cleanup', {
                        headers: t,
                        data: { type: n },
                        urlParams: { roomId: r },
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        Ro([_e()], Fo.prototype, 'findAll', null),
        Ro([_e()], Fo.prototype, 'find', null),
        Ro([_e()], Fo.prototype, 'create', null),
        Ro([_e()], Fo.prototype, 'update', null),
        Ro([_e()], Fo.prototype, 'delete', null),
        Ro([_e()], Fo.prototype, 'createVisit', null),
        Ro([_e()], Fo.prototype, 'editVisit', null),
        Fo),
      Bo = {
        CONSUMER_ORGANIZATION_ID: 'UpM28mnfW65vJkbqEATtKvxm',
        BASE_URLS: {
          local: 'http://localhost:8888',
          productionOauth: 'http://52.41.133.15:8000/tigertextapi',
        },
        ADMIN_URLS: {},
        CN_URLS: {},
        FORGOT_PASSWORD_URLS: {},
        ROLES_URLS: {},
        CLOUDFRONT: {
          development: {
            d1n6bomzxlt9xn: 'tigertext/production/avatar',
            d18oyzjkq5093g: 'tigertext/production/avatar-group',
          },
          production: {
            d1n6bomzxlt9xn: 'tigertext/production/avatar',
            d18oyzjkq5093g: 'tigertext/production/avatar-group',
          },
          tt: {
            d1n6bomzxlt9xn: 'tigertext/production/avatar',
            d18oyzjkq5093g: 'tigertext/production/avatar-group',
          },
          ihis: { avatar: '', groupAvatar: '' },
        },
        CONFIG_DEFAULT: {
          adminFeatureBranch: null,
          apiEnv: 'production',
          assetDomain: 'assets.tigerconnect.com',
          autoAckSuccessfullyHandledEvents: !0,
          autoSignOutOnBrowserUnload: !0,
          baseUrl: null,
          botUsers: [],
          clearTypingStatusThrottleDelay: 2e3,
          clearTypingStatusTimeout: 8e3,
          cloudfrontDomain: 'cloudfront.net',
          cloudfront: {},
          condensedReplays: !1,
          consumerOrganizationId: 'UpM28mnfW65vJkbqEATtKvxm',
          detectBangReplayTimeout: 1e3,
          events: {
            autoAck: !1,
            autoDeliver: !1,
            canConfirm: !0,
            closeAfterMessages: !1,
            heartbeat: !0,
            hidden: !1,
            includeDistributionListEvents: !0,
            isTyping: !0,
            keepAlive: !1,
            msgDeliveryDelay: 0,
            multiOrg: !0,
            noOfflineMessages: !1,
            renderMetadata: !0,
          },
          eventCollectionInterval: 50,
          eventDrainTimeout: 4e3,
          eventsAutoReconnect: !0,
          eventsAutoReconnectDelay: 2e3,
          eventsAutoReconnectMaxDelay: 16e3,
          eventsClearRetryHistoryInterval: 6e4,
          eventsDebugging: !1,
          eventsHeartbeatIntervalVisible: 12e3,
          eventsHeartbeatIntervalInvisible: 3e4,
          eventsOpenTimeout: 6e3,
          flushAckInterval: 1e3,
          flushAckMaxConnections: 2,
          flushAckMaxEvents: 50,
          flushFindRecipientStatusInterval: 150,
          flushFindRecipientStatusMaxCount: 20,
          flushSetMessageStatusInterval: 1e3,
          flushSetMessageStatusMaxCount: 500,
          keepConversationsForAllForums: !1,
          localAdminUrl: null,
          localCnUrl: null,
          localRolesUrl: null,
          logLevel: 'error',
          manuallyRequestEventQueueBatch: !1,
          maxEventBatch: 50,
          maxMetadataKeyCount: 11,
          organizationRostersChangeThrottleDelay: 500,
          placeholderEntityAllowLoading: !0,
          placeholderEntityDelayBeforeRefreshing: 100,
          processingEvents: !1,
          productKey: 'bc1oOf3DZXbnaNZ2LCWZGvSg',
          pushAgent: 'consumer',
          rolesFeatureBranch: null,
          serviceLogLevels: {},
          signUpHashKey: '21d2ff3ffbf',
          signUpHashSalt: '%(xx*&x$&*%&',
          ttRoute: null,
          version: '1.0',
          wantCondensedReplays: !0,
        },
      };
    function Fo() {
      return (null !== So && So.apply(this, arguments)) || this;
    }
    function Go() {
      return (null !== jo && jo.apply(this, arguments)) || this;
    }
    ['stag', 'uat'].forEach(function (e) {
      (Bo.BASE_URLS[e] = 'https://' + e + '-devapi.tigertext.me'),
        (Bo.FORGOT_PASSWORD_URLS[e] = 'https://' + e + '-forget.tigertext.com'),
        (Bo.CN_URLS[e] = 'https://' + e + '-console.tigertext.me'),
        (Bo.ADMIN_URLS[e] = 'https://' + e + '-console.tigertext.me/app/admin'),
        (Bo.ROLES_URLS[e] = '/' + e + '/app/roles/index.html');
    }),
      ['ihis', 'prod', 'prod-a', 'prod-c', 'production', 'tt'].forEach(function (e) {
        (Bo.BASE_URLS[e] = 'https://api.tigertext.me'),
          (Bo.FORGOT_PASSWORD_URLS[e] = 'https://forget.tigertext.com'),
          (Bo.CN_URLS[e] = 'https://home.tigertext.com'),
          (Bo.ADMIN_URLS[e] = 'https://home.tigertext.com/app/admin'),
          (Bo.ROLES_URLS[e] = '/app/roles/index.html');
      }),
      ['prod-a', 'prod-c'].forEach(function (e) {
        var t = e.replace('prod-', '');
        Bo.BASE_URLS[e] = 'https://' + t + '-api.tigertext.me';
      }),
      ['ihis'].forEach(function (e) {
        (Bo.CN_URLS[e] = 'https://' + e + '.tigertext.com'),
          (Bo.ADMIN_URLS[e] = 'https://' + e + '.tigertext.com/app/admin');
      }),
      ['prod-dr'].forEach(function (e) {
        (Bo.BASE_URLS[e] = 'https://' + e + '-api.tigertext.me'),
          (Bo.CN_URLS[e] = 'https://' + e + '.tigertext.com'),
          (Bo.ADMIN_URLS[e] = 'https://' + e + '.tigertext.com/app/admin'),
          (Bo.ROLES_URLS[e] = '/' + e + '/app/roles/index.html');
      });
    var Vo = Bo,
      Ko =
        ((Xo.prototype.setLevel = function (e) {
          this.level = e.toLowerCase();
        }),
        Xo),
      Ho = Ko,
      $o = ['debug', 'log', 'info', 'warn', 'error'],
      Wo = $o.reduce(function (e, t, n) {
        return (e[t] = n), e;
      }, {});
    function Xo(e) {
      var t = e.name,
        n = e.level;
      (this.name = t), (this.level = n);
    }
    $o.forEach(function (n) {
      var r = Wo[n];
      Ko.prototype[n] = function () {
        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
        r >= Wo[this.level] &&
          ((e = (function () {
            for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
            var r = Array(e),
              o = 0;
            for (t = 0; t < n; t++)
              for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++) r[o] = i[s];
            return r;
          })(['[' + this.name + ']'], e)),
          Function.prototype.apply.call(console[n], console, e));
      };
    });
    for (
      var Qo,
        Yo = (function () {
          var r = function (e, t) {
            return (r =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (e, t) {
                  e.__proto__ = t;
                }) ||
              function (e, t) {
                for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
              })(e, t);
          };
          return function (e, t) {
            function n() {
              this.constructor = e;
            }
            r(e, t),
              (e.prototype =
                null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
          };
        })(),
        Jo = function () {
          return (Jo =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var o in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
              return e;
            }).apply(this, arguments);
        },
        Zo =
          ((ji.prototype.resolve = function (e) {
            return e || this.defaultValue;
          }),
          (ji.prototype.isValid = function (e) {
            return !!this.entriesByKey[e];
          }),
          ji),
        ei = Zo,
        ti = (function (e) {
          function t() {
            return (null !== e && e.apply(this, arguments)) || this;
          }
          return (
            Yo(t, e),
            (t.prototype.mapEnumKeyToServerValue = function () {
              return (
                this._mapEnumKeyToServerValue ||
                (this._mapEnumKeyToServerValue = ee.a.transform(
                  this.entries,
                  function (e, t) {
                    return (e[t.key] = t.serverValue);
                  },
                  {}
                ))
              );
            }),
            (t.prototype.mapServerValueToEnumKey = function () {
              return (
                this._mapServerValueToEnumKey ||
                (this._mapServerValueToEnumKey = ee.a.invert(this.mapEnumKeyToServerValue()))
              );
            }),
            (t.prototype.fromServer = function (e) {
              return this.mapServerValueToEnumKey()[e];
            }),
            (t.prototype.toServer = function (e) {
              return this.mapEnumKeyToServerValue()[this.resolve(e)];
            }),
            (t.prototype.resolve = function (e) {
              return (this.isValid(e) ? e : this.fromServer(e)) || this.defaultValue;
            }),
            t
          );
        })(Zo),
        ni = new ei([
          'CONTACTS_MESSAGING_BLOCKED_BY_ADMIN',
          'CONVERSATION_NOT_FULLY_LOADED',
          'CONVERSATION_WITH_ROLE_YOU_ARE_CURRENTLY_IN',
          'COUNTER_PARTY_IS_TIGERPAGE',
          'COUNTER_PARTY_NOT_FULLY_LOADED',
          'COUNTER_PARTY_TYPE_NOT_SUPPORTED',
          'GROUP_HAS_NO_MEMBERS',
          'GROUP_MEMBERS_NOT_LOADED',
          'IS_ROLE_ASSIGNMENT_GROUP',
          'NO_COUNTER_PARTY',
          'ORGANIZATION_DOES_NOT_EXIST',
          'USER_IS_NOT_IN_THIS_ROLE_CONVERSATION',
          'USER_IS_NOT_MEMBER_OF_GROUP',
          'NONE',
        ]),
        ri = new ti({
          CONTINUATION: { serverValue: 'continuation' },
          CONVERSATION_END: { serverValue: 'conversation_end' },
          FIRST_UNREAD_ITEM: { serverValue: 'first_unread_item' },
        }),
        oi = new ti({
          ACKNOWLEDGED: { serverValue: 'escalation_acknowledged' },
          CANCELLED: { serverValue: 'escalation_cancelled' },
          INITIATED: { serverValue: 'escalation_initiated' },
          MEMBER_ADDED: { serverValue: 'escalation_member_added' },
          NO_RESPONSE: { serverValue: 'escalation_no_response' },
        }),
        ii = new ti({
          ACKNOWLEDGED: { serverValue: 'confirmed' },
          CANCELLED: { serverValue: 'cancelled' },
          IN_PROGRESS: { serverValue: 'in_progress' },
          NO_RESPONSE: { serverValue: 'no_response' },
        }),
        si = new ei([
          'ACTIVATED_TEAM',
          'ESCALATION',
          'FORUM',
          'GROUP',
          'INTRA_TEAM',
          'PATIENT_CARE',
          'PATIENT_MESSAGING',
          'ROLE_ASSIGNMENT',
          'ROLE_P2P',
        ]),
        ai = new ti(
          { LOW: { serverValue: -1 }, NORMAL: { serverValue: 0 }, HIGH: { serverValue: 1 } },
          { defaultValue: 'NORMAL' }
        ),
        ui = new ti(
          {
            NA: { key: 'NA' },
            NEW: { serverValue: 'New' },
            DELIVERED: { serverValue: 'Delivered' },
            READ: { serverValue: 'Read' },
            ACKNOWLEDGED: { serverValue: 'Confirmed' },
          },
          { defaultValue: 'NA' }
        ),
        ci =
          (((Qo = {})[ui.NA] = 0),
          (Qo[ui.NEW] = 1),
          (Qo[ui.DELIVERED] = 2),
          (Qo[ui.READ] = 3),
          (Qo[ui.ACKNOWLEDGED] = 4),
          Qo),
        li = ui,
        di = new ei(['SENDING', 'SENT', 'FAILED', 'RETRYING', 'NEW', 'NA']),
        hi = new ti(
          {
            EMPTY_ROLE_NOTIFICATION: { serverValue: 'empty_role_notification' },
            NA: { key: 'NA' },
            ROLE_AWAY_NOTIFICATION: { serverValue: 'role_away_notification' },
            SCHEDULE_MESSAGE: { serverValue: 'schedule_message' },
            SMS_OPT_IN_NOTIFICATION: { serverValue: 'sms_optin_notification' },
            SMS_OPT_OUT_NOTIFICATION: { serverValue: 'sms_optout_notification' },
            SYSTEM: { serverValue: 'system' },
            TEAM_REQUEST: { serverValue: 'team_request' },
            USER_AWAY_NOTIFICATION: { serverValue: 'user_away_notification' },
          },
          { defaultValue: 'NA' }
        ),
        pi = new ei([
          'CALL_CHANGE',
          'ESCALATION_EXECUTION_CHANGE',
          'GROUP_MEMBERSHIP_CHANGE',
          'HIGHER_CONTINUATION',
          'LOWER_CONTINUATION',
          'USER_SENT',
        ]),
        fi = new ei(['PATIENT', 'PROVIDER']),
        vi = new ti({ ADD_MEMBERS: { serverValue: 'add_members' } }, { defaultValue: 'NA' }),
        yi = new ti(
          {
            ADMIT: { serverValue: 'admit' },
            DISCHARGE: { serverValue: 'discharge' },
            LAB: { serverValue: 'lab' },
            TRANSFER: { serverValue: 'transfer' },
          },
          { defaultValue: 'NA' }
        ),
        gi = new ti(
          {
            ACTION: { serverValue: 'ehr_action_item' },
            HEADER: { serverValue: 'ehr_header' },
            ITEM: { serverValue: 'table_item' },
            TEXT: { serverValue: 'ehr_text_view' },
          },
          { defaultValue: 'NA' }
        ),
        mi = new ti({
          UNKNOWN: { serverValue: 'unknown' },
          AVAILABLE: { serverValue: 'available' },
          UNAVAILABLE: { serverValue: 'unavailable' },
        }),
        _i = new ti({
          CONVERSATION_MESSAGE_STATUS: { serverValue: 'conversation_message_status' },
          GROUP_REPLAY: { serverValue: 'group_replay' },
          MESSAGE_REPLAY: { serverValue: 'message_replay' },
          OFFLINE: { serverValue: 'offline' },
          ORGANIZATION_MESSAGE_STATUS: { serverValue: 'organization_message_status' },
          ORGANIZATION_REPLAY: { serverValue: 'organization_replay' },
          ROLE_OPT_IN: { serverValue: 'optin' },
          ROLE_OPT_OUT: { serverValue: 'optout' },
        }),
        bi = new ti({
          DISTRIBUTION_LIST_MEMBER: { serverValue: 'dist_list_member' },
          DISTRIBUTION_LIST: { serverValue: 'distribution_list' },
          FORUM: { serverValue: 'public_group' },
          GROUP: { serverValue: 'group' },
          MESSAGE_TEMPLATE: { serverValue: 'message_template' },
          ORGANIZATION: { serverValue: 'organization' },
          PATIENT_DISTRIBUTION_LIST: { serverValue: 'patient_distribution_list' },
          PATIENT: { serverValue: 'patient_account' },
          SCHEDULED_MESSAGE: { serverValue: 'schedule_message' },
          TAG: { serverValue: 'tag' },
          TEAM: { serverValue: 'team' },
          USER: { serverValue: 'account' },
        }),
        wi = new ei(['GLOBAL', 'GROUP', 'ORGANIZATION'], {
          valueFn: function (e) {
            return e.toLowerCase();
          },
        }),
        Ii = new ei(['VISIBLE', 'HIDDEN', 'PRERENDER']),
        Oi = -1,
        Ti = 0,
        Ei = 1,
        Ri = 2,
        Ai = {},
        Ci = 0,
        Si = ['\n', '\r', ' ', ':'];
      Ci < Si.length;
      Ci++
    ) {
      var Pi = Si[Ci];
      Ai[Pi] = Pi.charCodeAt(0);
    }
    function ji(e, t) {
      for (var n in (void 0 === t && (t = {}),
      Array.isArray(e) &&
        (e = e.reduce(function (e, t) {
          return (e[t] = {}), e;
        }, {})),
      (this.keys = []),
      (this.entries = []),
      (this.entriesByKey = {}),
      (this.defaultValue = t.defaultValue || null),
      e)) {
        this[n] = t.valueFn ? t.valueFn(n) : n;
        var r = Jo({ key: n }, e[n]);
        (this.entriesByKey[n] = r), this.entries.push(r), this.keys.push(n);
      }
      Object.freeze(this.keys), Object.freeze(this.entries), Object.freeze(this.entriesByKey);
    }
    function Mi(e) {
      (this.type = e), (this.target = void 0);
    }
    function zi(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ki(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var Ni,
      xi,
      Ui,
      Li,
      qi = Ai,
      Di =
        (((Li = function (e, t) {
          return (Li =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Li(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        })(Ji, (Ui = Mi)),
        Ji),
      Bi =
        (((xi = function (e, t) {
          return (xi =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          xi(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        })(Yi, (Ni = Mi)),
        Yi),
      Fi = -1,
      Gi = 0,
      Vi = 1,
      Ki = 2,
      Hi = 3,
      $i = /^text\/event-stream?(\s*charset=utf-8)?$/i,
      Wi =
        ((Qi.prototype.start = function () {
          return zi(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              d = this;
            return ki(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.onReadyStateChange(Ti),
                    (this.currentState = Ti),
                    (n = (t = this).url),
                    (r = t.withCredentials),
                    'data:' !== n.slice(0, 5) &&
                      'blob:' !== n.slice(0, 5) &&
                      ((n += -1 === n.indexOf('?') ? '?' : '&'),
                      (n += 'lastEventId=' + encodeURIComponent(this.lastEventId))),
                    ((o = {}).Accept = 'text/event-stream'),
                    this.headers)
                  )
                    for (i = 0, s = Object.entries(this.headers); i < s.length; i++)
                      (a = s[i]), (u = a[0]), (c = a[1]), (o[u] = c);
                  e.label = 1;
                case 1:
                  return (
                    e.trys.push([1, 3, , 4]),
                    (this.request = new this.RequestClass({
                      headers: o,
                      onProgress: function (e) {
                        return d.onProgress(e);
                      },
                      onStart: function (e) {
                        return d.onStart(e);
                      },
                      url: n,
                      withCredentials: r,
                    })),
                    [4, this.request.fetch()]
                  );
                case 2:
                  throw (e.sent(), new Error('Connection closed by server'));
                case 3:
                  return (
                    (l = e.sent()),
                    this.request.isAborted ? [2] : (this.close(), this.onFinish(l), [3, 4])
                  );
                case 4:
                  return [2];
              }
            });
          });
        }),
        (Qi.prototype.onStart = function (e) {
          var t = e.contentType,
            n = e.headers,
            r = e.status,
            o = e.statusText;
          if (this.currentState === Ti)
            if (200 === r && t && $i.test(t)) {
              (this.currentState = Ei), this.onReadyStateChange(Ei);
              var i = new Di('open', { headers: n, status: r, statusText: o });
              this.dispatchEvent(i), this.onOpen(i);
            } else {
              var s = '';
              s =
                200 !== r
                  ? "EventSource's response has a status " +
                    r +
                    ' ' +
                    (o = o && o.replace(/\s+/g, ' ')) +
                    ' that is not 200. Aborting the connection.'
                  : "EventSource's response has a Content-Type specifying an unsupported type: " +
                    (t ? '-' : t.replace(/\s+/g, ' ')) +
                    '. Aborting the connection.';
              var a = new Di('error', { headers: n, message: s, status: r, statusText: o });
              this.close(), this.dispatchEvent(a), this.onError(a);
            }
        }),
        (Qi.prototype.onProgress = function (e) {
          if (this.currentState === Ei) {
            for (
              var t = this.parserState,
                n = t.dataBuffer,
                r = t.eventTypeBuffer,
                o = t.fieldStart,
                i = t.lastEventIdBuffer,
                s = t.state,
                a = t.textBuffer,
                u = t.valueStart,
                c = -1,
                l = 0;
              l < e.length;
              l += 1
            )
              ((p = e.charCodeAt(l)) !== qi['\n'] && p !== qi['\r']) || (c = l);
            var d = (-1 !== c ? a : '') + e.slice(0, c + 1);
            a = (-1 === c ? a : '') + e.slice(c + 1);
            for (var h = 0; h < d.length; h += 1) {
              var p = d.charCodeAt(h);
              if (s !== Fi || p !== qi['\n'])
                if ((s === Fi && (s = Gi), p === qi['\n'] || p === qi['\r'])) {
                  if (s !== Gi) {
                    s === Vi && (u = h + 1);
                    var f = d.slice(o, u - 1),
                      v = u < h && d.charCodeAt(u) === qi[' '] ? 1 : 0,
                      y = d.slice(u + v, h);
                    'data' === f
                      ? ((n += '\n'), (n += y))
                      : 'id' === f
                      ? (i = y)
                      : 'event' === f && (r = y);
                  }
                  if (s === Gi) {
                    if ('' !== n) {
                      (this.lastEventId = i), '' === r && (r = 'message');
                      var g = new Bi(r, { data: n.slice(1), lastEventId: i });
                      if (
                        (this.dispatchEvent(g),
                        'message' === r && this.onMessage(g),
                        this.currentState === Ri)
                      )
                        return;
                    }
                    r = n = '';
                  }
                  s = p === qi['\r'] ? Fi : Gi;
                } else
                  s === Gi && ((o = h), (s = Vi)),
                    s === Vi ? p === qi[':'] && ((u = h + 1), (s = Ki)) : s === Ki && (s = Hi);
              else s = Gi;
            }
            this.parserState = {
              dataBuffer: n,
              eventTypeBuffer: r,
              fieldStart: o,
              lastEventIdBuffer: i,
              state: s,
              textBuffer: a,
              valueStart: u,
            };
          }
        }),
        (Qi.prototype.onFinish = function (e) {
          var t = new Mi('error');
          e && ((t.message = e.message), (t.stack = e.stack)),
            this.dispatchEvent(t),
            this.onError(t);
        }),
        (Qi.prototype.close = function () {
          return zi(this, void 0, void 0, function () {
            return ki(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (this.currentState = Ri),
                    this.onReadyStateChange(Ri),
                    !this.request || this.request.isAborted ? [3, 2] : [4, this.request.abort()]
                  );
                case 1:
                  e.sent(), (e.label = 2);
                case 2:
                  return [2];
              }
            });
          });
        }),
        Qi),
      Xi = global.TextDecoder;
    function Qi(e) {
      var t = e.RequestClass,
        n = e.dispatchEvent,
        r = e.headers,
        o = e.lastEventId,
        i = void 0 === o ? '' : o,
        s = e.onError,
        a = e.onMessage,
        u = e.onOpen,
        c = e.onReadyStateChange,
        l = e.url,
        d = e.withCredentials;
      (this.RequestClass = t),
        (this.dispatchEvent = n),
        (this.headers = r),
        (this.lastEventId = i),
        (this.onError = s),
        (this.onMessage = a),
        (this.onOpen = u),
        (this.onReadyStateChange = c),
        (this.url = l),
        (this.withCredentials = d),
        (this.currentState = Oi),
        (this.parserState = {
          dataBuffer: '',
          eventTypeBuffer: '',
          fieldStart: 0,
          lastEventIdBuffer: i,
          state: Gi,
          textBuffer: '',
          valueStart: 0,
        }),
        (this.request = void 0);
    }
    function Yi(e, t) {
      var n = Ni.call(this, e) || this;
      return (n.data = t.data), (n.lastEventId = t.lastEventId), n;
    }
    function Ji(e, t) {
      var n = t.headers,
        r = t.message,
        o = t.status,
        i = t.statusText,
        s = Ui.call(this, e) || this;
      return (s.headers = n), (s.message = r), (s.status = o), (s.statusText = i), s;
    }
    function Zi(e, t, n) {
      if (1 === n) return 128 >> t <= e && e << t <= 2047;
      if (2 === n)
        return (2048 >> t <= e && e << t <= 55295) || (57344 >> t <= e && e << t <= 65535);
      if (3 === n) return 65536 >> t <= e && e << t <= 1114111;
      throw new Error('Invalid octetsCount');
    }
    function es(e, t) {
      if (6 === e) return 15 < t >> 6 ? 3 : 31 < t ? 2 : 1;
      if (12 === e) return 15 < t ? 3 : 2;
      if (18 === e) return 3;
      throw new Error();
    }
    function ts(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ns(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var rs =
        ((ds.prototype.decode = function (e) {
          for (var t = '', n = this.bitsNeeded, r = this.codePoint, o = 0; o < e.length; o += 1) {
            var i = e[o];
            0 !== n &&
              (i < 128 || 191 < i || !Zi((r << 6) | (63 & i), n - 6, es(n, r))) &&
              ((n = 0), (r = 65533), (t += String.fromCharCode(r))),
              0 === n
                ? ((r =
                    0 <= i && i <= 127
                      ? ((n = 0), i)
                      : 192 <= i && i <= 223
                      ? ((n = 6), 31 & i)
                      : 224 <= i && i <= 239
                      ? ((n = 12), 15 & i)
                      : 240 <= i && i <= 247
                      ? ((n = 18), 7 & i)
                      : ((n = 0), 65533)),
                  0 === n || Zi(r, n, es(n, r)) || ((n = 0), (r = 65533)))
                : ((n -= 6), (r = (r << 6) | (63 & i))),
              0 === n &&
                (r <= 65535
                  ? (t += String.fromCharCode(r))
                  : ((t += String.fromCharCode(55296 + ((r - 65535 - 1) >> 10))),
                    (t += String.fromCharCode(56320 + ((r - 65535 - 1) & 1023)))));
          }
          return (this.bitsNeeded = n), (this.codePoint = r), t;
        }),
        ds),
      os = !!(global.fetch && global.Headers && global.Response && global.AbortController),
      is = (function () {
        if (!Xi || 'undefined' == typeof TextEncoder) return !1;
        try {
          return 'test' === new Xi().decode(new TextEncoder().encode('test'), { stream: !0 });
        } catch (e) {}
        return !1;
      })()
        ? Xi
        : rs,
      ss = global.fetch,
      as =
        ((ls.prototype.get = function (e) {
          return this._headers.get(e);
        }),
        ls),
      us =
        ((cs.prototype.fetch = function () {
          return ts(this, void 0, void 0, function () {
            var t, n;
            return ns(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.isAborted
                    ? [2]
                    : [
                        4,
                        ss((n = this).url, {
                          headers: this.headers,
                          credentials: this.withCredentials ? 'include' : 'same-origin',
                          signal: this.controller.signal,
                          cache: 'no-store',
                        }),
                      ];
                case 1:
                  return (t = n.response = e.sent()).body.on
                    ? (this._emitStart(), [4, this._streamBody()])
                    : [3, 3];
                case 2:
                  return e.sent(), [3, 6];
                case 3:
                  return 'getReader' in t.body
                    ? (this._emitStart(), [4, this._readBody()])
                    : [3, 5];
                case 4:
                  return e.sent(), [3, 6];
                case 5:
                  throw new Error(
                    "Cannot read from response.body, lacks 'getReader' or 'on' property"
                  );
                case 6:
                  return [2];
              }
            });
          });
        }),
        (cs.prototype._emitStart = function () {
          var e = this.response,
            t = e.headers,
            n = e.status,
            r = e.statusText;
          this.onStart({
            contentType: t.get('Content-Type'),
            headers: new as(t),
            status: n,
            statusText: r,
          });
        }),
        (cs.prototype._streamBody = function () {
          return ts(this, void 0, void 0, function () {
            var o = this;
            return ns(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    new Promise(function (e, t) {
                      function n() {
                        r || ((r = !0), e());
                      }
                      var r = !1;
                      o._stream = o.response.body
                        .on('data', function (e) {
                          var t = e.toString('utf8');
                          o.onProgress(t);
                        })
                        .on('close', n)
                        .on('end', n)
                        .on('error', function (e) {
                          return t(e);
                        });
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (cs.prototype._readBody = function () {
          return ts(this, void 0, void 0, function () {
            var t, n, r;
            return ns(this, function (e) {
              switch (e.label) {
                case 0:
                  (this._reader = this.response.body.getReader()), (t = !1), (e.label = 1);
                case 1:
                  return t || this.isAborted ? [3, 3] : [4, this._reader.read()];
                case 2:
                  return (
                    (n = e.sent()).done
                      ? (t = !0)
                      : ((r = this.textDecoder.decode(n.value, { stream: !0 })),
                        this.onProgress(r)),
                    [3, 1]
                  );
                case 3:
                  return [2];
              }
            });
          });
        }),
        (cs.prototype.abort = function () {
          return ts(this, void 0, void 0, function () {
            return ns(this, function (e) {
              switch (e.label) {
                case 0:
                  if (this.isAborted) return [2];
                  if (((this.isAborted = !0), !this._reader)) return [3, 5];
                  e.label = 1;
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this._reader.cancel()];
                case 2:
                case 3:
                  return e.sent(), [3, 4];
                case 4:
                  (this._reader = null), (e.label = 5);
                case 5:
                  return (
                    this._stream && (this._stream.destroy(), (this._stream = null)),
                    this.controller.abort(),
                    [2]
                  );
              }
            });
          });
        }),
        cs);
    function cs(e) {
      var t = e.headers,
        n = e.onProgress,
        r = e.onStart,
        o = e.url,
        i = e.withCredentials;
      (this.controller = new AbortController()),
        (this.headers = new Headers(t)),
        (this.isAborted = !1),
        (this.onProgress = n),
        (this.onStart = r),
        (this.response = null),
        (this.textDecoder = new is()),
        (this.url = o),
        (this.withCredentials = i),
        (this._reader = null),
        (this._stream = null);
    }
    function ls(e) {
      this._headers = e;
    }
    function ds() {
      (this.bitsNeeded = 0), (this.codePoint = 0);
    }
    function hs(e) {
      return e.replace(/[A-Z]/g, function (e) {
        return String.fromCharCode(e.charCodeAt(0) + 32);
      });
    }
    function ps() {}
    function fs(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function vs(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var ys,
      gs,
      ms =
        ((xs.prototype.get = function (e) {
          return this._map[hs(e)];
        }),
        xs),
      _s =
        ((Ns.prototype.open = function (e, t) {
          this._abort(!0);
          var o = this,
            i = this._xhr,
            s = 1,
            n = 0;
          function r() {
            if (1 === s) {
              var t = '',
                n = void 0,
                r = 0;
              if ('contentType' in i) (r = 200), (t = 'OK'), (n = i.contentType);
              else
                try {
                  (r = i.status), (t = i.statusText), (n = i.getResponseHeader('Content-Type'));
                } catch (e) {
                  (t = ''), (n = void (r = 0));
                }
              0 !== r &&
                ((s = 2),
                (o.readyState = 2),
                (o.status = r),
                (o.statusText = t),
                (o._contentType = n),
                o.onreadystatechange());
            }
          }
          function a() {
            if ((r(), 2 === s || 3 === s)) {
              s = 3;
              var e = '';
              try {
                e = i.responseText;
              } catch (e) {}
              (o.readyState = 3), (o.responseText = e), o.onprogress();
            }
          }
          function u() {
            a(),
              (1 !== s && 2 !== s && 3 !== s) ||
                ((s = 4),
                0 !== n && (clearTimeout(n), (n = 0)),
                (o.readyState = 4),
                o.onreadystatechange());
          }
          this._abort = function (e) {
            0 !== o._sendTimeout && (clearTimeout(o._sendTimeout), (o._sendTimeout = 0)),
              (1 !== s && 2 !== s && 3 !== s) ||
                ((s = 4),
                (i.onload = ps),
                (i.onerror = ps),
                (i.onabort = ps),
                (i.onprogress = ps),
                (i.onreadystatechange = ps),
                i.abort(),
                0 !== n && (clearTimeout(n), (n = 0)),
                e || ((o.readyState = 4), o.onreadystatechange())),
              (s = 0);
          };
          var c = function () {
            (n = setTimeout(function () {
              c();
            }, 500)),
              3 === i.readyState && a();
          };
          (i.onload = u),
            (i.onerror = u),
            (i.onabort = u),
            'sendAsBinary' in XMLHttpRequest.prototype ||
              'mozAnon' in XMLHttpRequest.prototype ||
              (i.onprogress = a),
            (i.onreadystatechange = function () {
              i &&
                (4 === i.readyState ? u() : 3 === i.readyState ? a() : 2 === i.readyState && r());
            }),
            'contentType' in i && (t += (-1 === t.indexOf('?') ? '?' : '&') + 'padding=true'),
            i.open(e, t, !0),
            'readyState' in i &&
              (n = setTimeout(function () {
                c();
              }, 0));
        }),
        (Ns.prototype.abort = function () {
          this._abort(!1);
        }),
        (Ns.prototype.getResponseHeader = function (e) {
          return this._contentType;
        }),
        (Ns.prototype.setRequestHeader = function (e, t) {
          var n = this._xhr;
          'setRequestHeader' in n && n.setRequestHeader(e, t);
        }),
        (Ns.prototype.getAllResponseHeaders = function () {
          return this._xhr.getAllResponseHeaders ? this._xhr.getAllResponseHeaders() : '';
        }),
        (Ns.prototype.send = function () {
          if (
            'ontimeout' in XMLHttpRequest.prototype ||
            !document ||
            !document.readyState ||
            'complete' === document.readyState
          ) {
            var e = this._xhr;
            (e.withCredentials = this.withCredentials), (e.responseType = this.responseType);
            try {
              e.send(void 0);
            } catch (t) {
              throw t;
            }
          } else {
            var t = this;
            t._sendTimeout = setTimeout(function () {
              (t._sendTimeout = 0), t.send();
            }, 4);
          }
        }),
        Ns),
      bs =
        ((ks.prototype.fetch = function () {
          return fs(this, void 0, void 0, function () {
            var n,
              t,
              r,
              o,
              i,
              s,
              a,
              u = this;
            return vs(this, function (e) {
              switch (e.label) {
                case 0:
                  if (this.isAborted) return [2];
                  for (
                    t = new Promise(function (e) {
                      n = e;
                    }),
                      this.xhr.open('GET', this.url),
                      this.xhr.onprogress = function () {
                        var e = u.xhr.responseText.slice(u.offset);
                        (u.offset += e.length), u.onProgress(e);
                      },
                      this.xhr.onreadystatechange = function () {
                        if (u.xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {
                          var e = u.xhr.getResponseHeader('Content-Type'),
                            t = u.xhr.getAllResponseHeaders();
                          u.onStart({
                            contentType: e,
                            headers: new ms(t),
                            status: u.xhr.status,
                            statusText: u.xhr.statusText,
                          });
                        } else u.xhr.readyState === XMLHttpRequest.DONE && n();
                      },
                      this.xhr.withCredentials = this.withCredentials,
                      this.xhr.responseType = 'text',
                      r = 0,
                      o = Object.entries(this.headers);
                    r < o.length;
                    r++
                  )
                    (i = o[r]), (s = i[0]), (a = i[1]), this.xhr.setRequestHeader(s, a);
                  return this.xhr.send(), [4, t];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (ks.prototype.abort = function () {
          return fs(this, void 0, void 0, function () {
            return vs(this, function (e) {
              return this.isAborted || ((this.isAborted = !0), this.xhr.abort()), [2];
            });
          });
        }),
        ks),
      ws =
        ((zs.prototype.addEventListener = function (e, t) {
          this._events.on(e, t);
        }),
        (zs.prototype.removeEventListener = function (e, t) {
          this._events.removeListener(e, t);
        }),
        (zs.prototype.dispatchEvent = function (e) {
          e && e.type && this._events.emit(e.type, e);
        }),
        (zs.prototype.start = function () {
          return (function (e, s, a, u) {
            return new (a = a || Promise)(function (n, t) {
              function r(e) {
                try {
                  i(u.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function o(e) {
                try {
                  i(u.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function i(e) {
                var t;
                e.done
                  ? n(e.value)
                  : ((t = e.value) instanceof a
                      ? t
                      : new a(function (e) {
                          e(t);
                        })
                    ).then(r, o);
              }
              i((u = u.apply(e, s || [])).next());
            });
          })(this, void 0, void 0, function () {
            return (function (n, r) {
              var o,
                i,
                s,
                e,
                a = {
                  label: 0,
                  sent: function () {
                    if (1 & s[0]) throw s[1];
                    return s[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (e = { next: t(0), throw: t(1), return: t(2) }),
                'function' == typeof Symbol &&
                  (e[Symbol.iterator] = function () {
                    return this;
                  }),
                e
              );
              function t(t) {
                return function (e) {
                  return (function (t) {
                    if (o) throw new TypeError('Generator is already executing.');
                    for (; a; )
                      try {
                        if (
                          ((o = 1),
                          i &&
                            (s =
                              2 & t[0]
                                ? i.return
                                : t[0]
                                ? i.throw || ((s = i.return) && s.call(i), 0)
                                : i.next) &&
                            !(s = s.call(i, t[1])).done)
                        )
                          return s;
                        switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                          case 0:
                          case 1:
                            s = t;
                            break;
                          case 4:
                            return a.label++, { value: t[1], done: !1 };
                          case 5:
                            a.label++, (i = t[1]), (t = [0]);
                            continue;
                          case 7:
                            (t = a.ops.pop()), a.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                (6 !== t[0] && 2 !== t[0])
                              )
                            ) {
                              a = 0;
                              continue;
                            }
                            if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                              a.label = t[1];
                              break;
                            }
                            if (6 === t[0] && a.label < s[1]) {
                              (a.label = s[1]), (s = t);
                              break;
                            }
                            if (s && a.label < s[2]) {
                              (a.label = s[2]), a.ops.push(t);
                              break;
                            }
                            s[2] && a.ops.pop(), a.trys.pop();
                            continue;
                        }
                        t = r.call(n, a);
                      } catch (e) {
                        (t = [6, e]), (i = 0);
                      } finally {
                        o = s = 0;
                      }
                    if (5 & t[0]) throw t[1];
                    return { value: t[0] ? t[1] : void 0, done: !0 };
                  })([t, e]);
                };
              }
            })(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.readyState !== Oi ? [2] : [4, this._esRequest.start()];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (zs.prototype.close = function () {
          this.readyState !== Ri &&
            (this._esRequest.close(),
            this._esRequest.onFinish(new Error('Connection closed by caller')));
        }),
        (zs.CLOSED = Ri),
        (zs.CONNECTING = Ti),
        (zs.OPEN = Ei),
        (zs.FetchRequest = us),
        (zs.XHRRequest = bs),
        (zs.isFetchSupported = os),
        zs),
      Is = (global.EventSource, ws),
      Os = new ei(['ONLINE', 'OFFLINE', 'CONNECTING', 'UNREACHABLE']),
      Ts =
        ((gs = function (e, t) {
          return (gs =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          gs(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Es =
        ((ys = M.a),
        Ts(Ms, ys),
        (Ms.prototype.createEventSource = function (r, e) {
          var o = this,
            t = e.auth,
            n = void 0 === t ? this.httpClient.getAuth() : t,
            i = e.features,
            s = e.onOpen,
            a = e.onMessage,
            u = e.onError,
            c = /https?:/.test(r) ? r : this.config.baseUrl + r,
            l = this.httpClient.getAuthHeaders(n, i);
          'TT-Route-Xmpp' === this.config.ttRoute && (l['TT-Route-Xmpp'] = 'true'),
            i && (l['TT-X-Features'] = i);
          var d = new Is(c, { headers: l }),
            h = !1,
            p = !1,
            f = !1,
            v = function () {
              f || ((f = !0), d.removeEventListener('open', v), s && s());
            },
            y = function (e) {
              if (!h) {
                (h = !0), d.removeEventListener('error', y);
                var t,
                  n = e ? e.status : void 0;
                401 === n
                  ? ((t = new oe()), o.emit('auth:invalid'))
                  : 403 === n
                  ? ((t = new X(r, '403', 'get')), o.emit('auth:invalid'))
                  : e && e.message && e.stack
                  ? ((t = new Error(e.message)).stack = e.stack)
                  : (t = p
                      ? new Error('EventSource connection closed' + (n ? ': status ' + n : ''))
                      : new Error(
                          'Could not establish EventSource connection' + (n ? ': status ' + n : '')
                        )),
                  n && (t.status = n),
                  o.httpClient.networkStatus !== Os.OFFLINE &&
                    o.httpClient._setNetworkStatus(Os.UNREACHABLE),
                  u && u(t);
              }
            };
          return (
            d.addEventListener('open', v),
            d.addEventListener('error', y),
            d.addEventListener('message', function (e) {
              var t = !p;
              p || ((p = !0), o.httpClient._setNetworkStatus(Os.ONLINE)),
                a && a(e, { isFirstMessage: t });
            }),
            d
          );
        }),
        Ms),
      Rs = d(1),
      As = d(27),
      Cs = d.n(As),
      Ss = d(21),
      Ps = d.n(Ss),
      js = d(22);
    function Ms(e) {
      var t = e.config,
        n = e.httpClient,
        r = e.logger,
        o = ys.call(this) || this;
      return (o.config = t), (o.httpClient = n), (o.logger = r), o;
    }
    function zs(e, t) {
      var n = this,
        r = void 0 === t ? {} : t,
        o = r.RequestClass,
        i = r.headers,
        s = r.lastEventId,
        a = r.withCredentials;
      (this.CLOSED = Ri),
        (this.CONNECTING = Ti),
        (this.OPEN = Ei),
        (this.FetchRequest = us),
        (this.XHRRequest = bs),
        (this.isFetchSupported = os),
        (this._events = new M.a()),
        (this.onerror = void 0),
        (this.onmessage = void 0),
        (this.onopen = void 0),
        (this.readyState = Oi),
        (this.url = e = String(e)),
        (this.withCredentials = a),
        (o = o || (os ? us : bs)),
        (this._esRequest = new Wi({
          RequestClass: o,
          dispatchEvent: function (e) {
            return n.dispatchEvent(e);
          },
          headers: i,
          lastEventId: s,
          onError: function (e) {
            return n.onerror && n.onerror(e);
          },
          onMessage: function (e) {
            return n.onmessage && n.onmessage(e);
          },
          onOpen: function (e) {
            return n.onopen && n.onopen(e);
          },
          onReadyStateChange: function (e) {
            n.readyState = e;
          },
          url: e,
          withCredentials: a,
        }));
    }
    function ks(e) {
      var t = e.headers,
        n = e.onProgress,
        r = e.onStart,
        o = e.url,
        i = e.withCredentials;
      (this.headers = t),
        (this.isAborted = !1),
        (this.offset = 0),
        (this.onProgress = n),
        (this.onStart = r),
        (this.url = o),
        (this.withCredentials = i),
        (this.xhr = new _s(new XMLHttpRequest()));
    }
    function Ns(e) {
      (this.withCredentials = !1),
        (this.responseType = ''),
        (this.readyState = 0),
        (this.status = 0),
        (this.statusText = ''),
        (this.responseText = ''),
        (this.onprogress = ps),
        (this.onreadystatechange = ps),
        (this._contentType = ''),
        (this._xhr = e),
        (this._sendTimeout = 0),
        (this._abort = ps);
    }
    function xs(e) {
      for (var t = Object.create(null), n = e.split('\r\n'), r = 0; r < n.length; r += 1) {
        var o = n[r].split(': '),
          i = o.shift(),
          s = o.join(': ');
        t[hs(i)] = s;
      }
      this._map = t;
    }
    function Us(e) {
      return (function (e) {
        for (var t = new Uint8Array(e), n = '', r = 0; r < t.byteLength; r++)
          n += String.fromCharCode(t[r]);
        return n;
      })(
        (function (e) {
          for (var t = [], n = 0; n < e.length; n++) {
            var r = e.charCodeAt(n);
            r < 128
              ? t.push(r)
              : r < 2048
              ? t.push(192 | (r >> 6), 128 | (63 & r))
              : r < 55296 || 57344 <= r
              ? t.push(224 | (r >> 12), 128 | ((r >> 6) & 63), 128 | (63 & r))
              : (n++,
                (r = 65536 + (((1023 & r) << 10) | (1023 & e.charCodeAt(n)))),
                t.push(
                  240 | (r >> 18),
                  128 | ((r >> 12) & 63),
                  128 | ((r >> 6) & 63),
                  128 | (63 & r)
                ));
          }
          return t;
        })(e)
      );
    }
    for (
      var Ls = {},
        qs = {},
        Ds = 0,
        Bs = [
          { ext: 'csv', mime: 'text/csv' },
          { ext: 'csv', mime: 'text/plain' },
          { ext: 'doc', mime: 'application/msword' },
          {
            ext: 'docx',
            mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
          },
          { ext: 'gif', mime: 'image/gif' },
          { ext: 'gz', mime: 'application/gzip' },
          { ext: 'gz', mime: 'application/x-gzip' },
          { ext: 'gz', mime: 'application/x-compressed' },
          { ext: 'jpg', mime: 'image/jpeg' },
          { ext: 'jpeg', mime: 'image/jpeg' },
          { ext: 'm4a', mime: 'audio/m4a' },
          { ext: 'm4a', mime: 'audio/x-m4a' },
          { ext: 'm4a', mime: 'audio/mp4' },
          { ext: 'm4v', mime: 'video/x-m4v' },
          { ext: 'mov', mime: 'video/quicktime' },
          { ext: 'mp3', mime: 'audio/mpeg' },
          { ext: 'mp3', mime: 'audio/mp3' },
          { ext: 'mp3', mime: 'audio/mpeg3' },
          { ext: 'mp3', mime: 'audio/x-mpeg' },
          { ext: 'mp3', mime: 'audio/x-mpeg-3' },
          { ext: 'mp3', mime: 'video/mpeg' },
          { ext: 'mp3', mime: 'video/x-mpeg' },
          { ext: 'mp4', mime: 'video/mp4' },
          { ext: 'pdf', mime: 'application/pdf' },
          { ext: 'png', mime: 'image/png' },
          {
            ext: 'ppsx',
            mime: 'application/vnd.openxmlformats-officedocument.presentationml.slideshow',
          },
          { ext: 'ppt', mime: 'application/vnd.ms-powerpoint' },
          { ext: 'ppt', mime: 'application/ms-powerpoint' },
          { ext: 'ppt', mime: 'application/mspowerpoint' },
          { ext: 'ppt', mime: 'application/powerpoint' },
          { ext: 'ppt', mime: 'application/x-mspowerpoint' },
          {
            ext: 'pptx',
            mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
          },
          { ext: 'svg', mime: 'image/svg+xml' },
          { ext: 'txt', mime: 'text/plain' },
          { ext: 'wav', mime: 'audio/wav' },
          { ext: 'wav', mime: 'audio/wave' },
          { ext: 'wav', mime: 'audio/x-pn-wav' },
          { ext: 'wav', mime: 'audio/x-wav' },
          { ext: 'xls', mime: 'application/vnd.ms-excel' },
          { ext: 'xls', mime: 'application/excel' },
          { ext: 'xls', mime: 'application/x-excel' },
          { ext: 'xls', mime: 'application/x-msexcel' },
          {
            ext: 'xlsx',
            mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
          },
          { ext: 'zip', mime: 'application/zip' },
        ];
      Ds < Bs.length;
      Ds++
    ) {
      var Fs = Bs[Ds],
        Gs = Fs.ext,
        Vs = Fs.mime;
      Ls[Vs] || (Ls[Vs] = []), Ls[Vs].push(Fs), qs[Gs] || (qs[Gs] = []), qs[Gs].push(Fs);
    }
    var Ks = Object.keys(Ls),
      Hs = Object.keys(qs);
    function $s(e) {
      return Ls[e];
    }
    function Ws(e) {
      return e && '.' === e[0] && (e = e.slice(1)), qs[e];
    }
    var Xs = function (e, t) {
      var n = {};
      for (var r in e)
        Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
      if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
        var o = 0;
        for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
          t.indexOf(r[o]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
            (n[r[o]] = e[r[o]]);
      }
      return n;
    };
    function Qs(e) {
      var t = e.provideDefault,
        n = void 0 !== t && t;
      return (
        (function (e) {
          var t = e.fileBuffer,
            n = e.filename,
            r = d(26)(t),
            o = n && d(18).extname(n),
            i = o && Ws(o);
          if (r) {
            var s = r.ext;
            return { ext: (s = '.' + s), mime: r.mime };
          }
          return i ? i[0] : { ext: o || '.bin', mime: 'application/octet-stream' };
        })(Xs(e, ['provideDefault'])) ||
        (n ? { ext: '.bin', mime: 'application/octet-stream' } : void 0)
      );
    }
    function Ys(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Js(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    for (
      var Zs,
        ea,
        ta = function (n, r) {
          return Ys(this, void 0, void 0, function () {
            var t;
            return Js(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = ''),
                    [
                      4,
                      (function (o, e) {
                        var i,
                          s,
                          a,
                          t = this,
                          u = (void 0 === e ? {} : e).idx,
                          c = d(19),
                          l = d(18);
                        return (
                          void 0 !== u && (u = '-' + u),
                          Promise.resolve().then(function () {
                            return Ys(t, void 0, void 0, function () {
                              var t, n, r;
                              return Js(this, function (e) {
                                switch (e.label) {
                                  case 0:
                                    return 'string' != typeof o
                                      ? [3, 2]
                                      : [
                                          4,
                                          new Promise(function (n, r) {
                                            c.readFile(o, function (e, t) {
                                              e ? r(e) : n(t);
                                            });
                                          }),
                                        ];
                                  case 1:
                                    return (
                                      (i = e.sent()),
                                      (s = l.basename(o)),
                                      (r = Qs({ fileBuffer: i, filename: s, provideDefault: !0 })
                                        .mime),
                                      (a = r),
                                      [3, 3]
                                    );
                                  case 2:
                                    if (!(o instanceof Buffer))
                                      throw new Error('Unsupported file attachment type');
                                    (t = Qs({ fileBuffer: (i = o), provideDefault: !0 })),
                                      (n = t.ext),
                                      (r = t.mime),
                                      (s = 'attachment' + u + n),
                                      (a = r),
                                      (e.label = 3);
                                  case 3:
                                    return [
                                      2,
                                      {
                                        fieldValue: i.toString('binary'),
                                        mimetype: a,
                                        filename: s,
                                      },
                                    ];
                                }
                              });
                            });
                          })
                        );
                      })(n, r),
                    ]
                  );
                case 1:
                  return (t = e.sent()), [3, 4];
                case 2:
                  return [3, 4];
                case 3:
                  (t = e.sent()), (e.label = 4);
                case 4:
                  return [2, t];
              }
            });
          });
        },
        na = function (e, s, a, u) {
          return new (a = a || Promise)(function (n, t) {
            function r(e) {
              try {
                i(u.next(e));
              } catch (e) {
                t(e);
              }
            }
            function o(e) {
              try {
                i(u.throw(e));
              } catch (e) {
                t(e);
              }
            }
            function i(e) {
              var t;
              e.done
                ? n(e.value)
                : ((t = e.value) instanceof a
                    ? t
                    : new a(function (e) {
                        e(t);
                      })
                  ).then(r, o);
            }
            i((u = u.apply(e, s || [])).next());
          });
        },
        ra = function (n, r) {
          var o,
            i,
            s,
            e,
            a = {
              label: 0,
              sent: function () {
                if (1 & s[0]) throw s[1];
                return s[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (e = { next: t(0), throw: t(1), return: t(2) }),
            'function' == typeof Symbol &&
              (e[Symbol.iterator] = function () {
                return this;
              }),
            e
          );
          function t(t) {
            return function (e) {
              return (function (t) {
                if (o) throw new TypeError('Generator is already executing.');
                for (; a; )
                  try {
                    if (
                      ((o = 1),
                      i &&
                        (s =
                          2 & t[0]
                            ? i.return
                            : t[0]
                            ? i.throw || ((s = i.return) && s.call(i), 0)
                            : i.next) &&
                        !(s = s.call(i, t[1])).done)
                    )
                      return s;
                    switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                      case 0:
                      case 1:
                        s = t;
                        break;
                      case 4:
                        return a.label++, { value: t[1], done: !1 };
                      case 5:
                        a.label++, (i = t[1]), (t = [0]);
                        continue;
                      case 7:
                        (t = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(
                            (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                            (6 !== t[0] && 2 !== t[0])
                          )
                        ) {
                          a = 0;
                          continue;
                        }
                        if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                          a.label = t[1];
                          break;
                        }
                        if (6 === t[0] && a.label < s[1]) {
                          (a.label = s[1]), (s = t);
                          break;
                        }
                        if (s && a.label < s[2]) {
                          (a.label = s[2]), a.ops.push(t);
                          break;
                        }
                        s[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    t = r.call(n, a);
                  } catch (e) {
                    (t = [6, e]), (i = 0);
                  } finally {
                    o = s = 0;
                  }
                if (5 & t[0]) throw t[1];
                return { value: t[0] ? t[1] : void 0, done: !0 };
              })([t, e]);
            };
          }
        },
        oa = ['application/json', 'text/plain'],
        ia =
          ((pa.prototype.appendField = function (d, h) {
            return (
              void 0 === h && (h = ''),
              na(this, void 0, void 0, function () {
                var t, n, r, o, i, s, a, u, c, l;
                return ra(this, function (e) {
                  if (Array.isArray(h))
                    for (n = t = 0, r = h; n < r.length; n++) {
                      if (((o = r[n]), 'data' === d && 'object' == typeof o)) {
                        if (
                          ((i = o.mimetype),
                          (s = void 0 === i ? 'application/json' : i),
                          (a = o.namespace),
                          (u = o.payload),
                          (c = void 0 === u ? '' : u),
                          !a)
                        )
                          throw new Error('Missing namespace on data[' + t + '] object');
                        (l = { 'TT-X-Namespace': a }),
                          this._appendParsedField(d, {
                            fieldValue: String(c),
                            mimetype: s,
                            filename: null,
                            headers: l,
                          });
                      } else this.appendField(d, o);
                      t++;
                    }
                  else
                    h && h.nodeType && h.nodeName && h.getAttribute && (h = h.value),
                      'object' == typeof h
                        ? this._appendParsedField(d, {
                            fieldValue: JSON.stringify(h),
                            mimetype: 'application/json',
                          })
                        : this._appendParsedField(d, {
                            fieldValue: String(h),
                            mimetype: 'text/plain',
                          });
                  return [2];
                });
              })
            );
          }),
          (pa.prototype._appendParsedField = function (e, t) {
            var n = t.fieldValue,
              r = t.filename,
              o = t.headers,
              i = t.mimetype,
              s = this.body.fields;
            r ? (r = Us(r)) : (n = Us(n)), oa.includes(i) && (i += '; charset="utf-8"');
            var a = new js.RequestField(n, i, r, o);
            s.hasOwnProperty(e)
              ? (Array.isArray(s[e]) || (s[e] = [s[e]]), s[e].push(a))
              : (s[e] = a);
          }),
          (pa.prototype.appendFile = function (n, r) {
            return na(this, void 0, void 0, function () {
              var t;
              return ra(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (t = ''), r ? [4, ta(r, { idx: this.fileIdx++ })] : [3, 2];
                  case 1:
                    (t = e.sent()), (e.label = 2);
                  case 2:
                    return this._appendParsedField(n, t), [2];
                }
              });
            });
          }),
          (pa.prototype.getContentType = function () {
            return this.body.getContentType();
          }),
          (pa.prototype.getPayload = function () {
            return na(this, void 0, void 0, function () {
              return ra(this, function (e) {
                return [2, this.body.toString()];
              });
            });
          }),
          pa),
        sa = function () {
          return (sa =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var o in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
              return e;
            }).apply(this, arguments);
        },
        aa = [X.CODE, oe.CODE],
        ua =
          ((ha.prototype.mounted = function () {
            this._prefixBaseUrl = Ps()(this.config.baseUrl);
          }),
          (ha.prototype._contentType = function (e) {
            switch (e) {
              case 'json':
                return 'application/json';
              case 'event-stream':
                return 'text/event-stream';
              case 'text':
              default:
                return 'plain/text';
            }
          }),
          (ha.prototype.getAuth = function (e) {
            return this._auth;
          }),
          (ha.prototype.setAuth = function (e) {
            this._auth = e;
          }),
          (ha.prototype.removeAuth = function () {
            this._auth = null;
          }),
          Object.defineProperty(ha.prototype, 'isSignedIn', {
            get: function () {
              return !!this._auth;
            },
            enumerable: !1,
            configurable: !0,
          }),
          (ha.prototype.getAuthForKeyAndSecret = function (e, t) {
            return e && t ? Fr()(e + ':' + t) : null;
          }),
          (ha.prototype.getAuthHeaders = function (e) {
            if ((void 0 === e && (e = this._auth), !e)) return {};
            var t = {};
            if (e.key && e.secret)
              t.Authorization = 'Basic ' + this.getAuthForKeyAndSecret(e.key, e.secret);
            else {
              if (!e.bearerToken || !e.udid) return {};
              (t.Authorization = 'Bearer ' + e.bearerToken), (t['X-Device-ID'] = e.udid);
            }
            return t;
          }),
          (ha.prototype.isUnauthorizedError = function (e) {
            return e && aa.includes(e.code);
          }),
          (ha.prototype.downloadFileBlob = function (e, t) {
            (void 0 === t ? {} : t).headers, Z.raise();
          }),
          (ha.prototype.downloadToFile = function (e, t) {
            var i = this,
              s = d(19);
            return new Promise(function (n, r) {
              var o = i.config.baseUrl + e;
              d(53)({ url: o, headers: i.getAuthHeaders() }, function (e, t) {
                e || (t && t.statusCode < 200) || 299 < t.statusCode
                  ? r(
                      new Error(
                        'Failed downloading ' +
                          o +
                          '. Error: ' +
                          e.message +
                          ' | Status: ' +
                          (t ? t.statusCode : null)
                      )
                    )
                  : n();
              }).pipe(s.createWriteStream(t));
            });
          }),
          (ha.prototype._watchNetworkConnection = function () {
            this.networkStatus = Os.ONLINE;
          }),
          (ha.prototype._setNetworkStatus = function (e) {
            var t = this.networkStatus;
            e !== t &&
              ((this.networkStatus = e),
              this.emit('networkStatus:change', { networkStatus: e, previousStatus: t }));
          }),
          ha),
        ca = function (_) {
          ua.prototype[_] = function (g, m) {
            return (
              void 0 === m && (m = {}),
              (function (e, s, a, u) {
                return new (a = a || Promise)(function (n, t) {
                  function r(e) {
                    try {
                      i(u.next(e));
                    } catch (e) {
                      t(e);
                    }
                  }
                  function o(e) {
                    try {
                      i(u.throw(e));
                    } catch (e) {
                      t(e);
                    }
                  }
                  function i(e) {
                    var t;
                    e.done
                      ? n(e.value)
                      : ((t = e.value) instanceof a
                          ? t
                          : new a(function (e) {
                              e(t);
                            })
                        ).then(r, o);
                  }
                  i((u = u.apply(e, s || [])).next());
                });
              })(this, void 0, void 0, function () {
                var t,
                  n,
                  r,
                  o,
                  i,
                  s,
                  a,
                  u,
                  c,
                  l,
                  d,
                  h,
                  p,
                  f,
                  v,
                  y = this;
                return (function (n, r) {
                  var o,
                    i,
                    s,
                    e,
                    a = {
                      label: 0,
                      sent: function () {
                        if (1 & s[0]) throw s[1];
                        return s[1];
                      },
                      trys: [],
                      ops: [],
                    };
                  return (
                    (e = { next: t(0), throw: t(1), return: t(2) }),
                    'function' == typeof Symbol &&
                      (e[Symbol.iterator] = function () {
                        return this;
                      }),
                    e
                  );
                  function t(t) {
                    return function (e) {
                      return (function (t) {
                        if (o) throw new TypeError('Generator is already executing.');
                        for (; a; )
                          try {
                            if (
                              ((o = 1),
                              i &&
                                (s =
                                  2 & t[0]
                                    ? i.return
                                    : t[0]
                                    ? i.throw || ((s = i.return) && s.call(i), 0)
                                    : i.next) &&
                                !(s = s.call(i, t[1])).done)
                            )
                              return s;
                            switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                              case 0:
                              case 1:
                                s = t;
                                break;
                              case 4:
                                return a.label++, { value: t[1], done: !1 };
                              case 5:
                                a.label++, (i = t[1]), (t = [0]);
                                continue;
                              case 7:
                                (t = a.ops.pop()), a.trys.pop();
                                continue;
                              default:
                                if (
                                  !(
                                    (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                    (6 !== t[0] && 2 !== t[0])
                                  )
                                ) {
                                  a = 0;
                                  continue;
                                }
                                if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                                  a.label = t[1];
                                  break;
                                }
                                if (6 === t[0] && a.label < s[1]) {
                                  (a.label = s[1]), (s = t);
                                  break;
                                }
                                if (s && a.label < s[2]) {
                                  (a.label = s[2]), a.ops.push(t);
                                  break;
                                }
                                s[2] && a.ops.pop(), a.trys.pop();
                                continue;
                            }
                            t = r.call(n, a);
                          } catch (e) {
                            (t = [6, e]), (i = 0);
                          } finally {
                            o = s = 0;
                          }
                        if (5 & t[0]) throw t[1];
                        return { value: t[0] ? t[1] : void 0, done: !0 };
                      })([t, e]);
                    };
                  }
                })(this, function (e) {
                  switch (e.label) {
                    case 0:
                      if (
                        ((m = ee.a.defaults(m || {}, {
                          reqFormat: 'json',
                          resFormat: 'json',
                          withCredentials: !0,
                          withHeaders: !0,
                        })).urlParams &&
                          (g = g.replace(/:([\w-]+)/g, function (e, t) {
                            var n = m.urlParams[t];
                            return void 0 !== n ? encodeURIComponent(n) : ':' + t;
                          })),
                        this.logger && this.logger.info('start', _.toUpperCase(), g, m),
                        ((t = sa(
                          sa({}, m.headers),
                          'TT-Route-Xmpp' === this.config.ttRoute
                            ? { 'TT-Route-Xmpp': 'true' }
                            : null
                        )).Accept = t.Accept || this._contentType(m.resFormat)),
                        m.requestId && (t['Request-ID'] = m.requestId),
                        ('Authorization' in t) || Object.assign(t, this.getAuthHeaders(m.auth)),
                        (n = Cs.a[_](g)
                          .use(this._prefixBaseUrl)
                          .query(m.query || {})),
                        m.withCredentials && (n = n.withCredentials()),
                        !1 !== m.retry && (n = n.retry(m.retryCount || 3)),
                        !1 !== m.timeout && (n = n.timeout(!0 === m.timeout ? 1e4 : m.timeout)),
                        (o = m.files && Object.entries(m.files)) && 0 < o.length
                          ? ((r = new ia()), (t['Content-Type'] = r.getContentType()))
                          : (t['Content-Type'] =
                              t['Content-Type'] || this._contentType(m.reqFormat)),
                        m.withHeaders && (n = n.set(t)),
                        !r)
                      )
                        return [3, 3];
                      if (((i = []), m.data))
                        for (s = 0, a = Object.entries(m.data); s < a.length; s++)
                          (u = a[s]), (p = u[0]), (c = u[1]), i.push(r.appendField(p, c));
                      for (l = 0, d = o; l < d.length; l++)
                        (h = d[l]), (p = h[0]), (f = h[1]), i.push(r.appendFile(p, f));
                      return [4, Promise.all(i)];
                    case 1:
                      return e.sent(), [4, r.getPayload(r)];
                    case 2:
                      return (v = e.sent()), (n = n.send(v)), [3, 4];
                    case 3:
                      (n = n.send(m.data)), (e.label = 4);
                    case 4:
                      return [
                        2,
                        new Promise(function (s, a) {
                          n.end(function (e, t) {
                            var n = (t || {}).headers;
                            if (e)
                              if (
                                (y.logger && y.logger.info('error', _.toUpperCase(), g, e),
                                e.status)
                              )
                                if (401 === e.status) a(new oe(n));
                                else if (403 === e.status) {
                                  var r = (m.urlParams || {}).userId;
                                  a(
                                    new X(
                                      g,
                                      void 0 === r ? '403' : r,
                                      _,
                                      ee.a.get(t, 'body.error.message')
                                    )
                                  );
                                } else a(e);
                              else a(new B());
                            else
                              switch (m.resFormat) {
                                case 'json':
                                  var o = t.body || {};
                                  ('reply' in o) && (o = o.reply);
                                  var i = {
                                    data: o,
                                    headers: n,
                                    getHeader: function (e) {
                                      return n[e.toLowerCase()];
                                    },
                                    status: t.status,
                                  };
                                  y.logger && y.logger.info('success', _.toUpperCase(), g, i), s(i);
                                  break;
                                default:
                                  y.logger &&
                                    y.logger.info(
                                      'success',
                                      _.toUpperCase(),
                                      g,
                                      t.text ? t.text.substr(0, 80) + '...' : '[null]'
                                    ),
                                    s(t.text);
                              }
                          });
                        }),
                      ];
                  }
                });
              })
            );
          };
        },
        la = 0,
        da = ['get', 'post', 'put', 'patch', 'del'];
      la < da.length;
      la++
    )
      ca(da[la]);
    function ha(e) {
      var t = e.config,
        n = e.logger;
      (this.downloadFileBlobAndUrl = function () {
        return Z.raise();
      }),
        (this.config = t),
        (this.logger = n),
        (this._prefixBaseUrl = Ps()(this.config.baseUrl)),
        this._watchNetworkConnection();
    }
    function pa() {
      (this.body = new js.RequestBody()), (this.fileIdx = 0), this.body.setType('multipart');
    }
    (Zs = ua.prototype.get),
      (ea = Object(Rs.decorator)(Zs)),
      (ua.prototype.get = function (e, t) {
        return void 0 === t && (t = {}), t.reusePromise ? ea.call(this, e, t) : Zs.call(this, e, t);
      }),
      Object.assign(ua.prototype, M.a.prototype);
    var fa = ua,
      va = d(6),
      ya = d.n(va);
    function ga(e) {
      if (!e) return e;
      var t = e.split('T')[0];
      if (t.includes('-')) {
        var n = t.split('-'),
          r = n[0];
        return [n[1], n[2], r].join('/');
      }
      if (t.includes('/')) {
        var o = t.split('/');
        return [o[0], o[1], (r = o[2])].join('/');
      }
      return e;
    }
    function ma(e) {
      if (!e || !parseInt(e)) return '';
      var t = parseInt(e),
        n = Math.floor(t / 86400),
        r = t % 86400,
        o = new Date(0);
      o.setSeconds(r);
      var i = o
          .toISOString()
          .substr(11, 8)
          .split(':')
          .map(function (e) {
            return parseInt(e);
          }),
        s = i[0],
        a = i[1],
        u = i[2] + ' sec';
      return (a || s || n) && (u = a + ' min ' + u), (s || n) && (u = s + 24 * n + ' hr ' + u), u;
    }
    var _a = function (e, s, a, u) {
        return new (a = a || Promise)(function (n, t) {
          function r(e) {
            try {
              i(u.next(e));
            } catch (e) {
              t(e);
            }
          }
          function o(e) {
            try {
              i(u.throw(e));
            } catch (e) {
              t(e);
            }
          }
          function i(e) {
            var t;
            e.done
              ? n(e.value)
              : ((t = e.value) instanceof a
                  ? t
                  : new a(function (e) {
                      e(t);
                    })
                ).then(r, o);
          }
          i((u = u.apply(e, s || [])).next());
        });
      },
      ba = function (n, r) {
        var o,
          i,
          s,
          e,
          a = {
            label: 0,
            sent: function () {
              if (1 & s[0]) throw s[1];
              return s[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (e = { next: t(0), throw: t(1), return: t(2) }),
          'function' == typeof Symbol &&
            (e[Symbol.iterator] = function () {
              return this;
            }),
          e
        );
        function t(t) {
          return function (e) {
            return (function (t) {
              if (o) throw new TypeError('Generator is already executing.');
              for (; a; )
                try {
                  if (
                    ((o = 1),
                    i &&
                      (s =
                        2 & t[0]
                          ? i.return
                          : t[0]
                          ? i.throw || ((s = i.return) && s.call(i), 0)
                          : i.next) &&
                      !(s = s.call(i, t[1])).done)
                  )
                    return s;
                  switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                    case 0:
                    case 1:
                      s = t;
                      break;
                    case 4:
                      return a.label++, { value: t[1], done: !1 };
                    case 5:
                      a.label++, (i = t[1]), (t = [0]);
                      continue;
                    case 7:
                      (t = a.ops.pop()), a.trys.pop();
                      continue;
                    default:
                      if (
                        !(
                          (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                          (6 !== t[0] && 2 !== t[0])
                        )
                      ) {
                        a = 0;
                        continue;
                      }
                      if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                        a.label = t[1];
                        break;
                      }
                      if (6 === t[0] && a.label < s[1]) {
                        (a.label = s[1]), (s = t);
                        break;
                      }
                      if (s && a.label < s[2]) {
                        (a.label = s[2]), a.ops.push(t);
                        break;
                      }
                      s[2] && a.ops.pop(), a.trys.pop();
                      continue;
                  }
                  t = r.call(n, a);
                } catch (e) {
                  (t = [6, e]), (i = 0);
                } finally {
                  o = s = 0;
                }
              if (5 & t[0]) throw t[1];
              return { value: t[0] ? t[1] : void 0, done: !0 };
            })([t, e]);
          };
        }
      };
    function wa(e) {
      var r = e.attachmentContentType,
        o = e.blob,
        i = e.fileName;
      return _a(this, void 0, void 0, function () {
        var t, n;
        return ba(this, function (e) {
          switch (e.label) {
            case 0:
              return [3, 4];
            case 1:
              return (
                (t = e.sent()),
                (n = (function (e) {
                  for (
                    var t = window.atob(e), n = t.length, r = new Uint8Array(n), o = 0;
                    o < n;
                    o++
                  ) {
                    var i = t.charCodeAt(o);
                    r[o] = i;
                  }
                  return r;
                })(t)),
                Oa(i, n, r),
                [3, 3]
              );
            case 2:
              (0, d(54).saveAs)(o, i), (e.label = 3);
            case 3:
              return [3, 5];
            case 4:
              Z.raise(), (e.label = 5);
            case 5:
              return [2];
          }
        });
      });
    }
    function Ia(r) {
      return new Promise(function (e, t) {
        var n = new FileReader();
        n.addEventListener(
          'load',
          function () {
            e(n.result);
          },
          !1
        ),
          n.addEventListener(
            'error',
            function (e) {
              t(e);
            },
            !1
          ),
          n.readAsDataURL(r);
      });
    }
    function Oa(e, t, n) {
      var r = new FileReader(),
        o = new Blob([t], { type: n });
      (r.fileName = e),
        (r.onload = function (e) {
          window.open(r.result, '_blank');
        }),
        r.readAsDataURL(o);
    }
    function Ta(e) {
      return void 0 !== e ? JSON.parse(JSON.stringify(e)) : null;
    }
    var Ea = function (e, t) {
      var n = Object.getOwnPropertyDescriptor(e, t);
      return n && n.configurable;
    };
    var Ra = d(17),
      Aa = d.n(Ra),
      Ca = Object.prototype.hasOwnProperty,
      Sa = Symbol('NOT_PROVIDED'),
      Pa =
        ((ja.prototype.add = function (e, t) {
          var n = Aa.a.gt(e, t, this.cmp);
          -1 !== n ? e.splice(n, 0, t) : e.push(t);
        }),
        (ja.prototype.indexOf = function (e, t, n) {
          var r = n && Ca.call(n, 'previousValue') ? n.previousValue : Sa,
            o = e.length;
          if (r === Sa || 0 === this.cmp(t, r)) {
            if (-1 != (i = -1 === (i = Aa.a.gt(e, t, this.cmp)) ? o - 1 : i - 1)) {
              for (; 0 < i && 0 === this.cmp(e[i - 1], t); ) i--;
              for (; i < o && 0 === this.cmp(e[i], t); ) {
                if (e[i] === t) return i;
                i++;
              }
            }
          } else
            for (var i = 0; i < o; ) {
              if (e[i] === t) return i;
              i++;
            }
          return -1;
        }),
        (ja.prototype.remove = function (e, t, n) {
          var r = this.indexOf(e, t, n);
          return -1 !== r && (e.splice(r, 1), !0);
        }),
        (ja.prototype.removeAll = function (e, t, n) {
          var r = n && Ca.call(n, 'previousValue') ? n.previousValue : Sa,
            o = this.indexOf(e, t, n),
            i = !1;
          if (-1 !== o)
            for (
              var s = r === Sa || 0 === this.cmp(t, r);
              o < e.length && (!s || 0 === this.cmp(e[o], t));

            )
              e[o] === t ? (e.splice(o, 1), (i = !0)) : o++;
          return i;
        }),
        (ja.prototype.update = function (e, t, n) {
          var r = n && Ca.call(n, 'previousValue') ? n.previousValue : Sa,
            o = r === Sa || 0 === this.cmp(t, r),
            i = this.indexOf(e, t, n);
          if (-1 !== i) {
            if (o) return !1;
            e.splice(i, 1);
          }
          return -1 !== (i = Aa.a.gt(e, t, this.cmp)) ? e.splice(i, 0, t) : e.push(t), !0;
        }),
        ja);
    function ja(e) {
      this.cmp = e;
    }
    encodeURIComponent;
    var Ma = {
        isNotEmpty: function (e, t) {
          return !!t;
        },
        notEmpty: function (e, t, n) {
          Ma.isNotEmpty(e, t) ||
            ((n = n || 'expected ' + e + ' to be provided'), Ma.raise(e, void 0, n));
        },
        isOneOf: function (e, t, n) {
          return n.includes(t);
        },
        oneOf: function (e, t, n, r) {
          Ma.isOneOf(e, t, n) ||
            ((r = r || 'expected ' + t + ' to be one of (' + n.join(', ') + ')'),
            Ma.raise(e, void 0, r));
        },
        raise: function (e, t, n) {
          throw (void 0 === t && (t = 'invalid'), new ne(e, t, n));
        },
      },
      za = Ma;
    function ka() {
      return Na(this);
    }
    function Na(e) {
      return Array.isArray(e) ? e : null != e ? [e] : [];
    }
    var xa =
        ((La.prototype._resolveModelIdWithTypes = function (e, t) {
          if (!e) return null;
          if ('string' == typeof e) {
            var n = this._resolveEntity(e);
            if (!n) return e;
            e = n;
          }
          return za.oneOf('thing', e.$entityType, Na(t)), e.serverId || e.id || null;
        }),
        (La.prototype._resolveEntity = function (e, t) {
          (t = t ? Na(t) : this.host.allModelEntityTypes),
            'object' == typeof e &&
              (e.$entityType && (za.oneOf('thing', e.$entityType, t), (t = [e.$entityType])),
              (e = e.id));
          for (var n = 0, r = t; n < r.length; n++) {
            var o = r[n],
              i = this.host.modelsByEntityType[o].get(e);
            if (i) return i;
          }
          return null;
        }),
        (La.prototype.mounted = function () {}),
        (La.prototype.dispose = function () {}),
        La),
      Ua = xa;
    function La(e, t) {
      (this._resolveModelId = function (e) {
        return 'string' == typeof e ? e : (e && (e.serverId || e.id)) || null;
      }),
        Object.assign(this, t),
        (this.host = e),
        (this.config = e.config),
        (this.httpClient = e.httpClient);
    }
    Object.assign(xa.prototype, M.a.prototype);
    function qa(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Da(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ba(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Fa(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Ga(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Va(e, t) {
      var n = {};
      for (var r in e)
        Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
      if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
        var o = 0;
        for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
          t.indexOf(r[o]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
            (n[r[o]] = e[r[o]]);
      }
      return n;
    }
    function Ka(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Ha(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function $a(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Wa(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Xa(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Qa(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Ya(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Ja(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Za(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function eu(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function tu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function nu(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function ru(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ou(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function iu() {
      for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
      var r = Array(e),
        o = 0;
      for (t = 0; t < n; t++)
        for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++) r[o] = i[s];
      return r;
    }
    function su(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function au(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function uu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function cu(e, t) {
      var n = {};
      for (var r in e)
        Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
      if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
        var o = 0;
        for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
          t.indexOf(r[o]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
            (n[r[o]] = e[r[o]]);
      }
      return n;
    }
    function lu() {
      for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
      var r = Array(e),
        o = 0;
      for (t = 0; t < n; t++)
        for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++) r[o] = i[s];
      return r;
    }
    function du(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function hu(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function pu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function fu(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function vu(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function yu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function gu(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function mu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function _u(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function bu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function wu(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function Iu(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Ou(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function Tu(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Eu(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var Ru,
      Au,
      Cu,
      Su,
      Pu,
      ju,
      Mu,
      zu,
      ku,
      Nu,
      xu,
      Uu,
      Lu,
      qu,
      Du,
      Bu,
      Fu,
      Gu,
      Vu,
      Ku,
      Hu,
      $u,
      Wu,
      Xu,
      Qu,
      Yu,
      Ju,
      Zu,
      ec,
      tc,
      nc,
      rc,
      oc,
      ic,
      sc,
      ac,
      uc =
        ((ac = function (e, t) {
          return (ac =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          ac(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      cc =
        (uc(td, (sc = Ua)),
        (td.prototype.start = function (e) {
          var _ = e.organizationId,
            b = e.recipients,
            w = e.payload,
            I = e.context;
          return qa(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!_) throw new ne('organizationId', 'required');
                  if (!b) throw new ne('recipients', 'required');
                  if (!w) throw new ne('payload', 'required');
                  if (!b.length) throw new ne('recipients array', 'required');
                  if (
                    ((t = w.callId),
                    (n = w.callerId),
                    (r = w.date),
                    (o = w.groupId),
                    (i = w.identity),
                    (s = w.isVideo),
                    (a = w.name),
                    (u = w.networkType),
                    (c = w.orgId),
                    (l = w.participantsTokens),
                    (d = w.recipientToken),
                    (h = w.roleTokens),
                    !t)
                  )
                    throw new ne('payload.callId', 'required');
                  if (!n) throw new ne('payload.callerId', 'required');
                  if (!r) throw new ne('payload.date', 'required');
                  if (!o) throw new ne('payload.groupId', 'required');
                  if (!i) throw new ne('payload.identity', 'required');
                  if (!s) throw new ne('payload.isVideo', 'required');
                  if (!a) throw new ne('payload.name', 'required');
                  if (!u) throw new ne('payload.networkType', 'required');
                  if (!c) throw new ne('payload.orgId', 'required');
                  if (!l) throw new ne('payload.participantsTokens', 'required');
                  if (!d) throw new ne('payload.recipientToken', 'required');
                  if (!h) throw new ne('payload.roleTokens', 'required');
                  return [
                    4,
                    this.host.api.calls.start({
                      organization: _,
                      recipients: b,
                      payload: In.underscoreObject(w),
                      context: I || {},
                    }),
                  ];
                case 1:
                  return (
                    (p = e.sent()),
                    (f = p.accessToken),
                    (v = p.roomName),
                    (y = p.disabledParticipants),
                    (g = void 0 === y ? {} : y),
                    (m = {}),
                    v
                      ? ((m = this.host.models.Call.inject({
                          id: v,
                          payload: w,
                          accessToken: f,
                          roomName: v,
                        })),
                        'patient' === u && Object.keys(g).length
                          ? [
                              4,
                              this.host.api.calls.state(v, c, {
                                callId: t,
                                payload: {
                                  callState: 'disabled_participants',
                                  disabledParticipants: g,
                                },
                              }),
                            ]
                          : [3, 3])
                      : [3, 3]
                  );
                case 2:
                  e.sent(), (e.label = 3);
                case 3:
                  return [2, m];
              }
            });
          });
        }),
        (td.prototype.decline = function (s, e) {
          var a = e.payload;
          return qa(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = this._resolveModelId(s)),
                    (n = this._resolveEntity(t, 'call')),
                    (r = n.callId),
                    (o = n.organizationId),
                    (i = n.id),
                    !o)
                  )
                    throw new ne('organizationId', 'required');
                  if (!a) throw new ne('payload', 'required');
                  if (!i) throw new ne('roomName', 'required');
                  if (!r) throw new ne('callId', 'required');
                  return [4, this.host.api.calls.decline(i, o, { callId: r, payload: a })];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (td.prototype.end = function (s, e) {
          var a = e.payload,
            u = e.reason;
          return qa(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = this._resolveModelId(s)),
                    (n = this._resolveEntity(t, 'call')),
                    (r = n.callId),
                    (o = n.organizationId),
                    (i = n.id),
                    !o)
                  )
                    throw new ne('organizationId', 'required');
                  if (!a) throw new ne('payload', 'required');
                  if (!u) throw new ne('reason', 'required');
                  if (!i) throw new ne('roomName', 'required');
                  if (!r) throw new ne('callId', 'required');
                  return [4, this.host.api.calls.end(i, o, { callId: r, payload: a, reason: u })];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (td.prototype.join = function (s) {
          return qa(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = this._resolveModelId(s)),
                    (n = this._resolveEntity(t, 'call')),
                    (r = n.organizationId),
                    (o = n.id),
                    !r)
                  )
                    throw new ne('organizationId', 'required');
                  if (!o) throw new ne('roomName', 'required');
                  return [4, this.host.api.calls.join(o, r)];
                case 1:
                  return (i = e.sent()), [2, In.camelizeObject(i)];
              }
            });
          });
        }),
        (td.prototype.answer = function (a, e) {
          var u = e.payload;
          return qa(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = this._resolveModelId(a)),
                    (n = this._resolveEntity(t, 'call')),
                    (r = n.callId),
                    (o = n.organizationId),
                    !(i = n.id))
                  )
                    throw new ne('roomName', 'required');
                  if (!o) throw new ne('organizationId', 'required');
                  if (!u) throw new ne('payload', 'required');
                  if (!r) throw new ne('callId', 'required');
                  return [4, this.host.api.calls.answer(i, o, { payload: u, callId: r })];
                case 1:
                  return (s = e.sent()), [2, In.camelizeObject(s)];
              }
            });
          });
        }),
        (td.prototype.invite = function (s, e) {
          var a = e.currentUserId,
            u = e.payload,
            c = e.recipients;
          return qa(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = this._resolveModelId(s)),
                    (n = this._resolveEntity(t, 'call')),
                    (r = n.callId),
                    (o = n.organizationId),
                    (i = n.id),
                    !o)
                  )
                    throw new ne('organizationId', 'required');
                  if (!i) throw new ne('roomName', 'required');
                  if (!u) throw new ne('payload', 'required');
                  if (!c) throw new ne('recipients', 'required');
                  if (!r) throw new ne('callId', 'required');
                  if (!a) throw new ne('currentUserId', 'required');
                  return [
                    4,
                    this.host.api.calls.invite(i, o, { callId: r, payload: u, recipients: c }),
                  ];
                case 1:
                  return (
                    e.sent(),
                    [
                      4,
                      this.host.api.calls.state(i, o, {
                        callId: r,
                        payload: {
                          callState: 'participants_updated',
                          inviteInitiator: a,
                          newParticipants: c,
                          roleTokens: {},
                        },
                      }),
                    ]
                  );
                case 2:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (td.prototype.log = function (e) {
          var i = e.network,
            s = e.organizationId,
            a = e.page;
          return qa(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o = this;
            return Da(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!s) throw new ne('organizationId', 'required');
                  if (!i) throw new ne('network', 'required');
                  return [4, this.host.api.calls.log({ network: i, organizationId: s, page: a })];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = t.metadata),
                    (r = t.results),
                    [
                      2,
                      {
                        metadata: n,
                        results: r.map(function (e) {
                          return o.host.models.CallLogEntry.inject(e);
                        }),
                      },
                    ]
                  );
              }
            });
          });
        }),
        (td.prototype.reactToVoipSSE = function (e) {
          var t = e.data,
            n = e.type;
          if ('provider' !== ya()(t, 'payload.network_type')) {
            t = Ta(t);
            var r = n.split(':')[1],
              o = this.host.models.Call.inject(Object.assign(t, { callStatus: r }));
            this.emit(r, o);
          }
        }),
        td),
      lc = d(8),
      dc = d.n(lc),
      hc = d(28),
      pc = d.n(hc),
      fc = d(7),
      vc = d.n(fc),
      yc = d(2),
      gc = d.n(yc),
      mc = d(16),
      _c = d.n(mc),
      bc = d(5),
      wc = d.n(bc),
      Ic =
        ((ic = function (e, t) {
          return (ic =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          ic(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Oc = function () {
        return (Oc =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Tc = new Vr.a.MD5(),
      Ec = [pi.ESCALATION_EXECUTION_CHANGE, pi.GROUP_MEMBERSHIP_CHANGE],
      Rc = li.toServer(li.DELIVERED),
      Ac =
        (((Ru = {})[oi.ACKNOWLEDGED] = 'Acknowledged'),
        (Ru[oi.CANCELLED] = 'Cancelled'),
        (Ru[oi.INITIATED] = 'Initiated'),
        (Ru[oi.MEMBER_ADDED] = 'Added'),
        (Ru[oi.NO_RESPONSE] = 'ended with No Response'),
        Ru),
      Cc = [si.GROUP, si.FORUM, si.ROLE_ASSIGNMENT, si.ROLE_P2P],
      Sc = { ADD: 'added', JOIN: 'joined', LEAVE: 'left', REMOVE: 'removed', DENY: 'declined' },
      Pc = { ADD: 'to', REMOVE: 'from', DENY: 'to join' },
      jc =
        (((Au = {})[si.ACTIVATED_TEAM] = 'group'),
        (Au[si.ESCALATION] = 'escalation'),
        (Au[si.FORUM] = 'forum'),
        (Au[si.GROUP] = 'group'),
        (Au[si.PATIENT_CARE] = 'care team'),
        (Au[si.ROLE_P2P] = 'conversation'),
        (Au[si.PATIENT_MESSAGING] = 'group'),
        (Au[si.INTRA_TEAM] = 'team'),
        Au),
      Mc = [li.NEW, li.DELIVERED],
      zc = li.toServer(li.READ),
      kc = { OPT_IN: 'opted into', OPT_OUT: 'opted out of' },
      Nc =
        (Ic(ed, (oc = Ua)),
        (ed.prototype.mounted = function () {
          (this.__escalationEnabledOrganizations = []),
            (this.__queuedConversationsToReload = []),
            (this._convByConvHandle = {}),
            (this._fetched = !1),
            (this._roleConversationsProcessingEvent = {}),
            (this._rolesFriendsEventPromise = null),
            this.host.on('message:sending', this._onSendingMessage),
            this.host.on('message:sent', this._onSentMessage),
            this.host.models.Group.on('afterEject', this._onRemoveGroup),
            this.host.models.Group.on('afterInject', this._onChangeGroup),
            this.host.models.Team.on('afterEject', this._onRemoveTeam),
            this.host.models.Message.on('afterInject', this._onChangeMessage),
            this.host.models.Message.on('afterEject', this._onRemoveMessage),
            this.host.models.Organization.on('afterInject', this._onChangeOrganization);
        }),
        (ed.prototype.dispose = function () {
          (this._convByConvHandle = {}),
            (this._fetched = !1),
            (this._rolesFriendsEventPromise = null),
            (this.__escalationEnabledOrganizations = []),
            (this.__queuedConversationsToReload = []),
            this.host.removeListener('message:sending', this._onSendingMessage),
            this.host.removeListener('message:sent', this._onSentMessage),
            this.host.models.Group.removeListener('afterEject', this._onRemoveGroup),
            this.host.models.Group.removeListener('afterInject', this._onChangeGroup),
            this.host.models.Team.removeListener('afterEject', this._onRemoveTeam),
            this.host.models.Message.removeListener('afterInject', this._onChangeMessage),
            this.host.models.Message.removeListener('afterEject', this._onRemoveMessage),
            this.host.models.Organization.removeListener('afterInject', this._onChangeOrganization);
        }),
        (ed.prototype.clearTimeline = function (e, t) {
          var n = (void 0 === t ? {} : t).emit,
            r = void 0 === n || n,
            o = this._resolveEntity(e, 'conversation');
          if (!o) throw new G(this.host.models.Conversation.name, e);
          (e = this._resolveModelId(e)), this.clearMessageStatuses(o, { emit: !1 });
          for (
            var i = o.higherContinuation, s = o.lowerContinuation, a = 0, u = 0, c = o.timeline;
            u < c.length;
            u++
          ) {
            var l = c[u];
            l.isEphemeral || ((l.inTimeline = !1), (a += 1));
          }
          return (
            (o.isLive = !1),
            (i.itemsEstimate = null),
            (s.itemsEstimate = null),
            r && this.emit('clearTimeline', e),
            this.config.condensedReplays
              ? this.host.models.Conversation.inject(o)
              : this.__reloadConversation(o, { notify: !1 }),
            a
          );
        }),
        (ed.prototype.fetchTimeline = function (w, e) {
          var t = void 0 === e ? {} : e,
            n = t.anchorPoint,
            I = void 0 === n ? ri.CONVERSATION_END : n,
            O = t.continuation,
            r = t.fetchAllItems,
            T = void 0 !== r && r,
            o = t.markAsDelivered,
            E = void 0 === o || o,
            i = t.maxItems,
            R = void 0 === i ? 15 : i;
          return Fa(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _, b;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(w, 'conversation')))
                    throw new G(this.host.models.Conversation.name, w);
                  return (
                    (w = this._resolveModelId(w)),
                    this.config.condensedReplays
                      ? [
                          4,
                          this._fetchTimelineCR(w, {
                            anchorPoint: I,
                            continuation: O,
                            conversation: t,
                            fetchAllItems: T,
                            markAsDelivered: E,
                            maxItems: R,
                          }),
                        ]
                      : [3, 2]
                  );
                case 1:
                  return [2, e.sent()];
                case 2:
                  if (
                    I !== ri.CONTINUATION &&
                    t.isLive &&
                    ((!T && t.timeline.length >= R) ||
                      (t.lowerContinuation && 0 === t.lowerContinuation.itemsEstimate))
                  )
                    return [2, 0];
                  if (
                    ((n = t.content),
                    (r = t.timeline),
                    (o = t.firstUnreadMessage),
                    (i = n.length),
                    (s = 0),
                    (a = []),
                    (u = i - R),
                    (c = i),
                    I === ri.CONVERSATION_END)
                  )
                    this.clearTimeline(t, { emit: !1 });
                  else if (I === ri.FIRST_UNREAD_ITEM) {
                    for (
                      this.clearTimeline(t, { emit: !1 }), v = -1, l = 0, d = n;
                      l < d.length && ((b = d[l]), (c = ++v), o !== b);
                      l++
                    );
                    c < n.length && (c = Math.min(c + R, n.length));
                  } else if (I === ri.CONTINUATION)
                    if (
                      ((h = r[0] ? r[0].sortNumber : 1 / 0),
                      (p = r[r.length - 1] ? r[r.length - 1].sortNumber : 0),
                      0 === (f = 'LOWER' === O ? h : p))
                    )
                      c -= R;
                    else
                      for (
                        v = -1, y = 0, g = n;
                        y < g.length &&
                        ((b = g[y]), (c = ++v), !('HIGHER' === O && b.sortNumber > f)) &&
                        !('LOWER' === O && b.sortNumber >= f);
                        y++
                      );
                  for (
                    I !== ri.CONVERSATION_END &&
                      (I === ri.CONTINUATION && 'HIGHER' === O
                        ? (i = (u = c) + R)
                        : (c === n.length - 1 && (c += 1), (u = (i = c) - R))),
                      i = Math.min(i, n.length + 1),
                      u = Math.max(u, 0),
                      a.push.apply(a, n.slice(u, i)),
                      m = 0,
                      _ = a;
                    m < _.length;
                    m++
                  )
                    (b = _[m]).inTimeline ||
                      ((b.inTimeline = !0), this.host.models.Message.inject(b), (s += 1));
                  return [2, s];
              }
            });
          });
        }),
        (ed.prototype._fetchTimelineCR = function (I, e) {
          var t = void 0 === e ? {} : e,
            n = t.anchorPoint,
            O = void 0 === n ? ri.CONVERSATION_END : n,
            T = t.continuation,
            E = t.conversation,
            r = t.fetchAllItems,
            R = void 0 !== r && r,
            o = t.markAsDelivered,
            A = void 0 === o || o,
            i = t.maxItems,
            C = void 0 === i ? 15 : i;
          return Fa(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _, b, w;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return O !== ri.CONTINUATION &&
                    E.isLive &&
                    ((!R && E.timeline.length >= C) ||
                      (E.lowerContinuation && 0 === E.lowerContinuation.itemsEstimate))
                    ? [2, 0]
                    : (O === ri.CONVERSATION_END
                        ? this.clearTimeline(E, { emit: !1 })
                        : O === ri.FIRST_UNREAD_ITEM &&
                          ((E.firstUnreadMessage = null), this.clearTimeline(E, { emit: !1 })),
                      [
                        4,
                        this.host.api.conversations.fetchTimeline(I, ri.toServer(O), C, {
                          continuation: T,
                          markAsDelivered: A,
                        }),
                      ]);
                case 1:
                  for (
                    t = e.sent(),
                      n = t.direction,
                      r = t.higher_continuation,
                      o = t.lower_continuation,
                      i = t.max_items,
                      s = t.timeline,
                      a = E.higherContinuation,
                      u = E.lowerContinuation,
                      c = null,
                      i && (C = i),
                      l = 0,
                      d = s;
                    l < d.length;
                    l++
                  )
                    (h = d[l]),
                      'tigertext:iq:bang' === (p = h.xmlns)
                        ? (f = h.bang_id || '' + h.sort_number)
                          ? this.host.groups.__handleBang({
                              data: h,
                              eventId: f,
                              alwaysAddToTimeline: !0,
                            })
                          : this.logger.warn('Skipping bang with no event id')
                        : 'tigertext:iq:message' === p || 'tigertext:iq:group_message' === p
                        ? (h.conversation_id || (h.conversation_id = I),
                          ((v = this._reactToMessageEventCR({ data: h, injectConversation: !1 })
                            .message).inTimeline = !0),
                          v.isOutgoing ||
                            ((y = {
                              id: v.id + ':' + v.counterPartyId,
                              messageId: v.id,
                              status: li.resolve(h.status),
                              userId: this.host.currentUserId,
                            }),
                            this.host.models.MessageStatusPerRecipient.inject(y)),
                          (v.senderStatus = di.SENT),
                          (g = this.host.models.Message.inject(v)),
                          (c = c || g))
                        : this.logger.warn('Skipping timeline entry with unrecognized xmlns: ' + p);
                  return (
                    ('Higher' !== n && 'Initial' !== n) ||
                      ((b = 0 === s.length || s.length < C ? 0 : 1),
                      O === ri.CONVERSATION_END && (b = 0),
                      1 === b &&
                        'Initial' === n &&
                        ((m = s[s.length - 1]),
                        (_ = E.lastMessage),
                        O === ri.FIRST_UNREAD_ITEM && c && !c.isUnread
                          ? (b = 0)
                          : _ && m.message_id === _.id && (b = _.isUnread ? 1 : 0)),
                      (a = { continuation: { higher_continuation: r }, itemsEstimate: b })),
                    ('Lower' !== n && 'Initial' !== n) ||
                      ((b = 0 === s.length || s.length < C ? 0 : 1),
                      (u = { continuation: { lower_continuation: o }, itemsEstimate: b })),
                    (w = s.length),
                    (E.isLive = 0 === a.itemsEstimate),
                    (E.higherContinuation = a),
                    (E.lowerContinuation = u),
                    this.host.models.Conversation.inject(E),
                    O === ri.CONTINUATION || void 0 === E.lowestSortNumber
                      ? [3, 3]
                      : [4, this.markAsDelivered(E.id)]
                  );
                case 2:
                  e.sent(), (e.label = 3);
                case 3:
                  return [2, w];
              }
            });
          });
        }),
        (ed.prototype.findAll = function (n) {
          return (
            void 0 === n && (n = {}),
            Fa(this, void 0, void 0, function () {
              var t;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (n = ee.a.defaults(n, { includeMutes: !0 })),
                      this.config.condensedReplays && (n.includeMutes = !1),
                      this._fetched
                        ? [2, this.getAll()]
                        : [
                            4,
                            Promise.all([
                              this.host.api.roster.findAll(),
                              n.includeMutes ? this.host.mute.findAll() : Promise.resolve(),
                            ]),
                          ]
                    );
                  case 1:
                    return (
                      (t = e.sent()[0]),
                      this.config.condensedReplays
                        ? [2, this._processFindAllCR(t)]
                        : [2, this._processFindAll(t)]
                    );
                }
              });
            })
          );
        }),
        (ed.prototype.findAllForOrganization = function (n) {
          return Fa(this, void 0, void 0, function () {
            var t;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((n = this._resolveModelIdWithTypes(n, 'organization')),
                    !this.config.condensedReplays)
                  )
                    throw new $(
                      'findAllForOrganization() may not be called if this.config.condensedReplays=false'
                    );
                  return this._fetched
                    ? [2, this.getAllForOrganization(n)]
                    : [4, this.host.api.roster.findAll({ organizationId: n })];
                case 1:
                  return (t = e.sent()), [2, this._processFindAllCR(t)];
              }
            });
          });
        }),
        (ed.prototype._processFindAllCR = function (e) {
          for (
            var t = [],
              n = [],
              r = { counterParty: 'full', groupMembers: 'full', organization: 'placeholder' },
              o = 0;
            o < e.length;
            o++
          ) {
            var i = (c = e[o]).entity;
            if (i) {
              var s = this.host.modelNameByEntityType(i.type);
              'user' === s
                ? n.push({ rawConversation: c, origIndex: o })
                : s && t.push({ rawConversation: c, origIndex: o });
            }
          }
          for (var a = 0, u = n; a < u.length; a++) {
            var c = (p = u[a]).rawConversation;
            (o = p.origIndex), (p.conversation = this.__injectConversation(c, { origIndex: o }));
          }
          for (var l = 0, d = t; l < d.length; l++)
            (c = (p = d[l]).rawConversation),
              (o = p.origIndex),
              (p.conversation = this.__injectConversation(c, { hasCurrentUser: !0, origIndex: o }));
          for (var h = []; 0 < t.length || 0 < n.length; ) {
            var p,
              f = (p =
                0 === t.length
                  ? n.shift()
                  : 0 === n.length || t[0].origIndex < n[0].origIndex
                  ? t.shift()
                  : n.shift()).conversation;
            this.__ensureEntities(f, r), h.push(f);
          }
          return (this._fetched = !0), h;
        }),
        (ed.prototype._processFindAll = function (e) {
          for (var t = [], n = [], r = [], o = 0; o < e.length; o++) {
            var i = (g = e[o]).organization_key,
              s = g.type,
              a = Va(g, ['organization_key', 'type']),
              u = this.host.modelNameByTypeNS(s);
            if (
              ((a.organizationId = i),
              'user' ===
                (g = { entityAttrs: a, entityType: u, organizationId: i, origIndex: o }).entityType)
            )
              (g.counterParty = this.__injectCounterParty(g)), r.push(g);
            else if (g.entityType) {
              if (
                ('group' === u && (g.groupType = this.host.groups.__extractGroupTypeFromAttrs(a)),
                g.groupType === si.FORUM)
              )
                delete a.members;
              else if (
                g.groupType === si.PATIENT_MESSAGING &&
                g.entityAttrs &&
                g.entityAttrs.metadata
              ) {
                var c = g.entityAttrs,
                  l = c.avatar,
                  d = c.metadata,
                  h = d.patient_id,
                  p = d.patient_contact_id;
                this.host.models.User.injectPlaceholder({ id: p || h, avatar: l, metadata: d });
              }
              n.push(g);
            }
          }
          for (var f = 0, v = n; f < v.length; f++)
            ((g = v[f]).counterParty = this.__injectCounterParty(
              Oc(Oc({}, g), { hasCurrentUser: !0 })
            )),
              t.push(g);
          for (var y = []; 0 < t.length || 0 < r.length; ) {
            var g,
              m = (g =
                0 === t.length
                  ? r.shift()
                  : 0 === r.length || t[0].origIndex < r[0].origIndex
                  ? t.shift()
                  : r.shift()).conversationId,
              _ = g.counterParty,
              b = g.lastMessage,
              w = g.muted,
              I = ((i = g.organizationId), (u = g.entityType), g.groupType),
              O = 'group' === u && I && 'PATIENT_MESSAGING' === I ? fi.PATIENT : fi.PROVIDER;
            delete _.$placeholder;
            var T = void 0;
            this.host.config.condensedReplays && b && b.sort_number && (T = b.sort_number);
            var E = this.ensureConversation(_.$entityType, _.id, i, {
              conversationId: m,
              ensureEntities: {
                counterParty: 'full',
                groupMembers: 'full',
                organization: 'placeholder',
              },
              highestSortNumber: T,
              muted: w,
              network: O,
            });
            (E._counterPartyAddedOnServer = !0), y.push(E);
          }
          return (this._fetched = !0), y;
        }),
        (ed.prototype.find = function (a, u) {
          return (
            void 0 === u && (u = {}),
            Fa(this, void 0, void 0, function () {
              var t, n, r, o, i, s;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (u = ee.a.defaultsDeep(u, {
                        ensureEntities: {
                          counterParty: 'full',
                          escalationExecution: 'full',
                          groupMembers: 'placeholder',
                          messageCounterParties: 'full',
                          organization: 'placeholder',
                          touchOnRelatedEntityLoad: !1,
                        },
                      })),
                      this.config.condensedReplays
                        ? (t = this.getById(a)) && t.$localOnly
                          ? [3, 2]
                          : [4, this.host.api.conversations.find(a)]
                        : [3, 3]
                    );
                  case 1:
                    if (!(n = e.sent())) throw new G(this.host.models.Conversation.name, a);
                    if (!(t = this.__injectConversation(n)))
                      throw new G(this.host.models.Conversation.name, a);
                    e.label = 2;
                  case 2:
                    return [3, 6];
                  case 3:
                    return (
                      (r = u.groupId),
                      (o = u.organizationId),
                      (i = u.includeMutes),
                      (s = r && o ? this.getConversationKey('group', r, o) : a),
                      (t = this.getById(s)) ? [3, 5] : [4, this.findAll({ includeMutes: i })]
                    );
                  case 4:
                    e.sent(), (t = this.getById(s)), (e.label = 5);
                  case 5:
                    if (!t) throw new G(this.host.models.Conversation.name, a);
                    e.label = 6;
                  case 6:
                    return u.ensureEntities
                      ? [4, this.__ensureEntities(t, u.ensureEntities)]
                      : [3, 8];
                  case 7:
                    e.sent(), (e.label = 8);
                  case 8:
                    return [2, t];
                }
              });
            })
          );
        }),
        (ed.prototype.__injectConversation = function (e, t) {
          var n,
            r = void 0 === t ? {} : t,
            o = r.hasCurrentUser,
            i = r.highestSortNumber,
            s = r.origIndex,
            a = void 0 === s ? this.host.models.Conversation.getAll().length : s,
            u = e.conversation_id,
            c = e.entity,
            l = e.first_expiring_unread_message,
            d = e.in_progress_escalation_count,
            h = e.last_message,
            p = e.lowest_sort_number,
            f = e.muted,
            v = e.organization_id,
            y = e.unread_message_count,
            g = e.unread_priority_message_count,
            m = this.getById(u);
          if (m) (n = m.counterParty), (v = m.organizationId);
          else {
            if (
              ((v = v || e.organization_key),
              !f && c && c.muted && ((f = c.muted), delete c.muted),
              c &&
                (n = this.__injectCounterParty({
                  conversationId: u,
                  entityAttrs: c,
                  entityType: c.$entityType,
                  hasCurrentUser: o,
                  organizationId: v,
                })),
              !n)
            )
              return null;
            delete n.$placeholder,
              (m =
                m ||
                this.host.models.Conversation.createInstance({
                  id: u,
                  counterParty: n,
                  organizationId: v,
                  _origIndex: a,
                }));
          }
          var _ = n.id,
            b = n.$entityType,
            w = n.groupType;
          if (
            ('group' !== b || w !== si.FORUM || n.hasCurrentUser || (h = null),
            l
              ? (h &&
                  (h.message_id === l.message_id
                    ? (l = h)
                    : ((l.senderId = h.sender_token),
                      (l.senderOrganizationId = h.sender_organization))),
                (m.firstExpiringUnreadMessage = this._ensureFirstExpiringUnreadMessage({
                  rawFirstExpiringUnreadMessage: l,
                  conversationId: u,
                  counterParty: n,
                })))
              : null === l && (m.firstExpiringUnreadMessage = null),
            void 0 !== h)
          ) {
            var I = h
              ? this._ensureLastMessage({ rawLastMessage: h, conversationId: u, counterParty: n })
              : null;
            if (
              (I &&
                I.isEphemeral &&
                (!(O = m.lastEphemeralMessage) || I.sortNumber > O.sortNumber) &&
                (m.lastEphemeralMessage = I),
              m.lastEphemeralMessage)
            ) {
              var O = m.lastEphemeralMessage;
              (!I || O.sortNumber > I.sortNumber) && (I = O);
            }
            (m.lastMessage = I), void 0 === i && h && h.sort_number && (i = h.sort_number);
          }
          (m._counterPartyAddedOnServer = !0),
            c && c.metadata && (m.metadata = c.metadata),
            void 0 !== i && i > m.highestSortNumber && (m.highestSortNumber = i),
            void 0 !== p && 0 !== p && (m.lowestSortNumber = p),
            void 0 !== d && (m.inProgressEscalationCount = d),
            void 0 !== f && (m.muted = f),
            (m._markingAsRead && (void 0 === i || i <= m._markingAsReadSortNumber)) ||
              (void 0 !== y && (m.unreadCount = y), void 0 !== g && (m.unreadPriorityCount = g)),
            this.host.models.Conversation.inject(m);
          var T = this.getConversationKey(b, _, v);
          return (this._convByConvHandle[T] = m);
        }),
        (ed.prototype.refetch = function () {
          return Fa(this, void 0, void 0, function () {
            return Ga(this, function (e) {
              return (this._fetched = !1), [2, this.findAll()];
            });
          });
        }),
        (ed.prototype._ensureLastMessage = function (e) {
          var t = e.rawLastMessage,
            n = e.conversationId,
            r = e.counterParty,
            o = t.message_id,
            i = Va(t, ['message_id']);
          if (!o) return null;
          var s = this.host.messages.getById(o);
          return (
            s
              ? ((s.shouldEnsureRecipientStatus = !0),
                (s.senderStatus = di.SENT),
                this.host.models.Message.inject(s))
              : ((i.senderStatus = di.SENT),
                (i.id = o),
                (i.shouldEnsureRecipientStatus = !0),
                (i.conversationId = n),
                (i.counterParty = r),
                (s = this.host.models.Message.injectPlaceholder(i))),
            s
          );
        }),
        (ed.prototype._ensureFirstExpiringUnreadMessage = function (e) {
          var t = e.rawFirstExpiringUnreadMessage,
            n = e.conversationId,
            r = e.counterParty,
            o = t.expire_in,
            i = t.message_id,
            s = Va(t, ['expire_in', 'message_id']);
          if (i) {
            var a = this.host.messages.getById(i);
            return (
              a
                ? ((a.shouldEnsureRecipientStatus = !0),
                  (a.expireIn = o),
                  this.host.models.Message.inject(a))
                : ((s.id = i),
                  (s.shouldEnsureRecipientStatus = !0),
                  (s.expireIn = o),
                  (s.conversationId = n),
                  (s.counterParty = r),
                  (a = this.host.models.Message.injectPlaceholder(s))),
              a
            );
          }
          return null;
        }),
        (ed.prototype.markAsDelivered = function (o) {
          return Fa(this, void 0, void 0, function () {
            var t, n, r;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(o, 'conversation')))
                    throw new G(this.host.models.Conversation.name, o);
                  if (((o = this._resolveModelId(o)), !this.config.condensedReplays)) return [3, 5];
                  (n = t.highestSortNumber), (r = t.lowestSortNumber), (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 3, , 4]),
                    [
                      4,
                      this.host.api.conversations.updateConversationStatus(o, Rc, {
                        highestSortNumber: n,
                        lowestSortNumber: r,
                      }),
                    ]
                  );
                case 2:
                  return e.sent(), (t.lowestSortNumber = null), [3, 4];
                case 3:
                  return (
                    e.sent(),
                    this.logger.warn('failed to mark conversation ' + o + ' as delivered'),
                    [3, 4]
                  );
                case 4:
                  return this.host.models.Conversation.inject(t), [3, 6];
                case 5:
                  return [2, this.host.messages.markAsDelivered(t.messages)];
                case 6:
                  return [2];
              }
            });
          });
        }),
        (ed.prototype.markAsRead = function (o, i) {
          return (
            void 0 === i && (i = {}),
            Fa(this, void 0, void 0, function () {
              var t, n, r;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!(t = this._resolveEntity(o, 'conversation')))
                      throw new G(this.host.models.Conversation.name, o);
                    if (((o = this._resolveModelId(o)), !this.config.condensedReplays))
                      return [3, 5];
                    if (((n = t.highestSortNumber), (r = t.unreadCount), !t._markingAsRead)) {
                      if (0 === r) return [2];
                      (t._markingAsRead = !0),
                        (t._markingAsReadSortNumber = n),
                        (t._markingAsReadExpiration = new Date().getTime() + 3e4),
                        this.__reloadConversation(t);
                    }
                    if (i.localOnly) return [2];
                    e.label = 1;
                  case 1:
                    return (
                      e.trys.push([1, 3, , 4]),
                      [
                        4,
                        this.host.api.conversations.updateConversationStatus(o, zc, {
                          highestSortNumber: n,
                        }),
                      ]
                    );
                  case 2:
                    return e.sent(), [3, 4];
                  case 3:
                    return (
                      e.sent(),
                      this.logger.warn('failed to mark conversation ' + o + ' as read'),
                      [3, 4]
                    );
                  case 4:
                    return [3, 6];
                  case 5:
                    return [2, this.host.messages.markAsRead(t.markableAsReadMessages, i)];
                  case 6:
                    return [2];
                }
              });
            })
          );
        }),
        (ed.prototype.add = function (r, o, i) {
          return Fa(this, void 0, void 0, function () {
            var t, n;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = this.ensureConversation(r, o, i)), (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this.host.api.roster.add(r, o, i)];
                case 2:
                  return e.sent(), [3, 4];
                case 3:
                  return (n = e.sent()), this.logger.warn("can't add " + o + ' ' + r, n), [3, 4];
                case 4:
                  return (t._counterPartyAddedOnServer = !0), [2];
              }
            });
          });
        }),
        (ed.prototype.remove = function (i) {
          return Fa(this, void 0, void 0, function () {
            var t, n, r, o;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((i = this._resolveModelId(i)), !(t = this._resolveEntity(i, 'conversation')))
                  )
                    throw new G(this.host.models.Conversation.name, i);
                  (n = t.counterPartyId),
                    (r = t.counterPartyType),
                    (o = t.organizationId),
                    (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this.host.api.roster.remove(r, n, o)];
                case 2:
                  return e.sent(), [3, 4];
                case 3:
                  return e.sent(), this.logger.warn("can't remove conversation " + i), [3, 4];
                case 4:
                  return [2];
              }
            });
          });
        }),
        (ed.prototype.ensureConversation = function (e, t, n, r) {
          void 0 === r && (r = {});
          var o = (r = ee.a.defaultsDeep(r, {
              ensureEntities: {
                counterParty: !1,
                organization: !1,
                messageCounterParties: !1,
                groupMembers: !1,
                touchOnRelatedEntityLoad: !0,
              },
            })).conversationId,
            i = this.getConversationKey(e, t, n);
          if (this.config.condensedReplays && !o) {
            var s = this._convByConvHandle[i];
            s && (o = s.id);
          }
          o = o || i;
          var a = this.getById(o);
          if (a) {
            this.__ensureEntities(a, r.ensureEntities);
            var u = !1;
            return (
              this.config.condensedReplays &&
                void 0 !== r.highestSortNumber &&
                ((a.highestSortNumber = r.highestSortNumber), (u = !0)),
              this.config.condensedReplays && void 0 !== r.muted && ((a.muted = r.muted), (u = !0)),
              (this._convByConvHandle[i] = a),
              u && this.host.models.Conversation.inject(a),
              a
            );
          }
          var c = {
            id: o,
            counterPartyType: e,
            counterPartyId: t,
            organizationId: n,
            _origIndex: this.host.models.Conversation.getAll().length,
          };
          r.highestSortNumber && (c.highestSortNumber = r.highestSortNumber),
            r.muted && (c.muted = r.muted),
            r.network && (c.network = r.network);
          var l = this.host.models.Group.get(t);
          l && l.groupType === si.PATIENT_MESSAGING && (c.network = fi.PATIENT);
          var d = this.host.metadata.get(t, n);
          if (d) {
            var h = d.data;
            c.metadata = h;
          }
          return (
            (a = this.host.models.Conversation.createInstance(c)),
            this.__ensureEntities(a, r.ensureEntities),
            this.host.models.Conversation.inject(a),
            (this._convByConvHandle[i] = a)
          );
        }),
        (ed.prototype.__ejectConversation = function (e) {
          var t = this.getById(e);
          if (t) {
            var n = t.counterPartyType,
              r = t.counterPartyId,
              o = t.organizationId,
              i = this.getConversationKey(n, r, o);
            delete this._convByConvHandle[i],
              this.host.models.Conversation.eject(t),
              (this.__queuedConversationsToReload = this.__queuedConversationsToReload.filter(
                function (e) {
                  return e.id !== t.id;
                }
              ));
          }
          return t;
        }),
        (ed.prototype.reactToMessageEvent = function (e) {
          var t = e.data;
          if (this.config.condensedReplays) this.reactToMessageEventCR({ data: t });
          else {
            var n = this._reactToMessageEvent({ data: t }),
              r = n.message,
              o = n.conversation;
            this.host.models.Message.inject(r),
              this.emit('message', r),
              o &&
                (this.__addConversationCounterPartyToServerRosterIfShould(o),
                o.emit('message', r),
                this.config.condensedReplays &&
                  o._markingAsRead &&
                  r.sortNumber > o._markingAsReadSortNumber &&
                  this.__clearOptimisticStatus([o])),
              ci[r.markedRecipientStatus] < ci[li.DELIVERED] &&
                this.host.messages.markAsReceived(r, {});
          }
        }),
        (ed.prototype.reactToMessageEventCR = function (e) {
          var t = e.data,
            n = {},
            r = this._reactToMessageEventCR({ data: t }),
            o = r.message,
            i = r.conversation;
          this.emit('message', o),
            i &&
              (this.__addConversationCounterPartyToServerRosterIfShould(i), i.emit('message', o)),
            (n.queue = !0),
            this.host.messages.markAsReceived(o, n);
        }),
        (ed.prototype._reactToMessageEvent = function (e) {
          var t = e.data,
            n = e.conversationId,
            r = void 0 === n ? null : n;
          t = Ta(t);
          var o = this.host.currentUserId,
            i = t.recipient_status;
          i = i || [];
          var s = { status: t.status, timestamp: t.created_time };
          t.team_request && this.host.teams.__injectTeamRequest(t.team_request);
          var a = this.host.models.Message.parseAttrs(t);
          a.messageType = pi.USER_SENT;
          var u = !0;
          if (a.groupId) (a.counterPartyType = 'group'), (a.counterPartyId = a.groupId);
          else if (a.recipientId) {
            if (this.host.distributionLists.getById(a.recipientId))
              a.counterPartyType = 'distributionList';
            else if (this.host.users.getById(a.recipientId)) a.counterPartyType = 'user';
            else {
              u = !1;
              var c = this.host.messages._looksLikeDistributionListMessage(a);
              a.counterPartyType = c ? 'distributionList' : 'user';
            }
            a.counterPartyId =
              'distributionList' === a.counterPartyType || a.senderId === o
                ? a.recipientId
                : a.senderId;
          }
          var l = this.host.messages._isMessageOutgoing(a);
          'distributionList' !== a.counterPartyType &&
            ((s.account_id = l ? a.recipientId : this.host.currentUserId),
            s.account_id && i.push(s)),
            (a.senderStatus = di.SENT);
          var d =
            u &&
            this.ensureConversation(
              a.counterPartyType,
              a.counterPartyId,
              a.recipientOrganizationId,
              {
                conversationId: r,
                ensureEntities: {
                  counterParty: 'placeholder',
                  groupMembers: 'placeholder',
                  organization: 'placeholder',
                },
              }
            );
          a.conversationId = d ? d.id : null;
          var h = this.host.models.Message.get(a.id);
          if (h) {
            var p = a.body,
              f = a.escalationExecutionId,
              v = a.isForwardedFromPatientNetwork,
              y = a.originalSender,
              g = a.patientDetails,
              m = a.priority,
              _ = a.sortNumber,
              b = a.sortSeries;
            (h.body = p),
              (h.escalationExecutionId = f || null),
              (h.isForwardedFromPatientNetwork = v),
              (h.originalSender = y),
              (h.patientDetails = g),
              (h.priority = m),
              (h.shouldEscalate = !1),
              (h.sortNumber = _),
              (h.sortSeries = b);
          } else h = this.host.models.Message.createInstance(a, !1);
          var w = h.senderId === o ? h.recipientId : h.senderId;
          w &&
            'distributionList' !== h.counterPartyType &&
            this.__ensureMessageCounterParty(d, w, {
              messageCounterParties: this.host.currentlyServingOfflineMessages
                ? 'placeholder'
                : 'full',
              touchOnRelatedEntityLoad: !0,
            });
          for (var I = 0, O = i; I < O.length; I++) {
            var T = O[I];
            this.config.condensedReplays || this.host.messages.__injectMessageStatus(h, T);
          }
          return (
            ('group' !== a.counterPartyType && !this.config.condensedReplays) ||
              (h.shouldEnsureRecipientStatus = !0),
            (h.inTimeline = !(!d || !d.isLive)),
            { message: h, conversation: d }
          );
        }),
        (ed.prototype._reactToMessageEventCR = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.data,
            r = void 0 === n ? {} : n,
            o = t.injectConversation,
            i = void 0 === o || o;
          r = Ta(r);
          var s,
            a = this.host.currentUserId,
            u = r.first_expiring_unread_message,
            c = r.last_message,
            l = (r.type, r.unread_message_count),
            d = r.unread_priority_message_count,
            h =
              (r.xmlns,
              Va(r, [
                'first_expiring_unread_message',
                'last_message',
                'type',
                'unread_message_count',
                'unread_priority_message_count',
                'xmlns',
              ]));
          h.team_request && this.host.teams.__injectTeamRequest(h.team_request),
            c &&
              ((c.conversation_id = h.conversation_id),
              (s = c.sort_number),
              c.is_group && !c.group_token && (c.group_token = c.recipient_token),
              c.message_id === h.client_id && (h.attachmentName = c.attachment_name)),
            h.is_group && !h.group_token && (h.group_token = h.recipient_token);
          var p = this.host.models.Message.parseAttrs(h);
          if (((p.messageType = pi.USER_SENT), p.groupId))
            (p.counterPartyType = 'group'), (p.counterPartyId = p.groupId);
          else if (p.recipientId) {
            if (this.host.distributionLists.getById(p.recipientId))
              p.counterPartyType = 'distributionList';
            else if (this.host.users.getById(p.recipientId)) p.counterPartyType = 'user';
            else {
              var f = this.host.messages._looksLikeDistributionListMessage(p);
              p.counterPartyType = f ? 'distributionList' : 'user';
            }
            p.counterPartyId =
              'distributionList' === p.counterPartyType || p.senderId === a
                ? p.recipientId
                : p.senderId;
          }
          p.senderStatus = di.SENT;
          var v,
            y = this.host.models.Message.get(p.id);
          if (
            (y
              ? this.host.models.Message.inject(Oc({ shouldEscalate: !1 }, p))
              : (y = this.host.models.Message.inject(p)),
            i)
          ) {
            var g = {
              conversation_id: y.conversationId,
              entity: this._resolveEntity(p.counterPartyId, p.counterPartyType),
              first_expiring_unread_message: u,
              last_message: c,
              organization_id: y.__organizationId,
              unread_message_count: l,
              unread_priority_message_count: d,
            };
            if (
              (c && c.sort_number < y.sortNumber
                ? ((s = y.sortNumber),
                  (g.last_message = { message_id: y.id }),
                  (v = this.__injectConversation(g, { highestSortNumber: s })) &&
                    this._ensureLastMessage({
                      rawLastMessage: c,
                      conversationId: v.id,
                      counterParty: v.counterParty,
                    }))
                : (v = this.__injectConversation(g, { highestSortNumber: s })),
              c && c.message_id && v && v.isLive)
            ) {
              var m = this.host.models.Message.get(c.message_id);
              m && !m.inTimeline && ((m.inTimeline = !0), this.host.models.Message.inject(m));
            }
          } else v = this.host.conversations.getById(h.conversation_id);
          var _ = y.senderId === a ? y.recipientId : y.senderId,
            b =
              'group' !== y.counterPartyType ||
              (y.counterParty && 'FORUM' === y.counterParty.groupType);
          return (
            _ &&
              'distributionList' !== y.counterPartyType &&
              b &&
              this.__ensureMessageCounterParty(v, _, {
                messageCounterParties: this.host.currentlyServingOfflineMessages
                  ? 'placeholder'
                  : 'full',
                touchOnRelatedEntityLoad: !0,
              }),
            (y.inTimeline = !!y.isEphemeral || !(!v || !v.isLive)),
            (y.shouldEnsureRecipientStatus = !0),
            this.host.models.Message.inject(y),
            { conversation: v, message: y }
          );
        }),
        (ed.prototype.reactToFriendsEventCR = function (e) {
          var t = e.data,
            n = e.eventId,
            r = (t = Ta(t)).action,
            o = (t.xmlns, Va(t, ['action', 'xmlns'])),
            i = o.entity,
            s = o.organization_id || o.organization_key,
            a = i.metadata,
            u = i.id || i.token;
          if ('group' === i && 'del' === r && !a) {
            var c = this.host.models.Group.get(o.token),
              l = this.getById(c.conversation.id);
            return (
              this.__removeFriend({
                conversation: l,
                entityType: i,
                id: o.token,
                organizationId: s,
              }),
              l && this.__clearOptimisticStatus([l]),
              void this.emit('friends', Oc(Oc({ action: r }, l.entity), { organizationId: s }))
            );
          }
          if (i.type) {
            var d = this.host.modelNameByEntityType(i.type);
            if (
              (a &&
                'patient_messaging' === a.feature_service &&
                'string' == typeof a.is_patient_contact &&
                (a.is_patient_contact = 'true' === a.is_patient_contact),
              (i.organizationId = s),
              'group' === d &&
                a &&
                'role' === a.feature_service &&
                'role_assignment' === a.meta_type)
            )
              this._rolesFriendsEventPromise = this.host.roles.reactToFriendsEventCR({
                action: r,
                attrs: i,
                id: n,
              });
            else {
              var h = o.conversation_id,
                p = o.last_message,
                f = o.lowest_sort_number,
                v = this.getById(h);
              if ('add' === r || 'update' === r) {
                v && 'update' === r && this.clearMessageStatuses(v);
                var y = p && p.sort_number ? p.sort_number : void 0,
                  g = !1,
                  m = ee.a.get(t, 'entity.is_public') || ee.a.get(t, 'entity.metadata.team');
                if ((void 0 === y || m) && 'add' === r)
                  if ('group' === d) {
                    if (i.proxied_members && i.proxied_members[this.host.currentUserId])
                      for (
                        var _ = this.host.models.Product.getAll()[0],
                          b = 0,
                          w = i.proxied_members[this.host.currentUserId];
                        b < w.length;
                        b++
                      ) {
                        var I = w[b];
                        if (_.rolesOptingIn.includes(I.token)) {
                          g = !0;
                          break;
                        }
                      }
                    y = g ? 1 : this.host.messages.__getNextSortNumber(s);
                  } else y = v ? v.highestSortNumber : 1;
                var O = v && v.lastMessage;
                if ('add' === r) {
                  var T = 'group' === d && this.host.groups.__extractGroupTypeFromAttrs(i);
                  (T !== si.GROUP && T !== si.FORUM) || (i.members = null),
                    this.__injectCounterParty({
                      entityAttrs: i,
                      entityType: d,
                      groupType: T,
                      hasCurrentUser: !0,
                      isPlaceholder: !0,
                      organizationId: s,
                    }),
                    (v = this.__injectConversation(o, { highestSortNumber: y })),
                    O && !p && this.find(h),
                    this.clearTimeline(v);
                } else
                  'update' === r &&
                    ((v = this.__injectConversation(o, { highestSortNumber: y })),
                    O && !p && this.find(h));
                f && this.markAsDelivered(v);
              } else
                'del' === r
                  ? this.__removeFriend({ attrs: i, entityType: d, id: u, organizationId: s })
                  : this.logger.error('friends action not implemented', r, t);
              v && this.__clearOptimisticStatus([v]), this.emit('friends', Oc({ action: r }, i));
            }
          }
        }),
        (ed.prototype.reactToFriendsEvent = function (e) {
          var t = e.data,
            n = e.id;
          if (this.config.condensedReplays) this.reactToFriendsEventCR({ data: t, eventId: n });
          else {
            var r = (t = Ta(t)).friend,
              o = r.action,
              i = r.organization_id,
              s = Va(r, ['action', 'organization_id']),
              a = s.metadata,
              u = s.token,
              c = this.host.modelNameByTypeNS(s.xmlns);
            if (c)
              if (
                'group' === c &&
                a &&
                'role' === a.feature_service &&
                'role_assignment' === a.meta_type
              )
                this._rolesFriendsEventPromise = this.host.roles.reactToFriendsEvent({
                  data: t,
                  id: n,
                });
              else {
                if ('add' === o) {
                  var l = 'group' === c && this.host.groups.__extractGroupTypeFromAttrs(s);
                  (l !== si.GROUP && l !== si.FORUM) || (s.members = null);
                  var d = l === si.PATIENT_MESSAGING ? 'PATIENT' : 'PROVIDER';
                  this.__injectCounterParty({
                    entityAttrs: s,
                    entityType: c,
                    groupType: l,
                    hasCurrentUser: !0,
                    isPlaceholder: !0,
                    organizationId: i,
                  });
                  var h = 'group' === c ? this.host.messages.__getNextSortNumber(i) : 1;
                  this.ensureConversation(c, u, i, { highestSortNumber: h, network: d });
                } else
                  'del' === o
                    ? this.__removeFriend({ attrs: s, entityType: c, id: u, organizationId: i })
                    : this.logger.error('friends action not implemented', o, t);
                this.emit('friends', Oc({ action: o }, s));
              }
          }
        }),
        (ed.prototype.reactToUpdateTeamRequestEvent = function (e) {
          var t = e.data,
            n = (t = Ta(t)).team_request;
          n && this.host.teams.__injectTeamRequest(n);
        }),
        (ed.prototype.reactToUpdateEventCR = function (e) {
          var t = e.data,
            n = (t = Ta(t)).entity,
            r = t.organization_id,
            o = n.metadata,
            i = n.token,
            s = n.type;
          (n.organizationId = r), this._sanitizeGroupAttrs(n);
          var a = this.host.modelNameByEntityType(s),
            u = this.host.groups.__extractGroupTypeFromAttrs(n);
          if (
            (o && r && i && Cc.includes(u) && this.host.metadata.__injectMetadata(i, r, o),
            o && o.feature_service && 'role' === o.feature_service)
          ) {
            if ('group' === a && o.target_id) return this.__injectTargetEntity(o, r);
            this.host.roles.reactToUpdateEventCR({ entity: n });
          }
          this.host.injectModel(n, s);
        }),
        (ed.prototype.reactToUpdateEvent = function (e) {
          var t = e.data;
          if (this.config.condensedReplays) this.reactToUpdateEventCR({ data: t });
          else {
            var n = (t = Ta(t)).metadata,
              r = t.organization_key,
              o = t.token,
              i = t.type;
            this._sanitizeGroupAttrs(t);
            var s = this.host.modelNameByTypeNS(i),
              a = this.host.groups.__extractGroupTypeFromAttrs(t);
            if (
              (n && r && o && Cc.includes(a) && this.host.metadata.__injectMetadata(o, r, n),
              n && n.feature_service && 'role' === n.feature_service)
            ) {
              if ('group' === s && n.target_id) return this.__injectTargetEntity(n, r);
              this.host.roles.reactToUpdateEvent({ data: t });
            }
            var u = Va(t, []);
            this.host.injectModel(u, i);
          }
        }),
        (ed.prototype.__queueReload = function (e) {
          this.__queuedConversationsToReload.includes(e) ||
            this.__queuedConversationsToReload.push(e),
            this.__flushConversationsToReload();
        }),
        (ed.prototype.hasPendingReloads = function () {
          return (
            this.__queuedConversationsToReload && 0 < this.__queuedConversationsToReload.length
          );
        }),
        (ed.prototype.__updateTimeline = function (e) {
          for (var t = e.content, n = e.timeline, r = (n.length = 0), o = t; r < o.length; r++) {
            var i = o[r];
            i.inTimeline && n.push(i);
          }
          this.host.models.Conversation.inject(e);
        }),
        (ed.prototype.__reloadConversation = function (e, t) {
          var n = (void 0 === t ? {} : t).notify,
            r = void 0 === n || n;
          if (this.config.condensedReplays) return this.__reloadConversationCR(e);
          var o = e.content,
            i = e.higherContinuation,
            s = e.lowerContinuation,
            a = e.markableAsReadMessages,
            u = e.messages,
            c = e.timeline,
            l = [],
            d = [],
            h = 0,
            p = null,
            f = null,
            v = null;
          (a.length = 0), (u.length = 0);
          for (var y = -1, g = (c.length = 0), m = o; g < m.length; g++) {
            var _ = m[g];
            y++;
            var b = _.escalationExecution,
              w = _.inTimeline,
              I = _.isOutgoing,
              O = _.isUnread,
              T = _.markedRecipientStatus,
              E = _.messageType,
              R = _.priority;
            w && (null === p && (p = y), (f = y), c.push(_)),
              E === pi.USER_SENT
                ? (u.push(_),
                  I || !O || v || (v = _),
                  b && 'IN_PROGRESS' === b.status && h++,
                  Mc.includes(T) && a.push(_),
                  I ||
                    (O && (l.push(_), R === ai.HIGH && d.push(_)),
                    (e.lastIncomingMessageSortNumber = _.sortNumber)))
                : Ec.includes(E) && (e.lastBangMessageSortNumber = _.sortNumber);
          }
          (s.itemsEstimate = p),
            (i.itemsEstimate = null === f ? null : o.length - 1 - f),
            (e.isLive = 0 === i.itemsEstimate || 0 === o.length);
          var A = 0 < u.length ? u[u.length - 1] : null,
            C =
              A ||
              ee.a.last(
                o.filter(function (e) {
                  return (
                    e.messageType === pi.GROUP_MEMBERSHIP_CHANGE &&
                    e.groupMembersChange &&
                    'ADD' === e.groupMembersChange.action
                  );
                })
              );
          if (
            ((e.firstUnreadMessage = v),
            (e.inProgressEscalationCount = h),
            (e.lastMessage = A),
            (e.unreadCount = l.length),
            (e.unreadPriorityCount = d.length),
            (e.highestSortNumber = (C && C.sortNumber) || e.lastConversationSortNumber || 0),
            r)
          ) {
            var S = e.counterPartyType,
              P = e.counterPartyId,
              j = e.organizationId,
              M = this.getConversationKey(S, P, j);
            (this._convByConvHandle[M] = e), this.host.models.Conversation.inject(e);
          }
        }),
        (ed.prototype.__reloadConversationCR = function (e) {
          var t = e._markingAsRead,
            n = e._markingAsReadSortNumber,
            r = e.content,
            o = e.higherContinuation,
            i = e.messages,
            s = e.timeline,
            a = [],
            u = [],
            c = null;
          i.length = 0;
          for (var l = (s.length = 0), d = r; l < d.length; l++) {
            var h = d[l],
              p = h.inTimeline,
              f = h.isOutgoing,
              v = h.isUnread,
              y = h.messageType,
              g = h.priority,
              m = h.sortNumber;
            p && s.push(h),
              y === pi.USER_SENT
                ? (i.push(h),
                  !f &&
                    v &&
                    ((c = c || h), (t && m <= n) || (a.push(h), g === ai.HIGH && u.push(h))))
                : Ec.includes(y) && (e.lastBangMessageSortNumber = h.sortNumber);
          }
          (e.firstUnreadMessage = c),
            (e.highestSortNumber = e.highestSortNumber || 0),
            (e.isLive = 0 === o.itemsEstimate || 0 === r.length),
            t && ((e.unreadCount = a.length), (e.unreadPriorityCount = u.length));
          var _ = e.counterPartyType,
            b = e.counterPartyId,
            w = e.organizationId,
            I = this.getConversationKey(_, b, w);
          (this._convByConvHandle[I] = e), this.host.models.Conversation.inject(e);
        }),
        (ed.prototype.__addConversationCounterPartyToServerRosterIfShould = function (e) {
          if (e && !e._counterPartyAddedOnServer) {
            var t = e.organization;
            t &&
              !t.$placeholder &&
              this.add(e.counterPartyType, e.counterPartyId, e.organizationId);
          }
        }),
        (ed.prototype.addMembershipChangeLog = function (e) {
          var t,
            n,
            r = e.action,
            o = e.actionTime,
            i = e.actor,
            s = e.alwaysAddToTimeline,
            a = e.createdAt,
            u = e.group,
            c = e.id,
            l = e.memberIds,
            d = e.members,
            h = e.removedFromGroup,
            p = void 0 !== h && h,
            f = e.sortNumber,
            v = i.id,
            y = u.id,
            g = u.organizationId,
            m = this.host.currentUser,
            _ = this.get('group', y, g);
          if (this.config.condensedReplays) {
            if (!_) return;
            t = _.id;
          } else t = this.getConversationKey('group', y, g);
          n = !!s || (!p && !!_ && _.isLive);
          var b = this.host.models.GroupMembersChange.inject({
            id: 'groupMembersChange:' + c,
            action: r,
            actionTime: o,
            actor: i,
            memberIds: l,
            members: d,
          });
          this.host.models.Message.inject({
            body: this.__generateGroupMembershipChangeBody(e),
            conversationId: t,
            counterPartyId: y,
            counterPartyType: 'group',
            createdAt: a,
            groupId: y,
            groupMembersChange: b,
            id: 'bang:' + c,
            inTimeline: n,
            isOutgoing: !1,
            messageType: pi.GROUP_MEMBERSHIP_CHANGE,
            recipient: m,
            senderId: v,
            sortNumber: f,
          }),
            ('OPT_IN' !== r && 'OPT_OUT' !== r) || this.host.roles.refresh(g);
        }),
        (ed.prototype.__generateGroupMembershipChangeBody = function (e) {
          var n = this,
            t = e.action,
            r = e.actor,
            o = e.group,
            i = e.members,
            s = o.groupType,
            a = Sc[t] || kc[t],
            u = r.id === this.host.currentUserId ? 'You' : r.displayName,
            c = Pc[t] || '',
            l = null;
          return (
            (t in Pc || t in kc) &&
              (l = pc.a
                .call(
                  dc.a.call(
                    i.map(function (e, t) {
                      return [
                        e.id === n.host.currentUserId ? 'You' : e.displayName,
                        (t === i.length - 2 ? ' and' : ',') + ' ',
                      ];
                    })
                  )
                )
                .join('')),
            t in kc
              ? [l, a, u].filter(Boolean).join(' ')
              : [u, a, l, c, 'this', jc[s]].filter(Boolean).join(' ')
          );
        }),
        (ed.prototype.addCallChangeLog = function (e) {
          var t = e.caller,
            n = e.callee.id,
            r = e.conversationId,
            o = e.createdAt,
            i = e.duration,
            s = e.group.id,
            a = e.id,
            u = e.organizationId,
            c = e.sortNumber,
            l = e.userStartTime,
            d = this.config.condensedReplays ? r : this.getConversationKey('group', s, u),
            h = l ? wc()(l).format('h:mm A') : '',
            p = t.id === this.host.currentUser.id;
          this.host.models.Message.inject({
            body: (p ? 'Outgoing' : 'Incoming') + ' Video Call ' + h + ' (' + ma(i) + ')',
            conversationId: d,
            counterPartyId: n,
            counterPartyType: 'group',
            createdAt: o,
            groupId: n,
            id: 'bang:' + a,
            inTimeline: !0,
            isOutgoing: !1,
            messageType: pi.CALL_CHANGE,
            recipient: this.host.currentUser,
            senderId: t ? t.id : null,
            sortNumber: c,
          });
        }),
        (ed.prototype.addEscalationExecutionChangeLog = function (e) {
          var t,
            n = e.action,
            r = e.actionTime,
            o = e.actor,
            i = e.alwaysAddToTimeline,
            s = e.createdAt,
            a = e.escalationExecution,
            u = e.group,
            c = e.members,
            l = e.id,
            d = e.sortNumber,
            h = u.id,
            p = u.organizationId,
            f = this.host.currentUser,
            v = this.get('group', h, p),
            y = v ? v.id : null;
          if (!v) {
            if (this.config.condensedReplays) return;
            y = this.getConversationKey('group', h, p);
          }
          t = !!i || (!!v && v.isLive);
          var g = this.host.models.EscalationExecutionChange.inject({
            id: 'escalationExecutionChange:' + l,
            action: n,
            actionTime: r,
            actor: o,
            members: c,
          });
          this.host.models.Message.inject({
            body: this.__generateGroupEscalationChangeBody(e, a),
            conversationId: y,
            counterPartyId: h,
            counterPartyType: 'group',
            createdAt: s,
            escalationExecutionChange: g,
            escalationExecutionId: a ? a.id : null,
            groupId: h,
            id: 'bang:' + l,
            inTimeline: t,
            isOutgoing: !1,
            messageType: pi.ESCALATION_EXECUTION_CHANGE,
            recipient: f,
            senderId: o ? o.id : null,
            sortNumber: d,
          });
        }),
        (ed.prototype.__generateGroupEscalationChangeBody = function (e, t) {
          var n = e.action,
            r = e.actor,
            o = e.members,
            i = Ac[n],
            s = (t && t.displayId) || '';
          return (
            s.startsWith('#') && (s = s.slice(1, s.length)),
            '' !== s && (s += ' '),
            n === oi.MEMBER_ADDED
              ? i + ' ' + o[0].displayName + ' to this escalation'
              : n !== oi.INITIATED && r && r.displayName
              ? 'Escalation ' + s + i + ' by ' + r.displayName
              : 'Escalation ' + s + i
          );
        }),
        (ed.prototype.getMessageConversationKey = function (e) {
          if (e.groupId) return this.conversationHashForListEntityId(e.groupId);
          if (e.distributionListId)
            return this.conversationHashForListEntityId(e.distributionListId);
          var t = e.senderId === this.host.currentUserId ? e.recipientId : e.senderId;
          return this.conversationHashForUserMessage(
            t,
            e.senderOrganizationId,
            e.recipientOrganizationId
          );
        }),
        (ed.prototype.getConversationKey = function (e, t, n, r) {
          switch ((void 0 === r && (r = n), e)) {
            case 'user':
              return this.conversationHashForUserMessage(t, n, r);
            case 'distributionList':
            case 'group':
            case 'team':
              return this.conversationHashForListEntityId(t);
            default:
              throw new Error('type ' + e + ' not supported in conversation');
          }
        }),
        (ed.prototype.conversationHashForUserMessage = function (e, t, n) {
          void 0 === n && (n = t);
          var r = [e, t, n].join(':');
          return Tc.b64(r);
        }),
        (ed.prototype.conversationHashForListEntityId = function (e) {
          return Tc.b64(e);
        }),
        (ed.prototype.conversationHashForGroupId = function () {
          for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
          return this.conversationHashForListEntityId.apply(this, e);
        }),
        (ed.prototype.conversationHashForDistributionListId = function () {
          for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
          return this.conversationHashForListEntityId.apply(this, e);
        }),
        (ed.prototype.looksLikeConversationHandle = function (e) {
          return /^[a-zA-Z0-9/+=]{24}$/.test(e);
        }),
        (ed.prototype.findConversationWithUser = function (t, n) {
          return Fa(this, void 0, void 0, function () {
            return Ga(this, function (e) {
              return [2, this.get(this.host.models.User.name, t, n)];
            });
          });
        }),
        (ed.prototype.findConversationWithGroup = function (t, n) {
          return Fa(this, void 0, void 0, function () {
            return Ga(this, function (e) {
              return [2, this.get(this.host.models.Group.name, t, n)];
            });
          });
        }),
        (ed.prototype.findAllGroupConversationsWithMembers = function (a, u, e) {
          var t = void 0 === e ? {} : e,
            n = t.exact,
            c = void 0 === n || n,
            r = t.includeCurrentUser,
            l = void 0 === r || r,
            o = t.includeForums,
            d = void 0 === o || o,
            i = t.includeRoles,
            h = void 0 === i || i,
            s = t.localOnly,
            p = void 0 !== s && s,
            f = t.senderId,
            v = void 0 === f ? null : f;
          return Fa(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.resolveMembers(Na(a))];
                case 1:
                  return (
                    (a = (a = e.sent()).map(this._resolveModelId)),
                    [
                      4,
                      this.host.groups.findAllWithSpecificMembers(a, u, {
                        exact: c,
                        includeCurrentUser: l,
                        includeForums: d,
                        includeRoles: h,
                        localOnly: p,
                        senderId: v,
                      }),
                    ]
                  );
                case 2:
                  for (t = e.sent(), n = [], r = 0, o = t; r < o.length; r++)
                    (i = o[r]), (s = this.get(this.host.models.Group.name, i.id, u)) && n.push(s);
                  return [2, n];
              }
            });
          });
        }),
        (ed.prototype.findLocalRoleP2PConversation = function (e, t) {
          var n, r;
          (e = this.host.roles.__resolveRoleId(e)), (t = this.host.roles.__resolveRoleId(t));
          var o = this.host.models.User.get(e),
            i = this.host.models.User.get(t);
          if (i && i.isRoleBot && i.botRole) r = this.host.roles._roleP2PConversations[t];
          else {
            if (!(o && o.isRoleBot && o.botRole)) return null;
            r = this.host.roles._roleP2PConversations[e];
          }
          if (r)
            for (var s = 0, a = r; s < a.length; s++) {
              var u = a[s],
                c = u.$lastModified,
                l = u.counterParty,
                d = l.p2pRecipient,
                h = l.p2pSender;
              if (d && h) {
                var p = this.host.roles.__resolveRoleId(d.id),
                  f = this.host.roles.__resolveRoleId(h.id);
                ((p === e && f === t) || (p === t && f === e)) &&
                  (!n || n.$lastModified < c) &&
                  (n = u);
              }
            }
          return n;
        }),
        (ed.prototype.resolveMembers = function (t) {
          return Fa(this, void 0, void 0, function () {
            var n = this;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    Promise.all(
                      t.map(function (t) {
                        return Fa(n, void 0, void 0, function () {
                          return Ga(this, function (e) {
                            switch (e.label) {
                              case 0:
                                if (!Fn()(t) && !mo(t)) return [3, 4];
                                e.label = 1;
                              case 1:
                                return e.trys.push([1, 3, , 4]), [4, this.host.users.find(t)];
                              case 2:
                                return [2, e.sent().id];
                              case 3:
                                return e.sent(), [2, t];
                              case 4:
                                return [2, t];
                            }
                          });
                        });
                      })
                    ),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (ed.prototype.selectConversation = function (i, e) {
          var t = void 0 === e ? {} : e,
            n = t.anchorPoint,
            s = void 0 === n ? ri.CONVERSATION_END : n,
            r = t.fetchAllItems,
            a = void 0 !== r && r,
            o = t.markAsDelivered,
            u = void 0 === o || o,
            c = t.markAsRead,
            l = void 0 === c || c,
            d = t.maxItemsPerBatch,
            h = t.minItemsToFetch,
            p = void 0 === h ? 20 : h;
          return Fa(this, void 0, void 0, function () {
            var t, n, r, o;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((i = this._resolveModelId(i)), !(t = this._resolveEntity(i, 'conversation')))
                  )
                    throw new G(this.host.models.Conversation.name, i);
                  if (s === ri.CONTINUATION)
                    throw new Error(
                      "Cannot call selectConversation() with anchorPoint='CONTINUATION'"
                    );
                  return this.config.condensedReplays
                    ? [
                        4,
                        this._selectConversationCR(i, {
                          anchorPoint: s,
                          conversation: t,
                          fetchAllItems: a,
                          markAsDelivered: u,
                          markAsRead: l,
                          maxItemsPerBatch: d,
                          minItemsToFetch: p,
                        }),
                      ]
                    : [3, 2];
                case 1:
                  return [2, e.sent()];
                case 2:
                  return (
                    (r = n = 0),
                    [4, this.fetchTimeline(i, { anchorPoint: s, markAsDelivered: u, maxItems: p })]
                  );
                case 3:
                  return (
                    (n = r + e.sent()),
                    0 < t.markableAsReadMessages.length
                      ? (t.firstUnreadMessage = t.markableAsReadMessages[0])
                      : (t.firstUnreadMessage = null),
                    (o = t.firstUnreadMessage),
                    l && 0 < t.unreadCount && this.markAsRead(i, { localOnly: !0 }),
                    [
                      4,
                      this._fetchContinuations(i, {
                        addedMessages: n,
                        conversation: t,
                        fetchAllItems: a,
                        markAsDelivered: u,
                        minItemsToFetch: p,
                      }),
                    ]
                  );
                case 4:
                  return (
                    (n = e.sent()),
                    l && this.markAsRead(i),
                    [2, { addedMessages: n, previousFirstUnreadMessage: o }]
                  );
              }
            });
          });
        }),
        (ed.prototype._selectConversationCR = function (i, e) {
          var s = e.anchorPoint,
            a = e.conversation,
            t = e.fetchAllItems,
            u = void 0 !== t && t,
            c = e.markAsDelivered,
            l = e.markAsRead,
            d = e.minItemsToFetch,
            n = e.maxItemsPerBatch,
            h = void 0 === n ? d : n;
          return Fa(this, void 0, void 0, function () {
            var t, n, r, o;
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = l && 0 < a.unreadCount),
                    (n = 0),
                    t && this.markAsRead(i, { localOnly: !0 }),
                    (r = n),
                    [
                      4,
                      this.fetchTimeline(i, {
                        anchorPoint: s,
                        fetchAllItems: u,
                        markAsDelivered: c,
                        maxItems: h,
                      }),
                    ]
                  );
                case 1:
                  return (
                    (n = r + e.sent()),
                    [
                      4,
                      this._fetchContinuations(i, {
                        addedMessages: n,
                        conversation: a,
                        fetchAllItems: u,
                        markAsDelivered: c,
                        maxItemsPerBatch: h,
                        minItemsToFetch: d,
                      }),
                    ]
                  );
                case 2:
                  return (
                    (n = e.sent()),
                    (o = a.firstUnreadMessage),
                    t && this.markAsRead(i),
                    this.__ensureEntities(a, { messageCounterParties: 'full' }),
                    [2, { addedMessages: n, previousFirstUnreadMessage: o }]
                  );
              }
            });
          });
        }),
        (ed.prototype._fetchContinuations = function (r, e) {
          var t = void 0 === e ? {} : e,
            n = t.addedMessages,
            o = void 0 === n ? 0 : n,
            i = t.conversation,
            s = t.fetchAllItems,
            a = void 0 !== s && s,
            u = t.markAsDelivered,
            c = void 0 === u || u,
            l = t.minItemsToFetch,
            d = void 0 === l ? 20 : l;
          return (
            t.maxItemsPerBatch,
            Fa(this, void 0, void 0, function () {
              var t, n;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (0 === o) return [2, 0];
                    e.label = 1;
                  case 1:
                    return (a || o < d) && 0 < i.higherContinuation.itemsEstimate
                      ? ((t = o),
                        [
                          4,
                          this.fetchTimeline(r, {
                            anchorPoint: ri.CONTINUATION,
                            markAsDelivered: c,
                            continuation: i.higherContinuation.continuation,
                            fetchAllItems: a,
                          }),
                        ])
                      : [3, 3];
                  case 2:
                    return (o = t + e.sent()), [3, 1];
                  case 3:
                    return (a || o < d) && 0 < i.lowerContinuation.itemsEstimate
                      ? ((n = o),
                        [
                          4,
                          this.fetchTimeline(r, {
                            anchorPoint: ri.CONTINUATION,
                            markAsDelivered: c,
                            continuation: i.lowerContinuation.continuation,
                            fetchAllItems: a,
                          }),
                        ])
                      : [3, 5];
                  case 4:
                    return (o = n + e.sent()), [3, 3];
                  case 5:
                    return [2, o];
                }
              });
            })
          );
        }),
        (ed.prototype.getWithUser = function (e, t, n) {
          var r,
            o = (void 0 === n ? {} : n).createIfNotFound,
            i = void 0 !== o && o;
          if (
            ((e = this._resolveModelId(e)),
            (t = this._resolveModelId(t)),
            this.config.condensedReplays)
          ) {
            var s = this.host.users.getById(e);
            if (s && s.profileByOrganizationId && s.profileByOrganizationId[t]) {
              var a = s.profileByOrganizationId[t].conversationId;
              a && (r = this.getById(a));
            }
          } else {
            var u = this.conversationHashForUserMessage(e, t);
            r = this.getById(u);
          }
          return !r && i && (r = this.ensureConversation('user', e, t)), r || null;
        }),
        (ed.prototype.getWithListEntity = function (e, t, n) {
          var r,
            o = void 0 === n ? { createIfNotFound: !1 } : n,
            i = o.createIfNotFound,
            s = void 0 !== i && i,
            a = o.organizationId,
            u = o.conversationId,
            c = void 0 === u ? null : u;
          if (((t = this._resolveModelId(t)), this.config.condensedReplays))
            c && (r = this.getById(c));
          else {
            var l = this.conversationHashForListEntityId(t);
            r = this.getById(l);
          }
          if (!r && s) {
            var d = this._resolveEntity(t, e);
            if (!d) throw new Error('Entity required when using createIfNotFound');
            (a = d.organizationId),
              (r = this.ensureConversation(e, t, a, { conversationId: c })),
              this.config.condensedReplays && !c && (r.$localOnly = !0);
          }
          return r;
        }),
        (ed.prototype.getWithGroup = function (e) {
          return this.getWithListEntity('group', e);
        }),
        (ed.prototype.getWithDistributionList = function (e) {
          return this.getWithListEntity('distributionList', e);
        }),
        (ed.prototype.get = function (e, t, n) {
          var r = this.getConversationKey(e, t, n);
          return (
            (this.config.condensedReplays
              ? this._convByConvHandle[r]
              : this.host.models.Conversation.get(r)) || null
          );
        }),
        (ed.prototype.getAll = function () {
          return this.host.models.Conversation.getAll();
        }),
        (ed.prototype.getById = function (e) {
          return this.host.models.Conversation.get(e);
        }),
        (ed.prototype.getMultiById = function (e) {
          return this.host.models.Conversation.getMulti(e);
        }),
        (ed.prototype.getAllForOrganization = function (e) {
          var t = this._resolveEntity(e, 'organization');
          return t ? t.conversations : null;
        }),
        (ed.prototype.__ensureEntities = function (o, i) {
          return (
            void 0 === i && (i = {}),
            Fa(this, void 0, void 0, function () {
              var t, n, r;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (
                      ((t = []),
                      (n = Promise.resolve()),
                      i.counterParty && ((n = this.__ensureCounterParty(o, i)), t.push(n)),
                      i.escalationExecution && t.push(this.__ensureEscalationExecution(o, n, i)),
                      i.messageCounterParties && t.push(this.__ensureMessageCounterParties(o, i)),
                      i.organization && t.push(this.__ensureOrganization(o, i)),
                      0 === (t = t.filter(Boolean)).length)
                    )
                      return [2];
                    e.label = 1;
                  case 1:
                    return e.trys.push([1, 3, , 4]), [4, Promise.all(t)];
                  case 2:
                    return (
                      e.sent(),
                      i.onLoad && i.onLoad(),
                      this.host.models.Conversation.inject(o),
                      [3, 4]
                    );
                  case 3:
                    return (r = e.sent()), console.error(r), [3, 4];
                  case 4:
                    return [2];
                }
              });
            })
          );
        }),
        (ed.prototype.__ensureOrganization = function (r, o) {
          return (
            void 0 === o && (o = {}),
            Fa(this, void 0, void 0, function () {
              var n = this;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [4, this.host.organizations._findAll()];
                  case 1:
                    return (
                      e.sent(),
                      this.host.models.Organization.shouldEnsure(
                        r.organization,
                        'full' !== o.organization
                      )
                        ? [
                            4,
                            new Promise(function (e, t) {
                              n.host.models.Organization.ensureEntity(r.organizationId, {
                                onlyPlaceholder: 'placeholder' === o.organization,
                                onMissing: function () {
                                  n.logger.info(
                                    'org ' +
                                      r.organizationId +
                                      ' not found, created placeholder org'
                                  ),
                                    (r.$loadingOrganization = !0),
                                    e();
                                },
                                onLoad: function () {
                                  n.logger.info('org ' + r.organizationId + ' loaded'),
                                    (r.$loadingOrganization = !1),
                                    o.touchOnRelatedEntityLoad &&
                                      n.host.models.Conversation.inject(r);
                                },
                                onFinish: e,
                              });
                            }),
                          ]
                        : [2, null]
                    );
                  case 2:
                    return e.sent(), [2];
                }
              });
            })
          );
        }),
        (ed.prototype.__ensureCounterParty = function (s, a) {
          return (
            void 0 === a && (a = {}),
            Fa(this, void 0, void 0, function () {
              var n,
                r,
                o,
                i = this;
              return Ga(this, function (e) {
                if (
                  ((a = Oc({}, a)),
                  'group' === s.counterPartyType &&
                    s.counterParty &&
                    s.counterParty.groupType === si.ROLE_P2P &&
                    ((a.counterParty = 'full'), (a.groupMembers = 'full')),
                  !(n = this.host.modelsByEntityType[
                    s.counterPartyType
                  ]).shouldEnsure(s.counterParty, 'full' !== a.counterParty, {
                    groupMembersOnlyPlaceholder: 'full' !== a.groupMembers,
                  }))
                )
                  return [2, null];
                switch (((r = {}), s.counterPartyType)) {
                  case 'user':
                    break;
                  case 'group':
                  case 'distributionList':
                    r.organizationId = s.organizationId;
                    break;
                  default:
                    throw new Error('unsupported counterPartyType', s.counterPartyType);
                }
                return (
                  (o = function (e) {
                    if ('group' === n.name && 'placeholder' !== a.counterParty && a.groupMembers)
                      return i.host.groups.ensureMembers(e, {
                        onlyPlaceholder: 'placeholder' === a.groupMembers,
                      });
                  }),
                  [
                    2,
                    new Promise(function (t, e) {
                      n.ensureEntity(s.counterPartyId, {
                        attrs: r,
                        onlyPlaceholder: 'placeholder' === a.counterParty,
                        onMissing: function () {
                          i.logger.info(
                            'entry ' +
                              s.counterPartyId +
                              ' not found, created placeholder on org ' +
                              s.organizationId
                          ),
                            (s.$loadingCounterParty = !0);
                        },
                        onLoad: function () {
                          (s.$loadingCounterParty = !1),
                            a.touchOnRelatedEntityLoad && i.host.models.Conversation.inject(s);
                        },
                        onFinish: function (e) {
                          e && o(e), t();
                        },
                      });
                    }),
                  ]
                );
              });
            })
          );
        }),
        (ed.prototype.__ensureEscalationExecution = function (o, i, e) {
          return (
            void 0 === e && (e = {}),
            Fa(this, void 0, void 0, function () {
              var t, n, r;
              return Ga(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [4, i];
                  case 1:
                    return (
                      e.sent(),
                      (t = o.counterPartyType),
                      (n = o.counterParty) && 'group' === t
                        ? ((r = n.escalationExecution),
                          n.groupType === si.ESCALATION && r
                            ? [4, this.host.escalations.ensureEscalationExecution(r)]
                            : [2])
                        : [2]
                    );
                  case 2:
                    return e.sent(), [2];
                }
              });
            })
          );
        }),
        (ed.prototype.__ensureMessageCounterParties = function (t, n) {
          var r = this;
          void 0 === n && (n = {});
          var e = _c.a.call(
            gc.a.call(vc.a.call(t.messages, 'senderId').filter(Boolean)),
            this.host.currentUserId,
            t.counterPartyId
          );
          return Promise.all(
            e.map(function (e) {
              return r.__ensureMessageCounterParty(t, e, n);
            })
          );
        }),
        (ed.prototype.__ensureMessageCounterParty = function (n, r, o) {
          var i = this;
          void 0 === o && (o = {});
          var e = this.host.models.User.get(r);
          return this.host.models.User.shouldEnsure(e, 'full' !== o.messageCounterParties)
            ? new Promise(function (e, t) {
                i.host.models.User.ensureEntity(r, {
                  onlyPlaceholder: 'placeholder' === o.messageCounterParties,
                  onMissing: function () {
                    var e = n
                      ? 'entry ' +
                        n.counterPartyId +
                        ' not found, created placeholder on org ' +
                        n.organizationId
                      : 'counterParty ' + r + ' not found';
                    i.logger.info(e);
                  },
                  onLoad: function () {
                    n && o.touchOnRelatedEntityLoad && i.host.models.Conversation.inject(n);
                  },
                  onFinish: e,
                });
              })
            : null;
        }),
        (ed.prototype._setAllowedSenders = function (e) {
          var t = e.counterParty,
            n = e.counterPartyType,
            r = e.organization,
            o = this.host.currentUser,
            i = [o];
          if (!r)
            return (
              (e.allowedSenders = []),
              void (e.allowedSendersReason = ni.ORGANIZATION_DOES_NOT_EXIST)
            );
          if (o.contactsMessagingBlocked && r.isContacts)
            return (
              (e.allowedSenders = []),
              void (e.allowedSendersReason = ni.CONTACTS_MESSAGING_BLOCKED_BY_ADMIN)
            );
          if (!n)
            return (
              (e.allowedSenders = i),
              void (e.allowedSendersReason = ni.CONVERSATION_NOT_FULLY_LOADED)
            );
          if (!t)
            return (e.allowedSenders = []), void (e.allowedSendersReason = ni.NO_COUNTER_PARTY);
          switch (n) {
            case 'user':
              return t.$placeholder
                ? ((e.allowedSenders = []),
                  void (e.allowedSendersReason = ni.COUNTER_PARTY_NOT_FULLY_LOADED))
                : 'TigerPage' === t.displayName
                ? ((e.allowedSenders = []),
                  void (e.allowedSendersReason = ni.COUNTER_PARTY_IS_TIGERPAGE))
                : ((e.allowedSenders = i), void (e.allowedSendersReason = ni.NONE));
            case 'distributionList':
              return (e.allowedSenders = i), void (e.allowedSendersReason = ni.NONE);
            case 'group':
              var s = t.createdByRole,
                a = t.createdByUser,
                u = t.groupType,
                c = t.p2pRecipient,
                l = t.p2pSender,
                d = t.targetRole,
                h = t.targetUser,
                p = t.members,
                f = t.proxiedMembers,
                v = r.allowedSenders;
              if (u === si.FORUM)
                return (e.allowedSenders = i), void (e.allowedSendersReason = ni.NONE);
              if (u === si.ROLE_ASSIGNMENT)
                return (
                  (e.allowedSenders = []),
                  void (e.allowedSendersReason = ni.IS_ROLE_ASSIGNMENT_GROUP)
                );
              if (u === si.ROLE_P2P && c && l) {
                var y = [],
                  g = s && s.botUser,
                  m = d && d.botUser;
                !g || (p && p.includes(g)) ? !a || (p && p.includes(a)) || y.push(a) : y.push(g),
                  !m || (p && p.includes(m)) ? !h || (p && p.includes(h)) || y.push(h) : y.push(m),
                  0 < y.length &&
                    (p = (function () {
                      for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                        e += arguments[t].length;
                      var r = Array(e),
                        o = 0;
                      for (t = 0; t < n; t++)
                        for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++)
                          r[o] = i[s];
                      return r;
                    })(p || [], y));
              } else if (t.$placeholder)
                return (
                  (e.allowedSenders = []),
                  void (e.allowedSendersReason = ni.COUNTER_PARTY_NOT_FULLY_LOADED)
                );
              if (!p)
                return (
                  (e.allowedSenders = []),
                  void (e.allowedSendersReason = ni.GROUP_MEMBERS_NOT_LOADED)
                );
              if (0 === p.length)
                return (
                  (e.allowedSenders = []), void (e.allowedSendersReason = ni.GROUP_HAS_NO_MEMBERS)
                );
              for (var _ = [], b = 0, w = v; b < w.length; b++) {
                var I = w[b],
                  O = 'role' === I.$entityType ? I.botUser : I;
                if (p.includes(O)) {
                  var T = O.id,
                    E = f && f[T];
                  if (E) {
                    for (var R = !1, A = 0, C = E; A < C.length; A++) C[A].token === T && (R = !0);
                    if (!R) continue;
                  }
                  _.push(I);
                }
              }
              return 0 === _.length
                ? ((e.allowedSenders = _),
                  void (e.allowedSendersReason = ni.USER_IS_NOT_MEMBER_OF_GROUP))
                : u !== si.ROLE_P2P
                ? ((e.allowedSenders = _), void (e.allowedSendersReason = ni.NONE))
                : l && _.includes(l)
                ? c === o || o.roles.includes(c)
                  ? ((e.allowedSenders = []),
                    void (e.allowedSendersReason = ni.CONVERSATION_WITH_ROLE_YOU_ARE_CURRENTLY_IN))
                  : ((e.allowedSenders = [l]), void (e.allowedSendersReason = ni.NONE))
                : ((e.allowedSenders = []),
                  void (e.allowedSendersReason = ni.USER_IS_NOT_IN_THIS_ROLE_CONVERSATION));
            default:
              return (
                (e.allowedSenders = []),
                void (e.allowedSendersReason = ni.COUNTER_PARTY_TYPE_NOT_SUPPORTED)
              );
          }
        }),
        (ed.prototype.reactToProcessingStart = function (e) {
          var t = e.data,
            n = (t = Ta(t)).action_type,
            r = t.conversation_id,
            o = t.entity,
            i = t.organization_id,
            s = o.token || o.id,
            a = _i.resolve(n);
          if (
            (this.host.products._addProcessingEvent({ actionType: a, entity: Oc({ id: s }, o) }),
            a === _i.ROLE_OPT_OUT)
          )
            this._roleConversationsProcessingEvent[s] = this.host.roles._roleConversations[s];
          else if (a === _i.ORGANIZATION_MESSAGE_STATUS || a === _i.ORGANIZATION_REPLAY) {
            var u = this.host.organizations.getById(i);
            if (!u) return;
            u._markingAsReadConversations &&
              this.__clearOptimisticStatus(u._markingAsReadConversations);
          } else if (a === _i.GROUP_REPLAY) {
            var c = void 0;
            if ((r && (c = this.getById(r)), !c)) return;
            this.__clearOptimisticStatus([c]);
          } else if (a === _i.ROLE_OPT_IN || a === _i.ROLE_OPT_OUT) {
            var l = this.host.roles._roleConversations[s];
            if (!l) return;
            this.__clearOptimisticStatus(l);
          }
        }),
        (ed.prototype.reactToProcessingStop = function (e) {
          var t = e.data,
            n = (t = Ta(t)).action_type,
            r = t.conversation_id,
            o = t.entity,
            i = t.organization_id;
          !r && o.conversation_id && ((r = o.conversation_id), delete o.conversation_id),
            !i && o.organization_key && ((i = o.organization_key), delete o.organization_key);
          var s = o.token || o.id,
            a = _i.resolve(n);
          if (a === _i.GROUP_REPLAY) {
            var u = void 0;
            if ((r && (u = this.getById(r)), !u)) return;
            this.clearTimeline(u), this.__clearOptimisticStatus([u]);
          } else if (a === _i.ROLE_OPT_IN || a === _i.ROLE_OPT_OUT) {
            this.clearTimelineForAllRoleConversations(a, s);
            var c = this.host.roles._roleConversations[s];
            if (!c)
              return void this.host.products._removeProcessingEvent({
                actionType: a,
                entity: Oc({ id: s }, o),
              });
            this.__clearOptimisticStatus(c);
          } else if (a === _i.ORGANIZATION_MESSAGE_STATUS)
            this.clearMessageStatusesForOrganization(i);
          else if (a === _i.CONVERSATION_MESSAGE_STATUS) {
            if (((u = void 0), r && (u = this.getById(r)), !u)) return;
            this.clearMessageStatuses(u);
          }
          if (a === _i.ORGANIZATION_MESSAGE_STATUS || a === _i.ORGANIZATION_REPLAY) {
            var l = this.host.organizations.getById(i);
            if (!l) return;
            l._markingAsReadConversations &&
              this.__clearOptimisticStatus(l._markingAsReadConversations);
          }
          this.host.products._removeProcessingEvent({ actionType: a, entity: Oc({ id: s }, o) });
        }),
        (ed.prototype.__clearOptimisticStatus = function (e) {
          for (var t = 0, n = e; t < n.length; t++) {
            var r = n[t];
            r._markingAsRead &&
              ((r._markingAsRead = !1),
              (r._markingAsReadSortNumber = null),
              (r._markingAsReadExpiration = null),
              this.host.models.Conversation.inject(r));
          }
        }),
        (ed.prototype.clearTimelineForAllRoleConversations = function (e, t) {
          var n;
          if (
            (n =
              e === _i.ROLE_OPT_OUT
                ? this._roleConversationsProcessingEvent[t]
                : this.host.roles._roleConversations[t])
          )
            for (var r = 0, o = n; r < o.length; r++) {
              var i = o[r];
              this.clearTimeline(i);
            }
        }),
        (ed.prototype.clearMessageStatusesForOrganization = function (e) {
          var t = this.host.organizations.getById(e);
          if (t) {
            var n = t.conversations;
            if (n)
              for (var r = 0, o = n; r < o.length; r++) {
                var i = o[r];
                this.clearMessageStatuses(i);
              }
          }
        }),
        (ed.prototype.clearMessageStatuses = function (e, t) {
          for (
            var o = this,
              n = (void 0 === t ? {} : t).emit,
              r = void 0 === n || n,
              i = e.timeline,
              s = 0,
              a = i;
            s < a.length;
            s++
          ) {
            var u = a[s];
            (u.shouldEnsureRecipientStatus = !0), this.host.models.Message.inject(u);
          }
          return (
            setTimeout(function () {
              for (var e = 0, t = i; e < t.length; e++) {
                var n = t[e];
                if (!o.host.messages._pendingFindRecipientStatuses) return;
                var r = o.host.messages._pendingFindRecipientStatuses[n.id];
                r && r();
              }
            }, 0),
            r && this.emit('clearMessageStatuses', i),
            i.length
          );
        }),
        (ed.prototype.mute = function (t, n) {
          return Fa(this, void 0, void 0, function () {
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.mute.muteConversation(t, n)];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (ed.prototype.unmute = function (t) {
          return Fa(this, void 0, void 0, function () {
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.mute.unmuteConversation(t)];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (ed.prototype.unmuteAll = function () {
          return Fa(this, void 0, void 0, function () {
            return Ga(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.mute.unmuteAll()];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        Ba([Object(Rs.decorator)()], ed.prototype, 'findAll', null),
        Ba([Object(Rs.decorator)()], ed.prototype, 'add', null),
        Ba([Object(Rs.decorator)()], ed.prototype, 'remove', null),
        ed),
      xc =
        ((rc = function (e, t) {
          return (rc =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          rc(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Uc = function () {
        return (Uc =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Lc = ['display_name'].join(','),
      qc = ['name'].join(','),
      Dc =
        (xc(Zl, (nc = Ua)),
        (Zl.prototype.mounted = function () {
          this._fetched = !1;
        }),
        (Zl.prototype.dispose = function () {
          this._fetched = !1;
        }),
        (Zl.prototype.addMembers = function (e) {
          var t = e.id,
            n = e.members,
            r = e.organizationId;
          return Ha(this, void 0, void 0, function () {
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!t) throw new ne('id', 'required');
                  if (!Array.isArray(n))
                    throw new ne('members', 'required', 'members must be an array');
                  if (!r) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.distributionLists.membersBatch({
                      id: t,
                      members: n,
                      operation: 'add',
                      organizationId: r,
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Zl.prototype.batchDelete = function (e) {
          var n = e.ids,
            r = e.organizationId;
          return Ha(this, void 0, void 0, function () {
            var t = this;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!Array.isArray(n)) throw new ne('ids', 'required', 'ids must be an array');
                  if (!r) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.distributionLists.batch({
                      ids: n,
                      operation: 'destroy',
                      organizationId: r,
                    }),
                  ];
                case 1:
                  return (
                    e.sent(),
                    [
                      2,
                      n.map(function (e) {
                        return t.host.models.DistributionList.inject({ $deleted: !0, id: e });
                      }),
                    ]
                  );
              }
            });
          });
        }),
        (Zl.prototype.create = function (e) {
          var n = e.adminOnly,
            r = e.members,
            o = e.name,
            t = e.network,
            i = void 0 === t ? 'patient' : t,
            s = e.organizationId;
          return Ha(this, void 0, void 0, function () {
            var t;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this._validate({
                      adminOnly: n,
                      members: r,
                      name: o,
                      organizationId: s,
                      shouldCheckId: !1,
                    }),
                    !1 === ['patient'].includes(i))
                  )
                    throw new ne('network', 'invalid', 'network must be "patient"');
                  return [
                    4,
                    this.host.api.distributionLists.create({
                      adminOnly: n,
                      members: r,
                      name: o,
                      network: i,
                      organizationId: s,
                    }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    [
                      2,
                      this.host.models.DistributionList.inject(
                        Uc(
                          { conversationId: t.conversation_id, organizationId: t.organization_id },
                          t.entity
                        )
                      ),
                    ]
                  );
              }
            });
          });
        }),
        (Zl.prototype.delete = function (t, n) {
          return Ha(this, void 0, void 0, function () {
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({ id: t, organizationId: n, shouldCheckInvalid: !1 }),
                    [4, this.host.api.distributionLists.delete(t, n)]
                  );
                case 1:
                  return (
                    e.sent(), [2, this.host.models.DistributionList.inject({ $deleted: !0, id: t })]
                  );
              }
            });
          });
        }),
        (Zl.prototype.find = function (r, o) {
          return (
            void 0 === o && (o = {}),
            Ha(this, void 0, void 0, function () {
              var t, n;
              return $a(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = ee.a.defaults(o, {
                        ignoreNotFound: !1,
                        bypassCache: !1,
                        includeMembers: !1,
                        includeMetadata: !1,
                      })),
                      this.host.requireUser(),
                      (t = null),
                      !o.bypassCache && (t = this.host.models.DistributionList.get(r))
                        ? [2, t]
                        : [
                            4,
                            this.host.api.distributionLists.find(r, {
                              organizationId: o.organizationId,
                            }),
                          ]
                    );
                  case 1:
                    if ((n = e.sent()))
                      delete (t =
                        this.config.condensedReplays || n.entity
                          ? this.host.models.DistributionList.inject(
                              Uc(
                                {
                                  conversationId: n.conversation_id,
                                  organizationId: n.organization_id,
                                },
                                n.entity
                              )
                            )
                          : this.host.models.DistributionList.inject(n)).$placeholder;
                    else if (!o.ignoreNotFound)
                      throw new G(this.host.models.DistributionList.name, r);
                    return [2, t];
                }
              });
            })
          );
        }),
        (Zl.prototype.findAll = function () {
          return Ha(this, void 0, void 0, function () {
            var t, n, r;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  return this._fetched
                    ? [2, this.getAll()]
                    : 0 !== (t = this.host.models.Organization.getAll()).length
                    ? [3, 2]
                    : [4, this.host.organizations.findAll()];
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  return [
                    4,
                    this.host.search.query({
                      types: ['distributionList'],
                      organizationIds: t.map(function (e) {
                        return e.id;
                      }),
                      query: { displayName: '' },
                      followContinuations: !0,
                    }),
                  ];
                case 3:
                  return (
                    (n = e.sent().results),
                    (r = n.map(function (e) {
                      return e.entity;
                    })),
                    (this._fetched = !0),
                    [2, r]
                  );
              }
            });
          });
        }),
        (Zl.prototype.getAll = function () {
          return this.host.models.DistributionList.getAll();
        }),
        (Zl.prototype.getById = function (e) {
          return this.host.models.DistributionList.get(e);
        }),
        (Zl.prototype.getMultiById = function (e) {
          return this.host.models.DistributionList.getMulti(e);
        }),
        (Zl.prototype.removeMembers = function (e) {
          var t = e.id,
            n = e.members,
            r = e.organizationId;
          return Ha(this, void 0, void 0, function () {
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!t) throw new ne('id', 'required');
                  if (!Array.isArray(n))
                    throw new ne('members', 'required', 'members must be an array');
                  if (!r) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.distributionLists.membersBatch({
                      id: t,
                      members: n,
                      operation: 'remove',
                      organizationId: r,
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Zl.prototype.search = function (e) {
          var i = e.continuation,
            t = e.network,
            s = void 0 === t ? 'patient' : t,
            a = e.organizationId,
            n = e.query,
            u = void 0 === n ? '' : n,
            r = e.sortBy,
            c = void 0 === r ? 'name' : r,
            o = e.sortOrder,
            l = void 0 === o ? 'asc' : o,
            d = e.types,
            h = void 0 === d ? [bi.PATIENT_DISTRIBUTION_LIST] : d;
          return Ha(this, void 0, void 0, function () {
            var t, n, r, o;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.search.query({
                      continuation: i,
                      network: s,
                      organizationId: a,
                      query: ((r = {}), (r[qc] = u), r),
                      returnFields: [],
                      sort: ((o = {}), (o[c] = l), o),
                      types: h,
                    }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = this._processSearchResults(t.results)),
                    [2, { metadata: t.metadata, results: n }]
                  );
              }
            });
          });
        }),
        (Zl.prototype.findMembers = function (s, e) {
          var t = void 0 === e ? {} : e,
            a = t.continuation,
            n = t.network,
            u = void 0 === n ? 'patient' : n,
            c = t.organizationId,
            r = t.query,
            l = void 0 === r ? '' : r,
            o = t.sortBy,
            d = void 0 === o ? ['display_name'] : o,
            i = t.sortOrder,
            h = void 0 === i ? ['asc'] : i;
          return Ha(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!s) throw new ne('id', 'required');
                  if (!c) throw new ne('organizationId', 'required');
                  if (d.length !== h.length)
                    throw new ne(
                      'sortBy',
                      'invalid',
                      'sortBy and sortOrder must be the same length'
                    );
                  for (t = {}, n = 0; n < d.length; n++) t[d[n]] = h[n];
                  return [
                    4,
                    this.host.search.query({
                      continuation: a,
                      network: u,
                      organizationId: c,
                      query: ((i = {}), (i[Lc] = l), (i.dist_list_token = s), i),
                      returnFields: [],
                      sort: t,
                      types: [bi.DISTRIBUTION_LIST_MEMBER],
                    }),
                  ];
                case 1:
                  return (
                    (r = e.sent()),
                    (o = this._processSearchResults(r.results)),
                    [2, { metadata: r.metadata, results: o }]
                  );
              }
            });
          });
        }),
        (Zl.prototype.findMemberIds = function (s, a, e) {
          var u = (void 0 === e ? {} : e).continuation;
          return Ha(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!s) throw new ne('id', 'required');
                  if (!a) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.distributionLists.findMemberIds(s, a, { continuation: u }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = t.members),
                    (r = void 0 === n ? [] : n),
                    (o = t.metadata),
                    (i = r.map(function (e) {
                      return e.token;
                    })),
                    [2, { metadata: o, results: i }]
                  );
              }
            });
          });
        }),
        (Zl.prototype.update = function (e) {
          var n = e.adminOnly,
            r = e.id,
            o = e.name,
            i = e.organizationId;
          return Ha(this, void 0, void 0, function () {
            var t;
            return $a(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({ adminOnly: n, name: o, id: r, organizationId: i }),
                    [
                      4,
                      this.host.api.distributionLists.update({
                        adminOnly: n,
                        id: r,
                        name: o,
                        organizationId: i,
                      }),
                    ]
                  );
                case 1:
                  return (
                    (t = e.sent()),
                    [
                      2,
                      this.host.models.DistributionList.inject(
                        Uc(
                          { conversationId: t.conversation_id, organizationId: t.organization_id },
                          t.entity
                        )
                      ),
                    ]
                  );
              }
            });
          });
        }),
        (Zl.prototype._processSearchResults = function (e) {
          return e
            .map(function (e) {
              return e.entity;
            })
            .filter(function (e) {
              return !e.$deleted;
            });
        }),
        (Zl.prototype._validate = function (e) {
          var t = e.adminOnly,
            n = e.id,
            r = (e.members, e.name),
            o = e.organizationId,
            i = e.shouldCheckId,
            s = void 0 === i || i,
            a = e.shouldCheckInvalid,
            u = void 0 === a || a;
          if (s && !n) throw new ne('id', 'required');
          if (!o) throw new ne('organizationId', 'required');
          if (u) {
            if (void 0 !== t && 'boolean' != typeof t)
              throw new ne('adminOnly', 'invalid', 'adminOnly must be a boolean value');
            if (r && (0 === r.length || 60 < r.length))
              throw new ne('name', 'invalid', 'name must be less than 60 alphanumeric characters');
          }
        }),
        Ka([Object(Rs.decorator)()], Zl.prototype, 'find', null),
        Ka([Object(Rs.decorator)()], Zl.prototype, 'findAll', null),
        Ka([Object(Rs.decorator)()], Zl.prototype, 'search', null),
        Zl),
      Bc =
        ((tc = function (e, t) {
          return (tc =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          tc(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Fc =
        (Bc(Jl, (ec = Ua)),
        (Jl.prototype.findMulti = function (A, C) {
          return (function (e, s, a, u) {
            return new (a = a || Promise)(function (n, t) {
              function r(e) {
                try {
                  i(u.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function o(e) {
                try {
                  i(u.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function i(e) {
                var t;
                e.done
                  ? n(e.value)
                  : ((t = e.value) instanceof a
                      ? t
                      : new a(function (e) {
                          e(t);
                        })
                    ).then(r, o);
              }
              i((u = u.apply(e, s || [])).next());
            });
          })(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              d,
              h,
              p,
              f,
              v,
              y,
              g,
              m,
              _,
              b,
              w,
              I,
              O,
              T,
              E,
              R = this;
            return (function (n, r) {
              var o,
                i,
                s,
                e,
                a = {
                  label: 0,
                  sent: function () {
                    if (1 & s[0]) throw s[1];
                    return s[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (e = { next: t(0), throw: t(1), return: t(2) }),
                'function' == typeof Symbol &&
                  (e[Symbol.iterator] = function () {
                    return this;
                  }),
                e
              );
              function t(t) {
                return function (e) {
                  return (function (t) {
                    if (o) throw new TypeError('Generator is already executing.');
                    for (; a; )
                      try {
                        if (
                          ((o = 1),
                          i &&
                            (s =
                              2 & t[0]
                                ? i.return
                                : t[0]
                                ? i.throw || ((s = i.return) && s.call(i), 0)
                                : i.next) &&
                            !(s = s.call(i, t[1])).done)
                        )
                          return s;
                        switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                          case 0:
                          case 1:
                            s = t;
                            break;
                          case 4:
                            return a.label++, { value: t[1], done: !1 };
                          case 5:
                            a.label++, (i = t[1]), (t = [0]);
                            continue;
                          case 7:
                            (t = a.ops.pop()), a.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                (6 !== t[0] && 2 !== t[0])
                              )
                            ) {
                              a = 0;
                              continue;
                            }
                            if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                              a.label = t[1];
                              break;
                            }
                            if (6 === t[0] && a.label < s[1]) {
                              (a.label = s[1]), (s = t);
                              break;
                            }
                            if (s && a.label < s[2]) {
                              (a.label = s[2]), a.ops.push(t);
                              break;
                            }
                            s[2] && a.ops.pop(), a.trys.pop();
                            continue;
                        }
                        t = r.call(n, a);
                      } catch (e) {
                        (t = [6, e]), (i = 0);
                      } finally {
                        o = s = 0;
                      }
                    if (5 & t[0]) throw t[1];
                    return { value: t[0] ? t[1] : void 0, done: !0 };
                  })([t, e]);
                };
              }
            })(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!C) throw new ne('organizationId', 'required');
                  return (
                    (A = ee.a.uniq(Na(A).map(this._resolveModelId))),
                    (t = ee.a.chunk(A, 10)),
                    (n = t.map(function (e) {
                      return R.host.api.entities.findMulti({
                        users: e,
                        metadata: e,
                        organizationId: C,
                      });
                    })),
                    [4, Promise.all(n)]
                  );
                case 1:
                  for (r = e.sent(), o = {}, i = 0, s = r; i < s.length; i++) {
                    if (((a = s[i]), (u = a.users), (c = a.metadata), u))
                      for (l = 0, d = u; l < d.length; l++)
                        for (h = d[l], p = 0, f = Object.entries(h); p < f.length; p++)
                          (v = f[p]), (O = v[0]), (y = v[1]), (o[O] = { entity: y });
                    if (c)
                      for (g = 0, m = c; g < m.length; g++)
                        for (_ = m[g], b = 0, w = Object.entries(_); b < w.length; b++)
                          (I = w[b]), (O = I[0]), (T = I[1]), (E = o[O]) && (E.metadata = T);
                  }
                  return [2, Object.values(o)];
              }
            });
          });
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([Object(Rs.decorator)()], Jl.prototype, 'findMulti', null),
        Jl),
      Gc =
        ((Zu = function (e, t) {
          return (Zu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Zu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Vc =
        (Gc(Yl, (Ju = Ua)),
        (Yl.prototype.escalateMessage = function (o) {
          return Xa(this, void 0, void 0, function () {
            var t, n, r;
            return Qa(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(o, 'message')))
                    throw new G(this.host.models.Message.name, o);
                  return [4, this.host.api.escalations.escalateMessage(t.serverId)];
                case 1:
                  return (n = e.sent()), (r = (n || {}).escalation), [2, this._updateEscalation(r)];
              }
            });
          });
        }),
        (Yl.prototype.acknowledge = function (u) {
          return Xa(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a;
            return Qa(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(u, 'escalationExecution')))
                    throw new G(this.host.models.EscalationExecution.name, u);
                  return (
                    (u = t.id),
                    (n = t.originalMessageId),
                    (r = this.host),
                    (o = r.currentUser),
                    (i = r.currentUserId),
                    (s = o.roles.map(function (e) {
                      return e.botUserId;
                    })).push(i),
                    [4, this.host.api.escalations.acknowledge(u, { messageId: n, userTokens: s })]
                  );
                case 1:
                  return (a = e.sent()), [2, this.host.models.EscalationExecution.inject(a)];
              }
            });
          });
        }),
        (Yl.prototype.cancel = function (r) {
          return Xa(this, void 0, void 0, function () {
            var t, n;
            return Qa(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(r, 'escalationExecution')))
                    throw new G(this.host.models.EscalationExecution.name, r);
                  return (n = t.originalMessageId), [4, this.host.api.escalations.cancel(n)];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Yl.prototype.ensureEscalationExecution = function (i) {
          return Xa(this, void 0, void 0, function () {
            var t, n, r, o;
            return Qa(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(i, 'escalationExecution')))
                    throw new G(this.host.models.EscalationExecution.name, i);
                  return (
                    (n = t.carbonCopyMessageId),
                    (r = t.originalMessageId),
                    (o = []),
                    n && o.push(n),
                    r && o.push(r),
                    [4, this.host.messages.ensureRecipientStatusMulti(o)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Yl.prototype.skip = function (u) {
          return Xa(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a;
            return Qa(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(u, 'escalationExecution')))
                    throw new G(this.host.models.EscalationExecution.name, u);
                  return (
                    (u = t.id),
                    (n = t.originalMessageId),
                    (r = this.host),
                    (o = r.currentUser),
                    (i = r.currentUserId),
                    (s = o.roles.map(function (e) {
                      return e.botUserId;
                    })).push(i),
                    [4, this.host.api.escalations.skip(u, { messageId: n, userTokens: s })]
                  );
                case 1:
                  return (a = e.sent()), [2, this.host.models.EscalationExecution.inject(a)];
              }
            });
          });
        }),
        (Yl.prototype.removeEscalationGroup = function (r) {
          return Xa(this, void 0, void 0, function () {
            var t, n;
            return Qa(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(r, 'escalationExecution')))
                    throw new G(this.host.models.EscalationExecution.name, r);
                  return (n = t.groupId), [4, this.host.api.groups.destroy(n)];
                case 1:
                  if (!e.sent()) throw new G(this.host.models.Group.name, n);
                  return [2];
              }
            });
          });
        }),
        (Yl.prototype.reactToEscalationsEvent = function (e) {
          var t = e.data;
          this._updateEscalation(t.escalation);
        }),
        (Yl.prototype._updateEscalation = function (e, t) {
          var n = (void 0 === t ? {} : t).inGroupInject,
            r = void 0 !== n && n,
            o = {};
          e && e.display_name && (o = this.host.models.EscalationExecution.inject(e));
          var i = o.id,
            s = o.carbonCopyMessage,
            a = o.groupId,
            u = o.organizationId,
            c = o.originalMessage;
          return (
            c && this.host.models.Message.inject({ escalationExecutionId: i, id: c.id }),
            s && this.host.models.Message.inject({ escalationExecutionId: i, id: s.id }),
            a &&
              !r &&
              this.host.models.Group.inject({ id: a, escalationExecutionId: i, organizationId: u }),
            o
          );
        }),
        (Yl.prototype.getAll = function () {
          return this.host.models.EscalationExecution.getAll();
        }),
        (Yl.prototype.getById = function (e) {
          return this.host.models.EscalationExecution.get(e);
        }),
        Wa([Object(Rs.decorator)()], Yl.prototype, 'escalateMessage', null),
        Wa([Object(Rs.decorator)()], Yl.prototype, 'acknowledge', null),
        Wa([Object(Rs.decorator)()], Yl.prototype, 'cancel', null),
        Wa([Object(Rs.decorator)()], Yl.prototype, 'skip', null),
        Wa([Object(Rs.decorator)()], Yl.prototype, 'removeEscalationGroup', null),
        Yl),
      Kc =
        ((Yu = function (e, t) {
          return (Yu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Yu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Hc =
        (Kc(Ql, (Qu = Ua)),
        (Ql.prototype.emit = function (e) {
          this.EVENTS[e.type]
            ? this.EVENTS[e.type].call(this, e)
            : this.logger.info('unhandled event: ' + e.type, e.data);
        }),
        Ql),
      $c = d(11),
      Wc = d.n($c),
      Xc =
        ((Xl.is = function (e) {
          return e instanceof this;
        }),
        Xl),
      Qc =
        ((Xu = function (e, t) {
          return (Xu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Xu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Yc = function () {
        return (Yc =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Jc = ['message:is_typing', 'presence', 'remote_wipe', 'sse:heartbeat'],
      Zc = ['message:is_typing', 'presence', 'sse:heartbeat'],
      el = ['00000000-0000-0000-0000-000000000001'],
      tl = ['remote_wipe'],
      nl = {
        autoDeliver: 'auto-deliver',
        canConfirm: 'can-confirm',
        closeAfterMessages: 'close-after-messages',
        heartbeat: 'heartbeat_5',
        hidden: 'hidden',
        includeDistributionListEvents: 'dl_sender_event',
        isTyping: 'is-typing',
        keepAlive: 'keep_alive_15_1',
        msgDeliveryDelay: 'msg_delivery_delay',
        multiOrg: 'multi-org',
        noOfflineMessages: 'no-offline-messages',
        renderMetadata: 'render_metadata',
        singleConversation: 'single_conversation',
      },
      rl = {
        events: {
          allowManualRequestBatch: !0,
          basicAuthParam: 'auth_basic',
          features: null,
          requiresBasicAuth: !1,
          routerName: 'eventRouter',
          url: '/events',
        },
        simpleNotifications: {
          allowManualRequestBatch: !1,
          basicAuthParam: 'auth',
          features: { heartbeat: !0 },
          requiresBasicAuth: !0,
          routerName: 'notificationRouter',
          url: '/events/simple_notifications',
        },
      },
      ol =
        (Qc(Wl, (Wu = Ua)),
        (Wl.prototype.mounted = function () {
          (this._throttled_flushQueuedAcks = Wc()(
            this._flushQueuedAcks,
            this.config.flushAckInterval,
            { leading: !1 }
          )),
            (this.__allEvents = []),
            (this._connectionRetryCount = 0),
            (this._eventQueue = []),
            (this._eventQueueDeferred = !1),
            (this._eventQueueIsManual = !1),
            (this._eventQueueTimeout = null),
            (this._heartbeatInterval = this.config.eventsHeartbeatIntervalVisible),
            (this._heartbeatTimeout = null),
            (this._lastHeartbeatTime = null),
            (this._openTimeout = null),
            (this._pendingAckConnections = 0),
            (this._processedEventIds = {}),
            (this._queuedAcks = []),
            (this._reconnectWhenQueuesAreEmpty = !1),
            (this._reconnectWhenQueuesAreEmpty = !1),
            (this._retryHistoryTimeout = null),
            (this._visibilityState = Ii.VISIBLE),
            (this.isConnected = !1),
            (this.isOpen = !1);
        }),
        (Wl.prototype.dispose = function () {
          this._throttled_flushQueuedAcks.cancel && this._throttled_flushQueuedAcks.cancel(),
            this.disconnect({ source: 'EventsService cleanup' });
        }),
        Object.defineProperty(Wl.prototype, '_autoAck', {
          get: function () {
            return 'events' === this.endpointType && this.config.autoAckSuccessfullyHandledEvents;
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(Wl.prototype, 'hasConnection', {
          get: function () {
            return !!this.eventSource;
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(Wl.prototype, 'isSignedIn', {
          get: function () {
            return !!this._auth;
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(Wl.prototype, 'router', {
          get: function () {
            return this.host[this.routerName];
          },
          enumerable: !1,
          configurable: !0,
        }),
        (Wl.prototype.setAuth = function (e) {
          this._auth = Yc({ basicAuthParam: this.basicAuthParam }, e);
        }),
        (Wl.prototype.removeAuth = function () {
          this._auth = null;
        }),
        (Wl.prototype.getAuth = function () {
          return this._auth;
        }),
        (Wl.prototype.connect = function () {
          var i = this;
          if (!this.isSignedIn)
            throw (
              (this._cancelSessionTimers({ source: 'Connection attempt while not signed in' }),
              new K())
            );
          if (this.requiresBasicAuth && (!this._auth.key || !this._auth.secret))
            throw (
              (this._cancelSessionTimers({
                source: 'Connection attempt without valid authorization',
              }),
              new Y())
            );
          if (this.eventSource) throw new Error('Already connected to EventSource');
          for (
            var e = [], t = 0, n = Object.entries(this.features || this.config.events);
            t < n.length;
            t++
          ) {
            var r = n[t],
              o = r[0],
              s = r[1];
            if (s || 0 === s) {
              var a = nl[o],
                u = !0 === s ? a : a + ':' + s;
              e.push(u);
            }
          }
          var c = e.join(',');
          this.logger.info(
            'connecting ' +
              this.endpointType +
              '. networkStatus=' +
              this.httpClient.networkStatus +
              ' features=' +
              c
          );
          var l,
            d = !this._watchingNetworkConnection;
          if (
            (this.httpClient.networkStatus !== Os.OFFLINE &&
              d &&
              this.httpClient._setNetworkStatus(Os.CONNECTING),
            this._watchNetworkConnection(),
            this.httpClient.networkStatus === Os.OFFLINE)
          )
            throw new Error(
              'Cannot connect while network is offline, but will autoconnect when online'
            );
          (this._isClosed = !1),
            (this._isHeartbeatTimeout = !1),
            (this._reconnectWhenQueuesAreEmpty = !1);
          var h = (this._requestedClose = !1),
            p = !1;
          (this._openTimeout = setTimeout(function () {
            (i._openTimeout = null), (p = !0), l.close();
          }, this.config.eventsOpenTimeout)),
            (this.eventSource = l = this.host.eventSourceClient.createEventSource(this.url, {
              auth: this._auth,
              features: c,
              onOpen: function () {
                i.logger.info('open'),
                  i._cancelSessionTimers({ source: 'Event source opened' }),
                  i._setHeartbeatTimeout(),
                  (h = !0),
                  (i.isOpen = !0),
                  i.emit('opened');
              },
              onMessage: function (e, t) {
                var n = t.isFirstMessage;
                i._setHeartbeatTimeout(),
                  n && (i._setRetryHistoryTimeout(), (i.isConnected = !0), i.emit('connected')),
                  i._queueEvent(e);
              },
              onError: function (e) {
                var t = !!e && i.httpClient.isUnauthorizedError(e),
                  n = i._isHeartbeatTimeout,
                  r = i.httpClient.networkStatus,
                  o = i._requestedClose;
                n
                  ? (e = new Error(
                      'No activity within ' + i._heartbeatInterval + ' milliseconds; reconnecting'
                    ))
                  : p &&
                    (e = new Error(
                      'Open timed out after ' +
                        i.config.eventsOpenTimeout +
                        ' milliseconds; reconnecting'
                    )),
                  i.logger.info(
                    'error',
                    e,
                    e.message || '',
                    e.code || '',
                    void 0 !== e.status ? e.status : ''
                  ),
                  i.__allEvents.push({
                    clientDisconnect: {
                      error: { code: e.code, message: e.message, status: e.status },
                      hasConnected: h,
                      isHeartbeatTimeout: n,
                      isUnauthorized: t,
                      networkStatus: r,
                      openTimedOut: p,
                      requestedClose: o,
                      timestamp: new Date(),
                    },
                  }),
                  o ||
                    (t
                      ? i.disconnect({
                          isRecoverable: !1,
                          source: 'Unauthorized during eventSource error handling',
                        })
                      : r !== Os.OFFLINE &&
                        (h || 0 !== i._connectionRetryCount || (i._connectionRetryCount = 1),
                        i._disconnectAndRetry()));
              },
            })),
            this.eventSource.start();
        }),
        (Wl.prototype._scheduleConnectRetry = function () {
          var e = this;
          this._cancelSessionTimers({ source: 'Scheduling connection retry' }),
            this.logger.info('scheduleConnectRetry', this._connectionRetryCount);
          var t = Math.min(
            this.config.eventsAutoReconnectDelay * this._connectionRetryCount,
            this.config.eventsAutoReconnectMaxDelay
          );
          (this._scheduleConnectRetryTimeout = setTimeout(function () {
            return e.connect();
          }, t)),
            this._connectionRetryCount++;
        }),
        (Wl.prototype._watchNetworkConnection = function () {
          this._watchingNetworkConnection ||
            ((this._watchingNetworkConnection = !0),
            this.host.on('networkStatus:change', this.onNetworkStatusChanged));
        }),
        (Wl.prototype._unwatchNetworkConnection = function () {
          this._watchingNetworkConnection &&
            (this.host.removeListener('networkStatus:change', this.onNetworkStatusChanged),
            (this._watchingNetworkConnection = !1));
        }),
        (Wl.prototype._cancelSessionTimers = function (e) {
          var t = (void 0 === e ? {} : e).source;
          this._heartbeatTimeout &&
            (clearTimeout(this._heartbeatTimeout), (this._heartbeatTimeout = null)),
            this._openTimeout && (clearTimeout(this._openTimeout), (this._openTimeout = null)),
            this._scheduleConnectRetryTimeout &&
              (this.__allEvents.push({ cancelSessionTimer: { source: t, timestamp: new Date() } }),
              clearTimeout(this._scheduleConnectRetryTimeout),
              (this._scheduleConnectRetryTimeout = null)),
            null !== this._eventQueueTimeout &&
              (clearTimeout(this._eventQueueTimeout), (this._eventQueueTimeout = null));
        }),
        (Wl.prototype._setHeartbeatTimeout = function (e) {
          var t = this;
          this._heartbeatTimeout && clearTimeout(this._heartbeatTimeout),
            void 0 !== e && (this._heartbeatInterval = e),
            (this._heartbeatTimeout = setTimeout(function () {
              (t._heartbeatTimeout = null),
                (t._isHeartbeatTimeout = !0),
                0 === t._connectionRetryCount && (t._connectionRetryCount = 1),
                t._disconnectAndRetry();
            }, this._heartbeatInterval));
        }),
        (Wl.prototype._cancelRetryHistoryTimeout = function () {
          this._retryHistoryTimeout &&
            (clearTimeout(this._retryHistoryTimeout), (this._retryHistoryTimeout = null));
        }),
        (Wl.prototype._setRetryHistoryTimeout = function () {
          var e = this;
          this._retryHistoryTimeout && clearTimeout(this._retryHistoryTimeout),
            (this._retryHistoryTimeout = setTimeout(function () {
              (e._retryHistoryTimeout = null), (e._connectionRetryCount = 0);
            }, this.config.eventsClearRetryHistoryInterval));
        }),
        (Wl.prototype.reconnect = function () {
          (this._connectionRetryCount = 0),
            this.disconnect({ unwatchNetwork: !1, source: 'Reconnect' }),
            this.connect();
        }),
        (Wl.prototype._disconnectAndRetry = function () {
          var e = this;
          this.__allEvents.push({
            eventsDisconnectAndRetry: {
              eventQueueLength: this._eventQueue.length,
              pendingAckConnections: this._pendingAckConnections,
              queuedAcksLength: this._queuedAcks.length,
              connectionRetryCount: this._connectionRetryCount,
              timestamp: new Date(),
            },
          }),
            this.disconnect({
              clearQueues: !1,
              unwatchNetwork: !1,
              source: 'Disconnect and retry',
            }),
            this.config.eventsAutoReconnect && (this._reconnectWhenQueuesAreEmpty = !0),
            this.config.eventsAutoReconnect &&
            0 === this._eventQueue.length &&
            0 === this._pendingAckConnections &&
            0 === this._queuedAcks.length
              ? this._scheduleConnectRetry()
              : this.config.eventsAutoReconnect &&
                (this._scheduleConnectRetryTimeout = setTimeout(function () {
                  return e.connect();
                }, this.config.eventDrainTimeout)),
            0 < this._eventQueue.length && this._scheduleEventQueue({ immediate: !0 }),
            (0 < this._pendingAckConnections || 0 < this._queuedAcks.length) &&
              this._flushQueuedAcks();
        }),
        (Wl.prototype.disconnect = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.clearQueues,
            r = void 0 === n || n,
            o = t.isRecoverable,
            i = void 0 === o || o,
            s = t.unwatchNetwork,
            a = void 0 === s || s,
            u = t.source;
          if (
            (this.__allEvents.push({
              eventsDisconnect: { clearQueues: r, source: u, unwatchNetwork: a },
            }),
            this._cancelSessionTimers({ source: 'Disconnect' }),
            this._cancelRetryHistoryTimeout(),
            a && this._unwatchNetworkConnection(),
            this.eventSource)
          ) {
            var c = this.eventSource;
            (this.eventSource = null),
              (this._requestedClose = !0),
              this._isClosed || ((this._isClosed = !0), c.close()),
              this.emit('disconnected', { isRecoverable: i });
          }
          (this.isConnected = !1),
            (this.isOpen = !1),
            r && ((this._eventQueue = []), (this._queuedAcks = []));
        }),
        (Wl.prototype._queueEvent = function (e) {
          var t = e.data;
          if (t) {
            if (
              tl.some(function (e) {
                return t.includes(e);
              })
            ) {
              var n = void 0;
              try {
                n = JSON.parse(t);
              } catch (e) {
                return (
                  this.logger.error('error parsing SSE payload: <' + t + '>'),
                  void this._disconnectAndRetry()
                );
              }
              var r = Object.keys(n.event)[0].replace('tigertext:iq:', '');
              if (tl.includes(r)) {
                this.disconnect({ source: 'Immediate event ' + r });
                var o = n.event_id;
                return void this._processImmediateEvent(o, t);
              }
            }
            this._eventQueue.push(t), this._scheduleEventQueue();
          }
        }),
        (Wl.prototype._handleEvent = function (e) {
          var t = e.event_id;
          if (this._autoAck || !this._processedEventIds[t] || el.includes(t)) {
            var n = Object.keys(e.event)[0],
              r = n.replace('tigertext:iq:', ''),
              o = e.event[n];
            (!this.config.eventsDebugging && Zc.includes(r)) || this.__allEvents.push(e),
              'sse:heartbeat' === r && (this._lastHeartbeatTime = Date.now()),
              this.logger.debug('incoming', r, o);
            var i = new Xc(t, r, o);
            try {
              this.router.emit(i),
                this.emit('event', i),
                this._autoAck
                  ? Jc.includes(r) || this.__queueAck(t)
                  : (this._processedEventIds[t] = !0);
            } catch (e) {
              this.logger.error('error in event ' + r, e, e.stack, { data: o }),
                this.disconnect({ isRecoverable: !1, source: 'Error in event ' + r });
            }
          }
        }),
        (Wl.prototype.__queueAck = function (e) {
          var t;
          (e = Na(e)), (t = this._queuedAcks).push.apply(t, e), this._throttled_flushQueuedAcks();
        }),
        (Wl.prototype.ack = function (r) {
          return Ya(this, void 0, void 0, function () {
            var t, n;
            return Ja(this, function (e) {
              switch (e.label) {
                case 0:
                  this.host.requireUser(),
                    (t = !1),
                    (r = Na(r)),
                    this.logger.log('ack', r),
                    this._pendingAckConnections++,
                    (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this.host.api.events.ack(r)];
                case 2:
                  return e.sent(), [3, 4];
                case 3:
                  return (
                    (n = e.sent()),
                    (t = this.httpClient.isUnauthorizedError(n)),
                    this.logger.warn('some events not acked', r),
                    [3, 4]
                  );
                case 4:
                  return (
                    this._pendingAckConnections--,
                    t &&
                      (this.logger.warn('no longer authorized, terminating session'),
                      this.disconnect({ isRecoverable: !1, source: 'Unauthorized during ack' })),
                    [2]
                  );
              }
            });
          });
        }),
        Object.defineProperty(Wl.prototype, 'url', {
          get: function () {
            var e = rl[this.endpointType].url;
            return (
              '/' +
              ('events' === this.endpointType && this.config.condensedReplays ? 'v5' : 'v2') +
              e
            );
          },
          enumerable: !1,
          configurable: !0,
        }),
        Wl),
      il =
        (($u = function (e, t) {
          return ($u =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          $u(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      sl =
        (il($l, (Hu = Ua)),
        ($l.prototype.mounted = function () {
          this._fetched = !1;
        }),
        ($l.prototype.dispose = function () {
          this._fetched = !1;
        }),
        ($l.prototype.create = function (e) {
          var s = e.avatarFile,
            a = e.description,
            t = e.memberIds,
            u = void 0 === t ? [] : t,
            c = e.metadata,
            l = e.name,
            d = e.organizationId,
            n = e.replayHistory,
            h = void 0 === n || n,
            r = e.senderId,
            p = void 0 === r ? this.host.currentUserId : r;
          return eu(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i = this;
            return tu(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !d)) throw new ne('organizationId', 'required');
                  return [
                    4,
                    Promise.all(
                      (function () {
                        for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                          e += arguments[t].length;
                        var r = Array(e),
                          o = 0;
                        for (t = 0; t < n; t++)
                          for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++)
                            r[o] = i[s];
                        return r;
                      })([p], u)
                        .map(this.host.roles.__resolveRoleId)
                        .filter(Boolean)
                        .map(function (e) {
                          return i._resolveModelIdWithTypes(e, 'user');
                        })
                        .map(function (e) {
                          return i.host.users.findOrCreate(e, { organizationId: d });
                        })
                    ),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = gc.a.call(t)),
                    (u = n.map(function (e) {
                      return i._resolveModelIdWithTypes(e, 'user');
                    })),
                    [
                      4,
                      this.host.api.groups.create({
                        avatarFile: s,
                        description: a,
                        excludeCreator: !1,
                        isPublic: !0,
                        memberIds: u,
                        metadata: c,
                        name: l,
                        organizationId: d,
                        replayHistory: h,
                      }),
                    ]
                  );
                case 2:
                  return (
                    (r = e.sent()),
                    (o =
                      this.config.condensedReplays && r.entity
                        ? this.host.conversations.__injectCounterParty({
                            conversationId: r.conversation_id,
                            entityAttrs: r.entity,
                            entityType: 'group',
                            hasCurrentUser: !0,
                            organizationId: r.organization_id,
                          })
                        : this.host.models.Group.inject(r)),
                    c && this.host.metadata.__injectMetadata(o.id, d, c),
                    [2, o]
                  );
              }
            });
          });
        }),
        ($l.prototype.find = function (r, o) {
          return (
            void 0 === o && (o = {}),
            eu(this, void 0, void 0, function () {
              var t, n;
              return tu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = ee.a.defaults(o, { bypassCache: !1, ignoreNotFound: !1 })),
                      this.host.requireUser(),
                      (t = null),
                      o.bypassCache
                        ? [3, 2]
                        : !(t = this.host.models.Group.get(r)) || t.$placeholder
                        ? [3, 2]
                        : [4, this.host.groups.__ensureEntitiesLoaded(t.id, o)]
                    );
                  case 1:
                    return e.sent(), [2, t];
                  case 2:
                    return [4, this.host.groups.__find(r)];
                  case 3:
                    if (((n = e.sent()), (t = this.host.models.Group.get(r)), n))
                      return t ? [4, this.host.groups.__ensureEntitiesLoaded(t.id, o)] : [3, 5];
                    if (!o.ignoreNotFound) throw new G(this.host.models.Group.name, r);
                    return [2, t];
                  case 4:
                    e.sent(), (e.label = 5);
                  case 5:
                    return [2, t];
                }
              });
            })
          );
        }),
        ($l.prototype.findAll = function (e) {
          var t = (void 0 === e ? {} : e).bypassCache,
            o = void 0 !== t && t;
          return eu(this, void 0, void 0, function () {
            var t, n, r;
            return tu(this, function (e) {
              switch (e.label) {
                case 0:
                  return !o && this._fetched
                    ? [2, this.getAll()]
                    : 0 !== (t = this.host.models.Organization.getAll()).length
                    ? [3, 2]
                    : [4, this.host.organizations.findAll()];
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  return [
                    4,
                    this.host.search.query({
                      types: ['forum'],
                      organizationIds: t.map(function (e) {
                        return e.id;
                      }),
                      query: { displayName: '' },
                      followContinuations: !0,
                    }),
                  ];
                case 3:
                  return (
                    (n = e.sent().results),
                    (r = n.map(function (e) {
                      return e.entity;
                    })),
                    (this._fetched = !0),
                    [2, r]
                  );
              }
            });
          });
        }),
        ($l.prototype.getAll = function () {
          return this.host.models.Group.getAll().filter(function (e) {
            return e.isPublic;
          });
        }),
        ($l.prototype.getById = function (e) {
          return this.host.models.Group.get(e);
        }),
        ($l.prototype.join = function (t) {
          return eu(this, void 0, void 0, function () {
            return tu(this, function (e) {
              return [2, this.host.groups.addMembers(t, [this.host.currentUserId])];
            });
          });
        }),
        Za([Object(Rs.decorator)()], $l.prototype, 'find', null),
        Za([Object(Rs.decorator)()], $l.prototype, 'findAll', null),
        $l),
      al =
        ((Ku = function (e, t) {
          return (Ku =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Ku(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      ul = function () {
        return (ul =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      cl =
        (al(Hl, (Vu = Ua)),
        (Hl.prototype.mounted = function () {
          (this._fetched = !1),
            (this._groupMemberIds = {}),
            (this._userGroups = {}),
            (this._userState = {}),
            this.host.models.Conversation.on('afterInject', this._onChangeConversation),
            this.host.models.Conversation.on('afterEject', this._onRemoveConversation),
            this.host.models.Group.on('afterInject', this._onChangeGroup),
            this.host.models.Group.on('afterEject', this._onRemoveGroup),
            this.host.models.Metadata.on('afterInject', this._onChangeMetadata),
            this.host.models.Metadata.on('afterEject', this._onChangeMetadata),
            this.host.models.User.on('afterInject', this._onChangeUser),
            this.host.models.User.on('afterEject', this._onRemoveUser);
        }),
        (Hl.prototype.dispose = function () {
          (this._fetched = !1),
            (this._groupMemberIds = {}),
            (this._userGroups = {}),
            (this._userState = {}),
            this.host.models.Conversation.removeListener('afterInject', this._onChangeConversation),
            this.host.models.Conversation.removeListener('afterEject', this._onRemoveConversation),
            this.host.models.Group.removeListener('afterInject', this._onChangeGroup),
            this.host.models.Group.removeListener('afterEject', this._onRemoveGroup),
            this.host.models.Metadata.removeListener('afterInject', this._onChangeMetadata),
            this.host.models.Metadata.removeListener('afterEject', this._onChangeMetadata),
            this.host.models.User.removeListener('afterInject', this._onChangeUser),
            this.host.models.User.removeListener('afterEject', this._onRemoveUser);
        }),
        (Hl.prototype.create = function (e) {
          var a = e.avatarFile,
            u = e.description,
            t = e.isPatientGroup,
            c = void 0 !== t && t,
            n = e.isTeamActivation,
            l = void 0 !== n && n,
            r = e.memberIds,
            d = void 0 === r ? [] : r,
            h = e.metadata,
            p = e.name,
            f = e.organizationId,
            o = e.replayHistory,
            v = void 0 !== o && o,
            i = e.senderId,
            y = void 0 === i ? this.host.currentUserId : i;
          return ru(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s = this;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !f)) throw new ne('organizationId', 'required');
                  return [
                    4,
                    Promise.all(
                      iu([y], d)
                        .map(this.host.roles.__resolveRoleId)
                        .filter(Boolean)
                        .map(function (e) {
                          return s._resolveModelIdWithTypes(e, ['user', 'team']);
                        })
                        .map(function (e) {
                          var t = s._resolveEntity(e);
                          return 'team' === Object(N.get)(t, '$entityType')
                            ? t
                            : s.host.users.findOrCreate(e, { organizationId: f });
                        })
                    ),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = gc.a.call(t)),
                    (d = n.map(function (e) {
                      return s._resolveModelIdWithTypes(e, ['user', 'team']);
                    })),
                    (r = this._shouldExcludeSender(f, d, y)),
                    p || c || l || (p = this._getGroupName(n)),
                    [
                      4,
                      this.host.api.groups.create({
                        avatarFile: a,
                        description: u,
                        excludeCreator: r,
                        memberIds: d,
                        metadata: h,
                        name: p,
                        organizationId: f,
                        replayHistory: v,
                      }),
                    ]
                  );
                case 2:
                  return (
                    (o = e.sent()),
                    this.config.condensedReplays && o.entity
                      ? ((i = this.host.conversations.__injectCounterParty({
                          conversationId: o.conversation_id,
                          entityAttrs: o.entity,
                          entityType: 'group',
                          organizationId: o.organization_id,
                        })),
                        this.host.conversations.__injectConversation(ul(ul({}, o), { entity: i })))
                      : (i = this.host.models.Group.inject(o)),
                    h ? (this.host.metadata.__injectMetadata(i.id, f, h), [3, 5]) : [3, 3]
                  );
                case 3:
                  return this.config.condensedReplays
                    ? [3, 5]
                    : [4, this.host.metadata.find(i.id, f)];
                case 4:
                  e.sent(), (e.label = 5);
                case 5:
                  return [2, i];
              }
            });
          });
        }),
        (Hl.prototype.createPatientGroup = function (e) {
          var t = e.metadata,
            n = e.name,
            r = e.organizationId,
            o = e.recipientId,
            i = e.senderId;
          return this.create({
            isPatientGroup: !0,
            metadata: t,
            name: n,
            organizationId: r,
            memberIds: iu([i], o),
          });
        }),
        (Hl.prototype._shouldExcludeSender = function (e, t, n) {
          var r,
            o,
            i = this.host.models.User.get(n);
          return (
            !!(
              (o = r = i) &&
              'user' === o.$entityType &&
              r.isRoleBot &&
              i.botRole &&
              0 < i.botRole.members.length
            ) && !t.includes(i.botRole.memberIds[0])
          );
        }),
        (Hl.prototype._getGroupName = function (e, t) {
          return (
            void 0 === t && (t = !1),
            e
              .map(function (e) {
                var t = e.displayName,
                  n = e.firstName;
                return e.isRoleBot || 'role' === e.$entityType || 'team' === e.$entityType
                  ? t
                  : n || (Fn()(t) || mo(t) ? t : '');
              })
              .filter(Boolean)
              .join(', ') + (t ? ' ####' : '') || 'Group'
          );
        }),
        (Hl.prototype.update = function (o, e) {
          var i = e.name,
            s = e.avatarFile,
            a = e.replayHistory,
            u = e.memberIds,
            c = e.metadata;
          return ru(this, void 0, void 0, function () {
            var t, n, r;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (o = this._resolveModelId(o)),
                    (t = {}),
                    void 0 !== i && (t.name = i),
                    void 0 !== a && (t.replayHistory = a),
                    void 0 !== u && (t.memberIds = u.map(this.host.roles.__resolveRoleId)),
                    [
                      4,
                      this.host.api.groups.update(o, {
                        name: i,
                        avatarFile: s,
                        replayHistory: a,
                        memberIds: u,
                      }),
                    ]
                  );
                case 1:
                  return (
                    void 0 !== (n = e.sent()).avatarUrl && (t.avatarUrl = n.avatarUrl),
                    (r = this.host.models.Group.inject(ul({ id: o }, t))),
                    c ? [4, this.host.metadata.update(o, c, r.organizationId)] : [3, 3]
                  );
                case 2:
                  e.sent(), (e.label = 3);
                case 3:
                  return [2, r];
              }
            });
          });
        }),
        (Hl.prototype.find = function (r, o) {
          return (
            void 0 === o && (o = {}),
            ru(this, void 0, void 0, function () {
              var t, n;
              return ou(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = Object(N.defaults)(o, {
                        bypassCache: !1,
                        ignoreNotFound: !1,
                        includeMembers: !1,
                      })),
                      this.host.requireUser(),
                      (t = null),
                      o.bypassCache
                        ? [3, 2]
                        : !(t = this.host.models.Group.get(r)) || t.$placeholder
                        ? [3, 2]
                        : [4, this.__ensureEntitiesLoaded(t.id, o)]
                    );
                  case 1:
                    return e.sent(), [2, t];
                  case 2:
                    return [4, this.__find(r)];
                  case 3:
                    if (((n = e.sent()), (t = this.host.models.Group.get(r)), n))
                      return t ? [4, this.__ensureEntitiesLoaded(t.id, o)] : [3, 5];
                    if (!o.ignoreNotFound) throw new G(this.host.models.Group.name, r);
                    return [2, t];
                  case 4:
                    e.sent(), (e.label = 5);
                  case 5:
                    return [2, t];
                }
              });
            })
          );
        }),
        (Hl.prototype.__find = function (s) {
          return ru(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (t = this.host.models.Group.get(s)), [4, this.host.api.groups.find(s)];
                case 1:
                  return (
                    (n = e.sent()),
                    this.config.condensedReplays && n && n.entity
                      ? ((r = n.entity),
                        (t = this.host.conversations.__injectCounterParty({
                          conversationId: n.conversation_id,
                          entityAttrs: r,
                          entityType: 'group',
                          organizationId: n.organization_id,
                        })),
                        this.host.models.Group.removePlaceholder({ entity: t, attrs: r }),
                        [2, r])
                      : (n &&
                          (this.__removeForumMembers(n),
                          (o = n.metadata),
                          (t = this.host.models.Group.inject(n)),
                          (i = t.organizationId),
                          o && i && this.host.metadata.__injectMetadata(s, i, o)),
                        this.host.models.Group.removePlaceholder({ entity: t, attrs: n }),
                        [2, n])
                  );
              }
            });
          });
        }),
        (Hl.prototype.__removeForumMembers = function (e) {
          var t = e.members,
            n = this.__extractGroupTypeFromAttrs(e);
          n === si.FORUM
            ? t && 0 === t.length && delete e.members
            : n === si.ROLE_ASSIGNMENT || t || (e.members = []);
        }),
        (Hl.prototype.__extractGroupTypeFromAttrs = function (e) {
          var t = e.id || e.token,
            n = e.organizationId || e.organization_key,
            r = n ? this.host.metadata.get(t, n) : null,
            o = e.metadata || (r ? r.data : null),
            i = si.GROUP;
          if (o && 'role_assignment' === o.meta_type) i = si.ROLE_ASSIGNMENT;
          else if (o && 'role' === o.feature_service) i = si.ROLE_P2P;
          else if (o && 'escalation' === o.feature_service) i = si.ESCALATION;
          else if (o && 'patient_care' === o.feature_service) i = si.PATIENT_CARE;
          else if (o && 'patient_messaging' === o.feature_service) i = si.PATIENT_MESSAGING;
          else if (o && 'teams' === o.feature_service) {
            var s = o.meta_type;
            'activated_team' === s
              ? (i = si.ACTIVATED_TEAM)
              : 'intra_team' === s && (i = si.INTRA_TEAM);
          } else (e.isPublic || e.is_public) && (i = si.FORUM);
          return i;
        }),
        (Hl.prototype.__ensureEntitiesLoaded = function (r, o) {
          return ru(this, void 0, void 0, function () {
            var t, n;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = this.host.models.Group.get(r)),
                    (n = [this.ensureMetadata(t)]),
                    o.includeMembers && n.push(this.ensureMembers(t)),
                    [4, Promise.all(n)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Hl.prototype.findAll = function (e) {
          var t = (void 0 === e ? {} : e).includeMembers,
            g = void 0 !== t && t;
          return ru(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return this._fetched
                    ? [2, this.getAll()]
                    : 0 !== (t = this.host.models.Organization.getAll()).length
                    ? [3, 2]
                    : [4, this.host.organizations.findAll()];
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  return [
                    4,
                    this.host.search.query({
                      types: ['group'],
                      organizationIds: t.map(function (e) {
                        return e.id;
                      }),
                      query: { displayName: '' },
                      followContinuations: !0,
                    }),
                  ];
                case 3:
                  if (
                    ((n = e.sent().results),
                    (r = n.map(function (e) {
                      return e.entity;
                    })),
                    !g)
                  )
                    return [3, 5];
                  for (o = {}, i = 0, s = r; i < s.length; i++)
                    for (
                      a = s[i], v = a.organizationId, y = a.memberIds, u = 0, c = y;
                      u < c.length;
                      u++
                    )
                      (l = c[u]), o[v] || (o[v] = []), o[v].includes(l) || o[v].push(l);
                  for (d = [], h = 0, p = Object.entries(o); h < p.length; h++)
                    (f = p[h]), (v = f[0]), (y = f[1]), d.push(this.host.users.ensureUsers(y, v));
                  return [4, Promise.all(d)];
                case 4:
                  e.sent(), (e.label = 5);
                case 5:
                  return (this._fetched = !0), [2, r];
              }
            });
          });
        }),
        (Hl.prototype.findAllWithSpecificMembers = function (n, r, o) {
          return ru(this, void 0, void 0, function () {
            var t;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (r = this._resolveModelId(r)),
                    (n = Na(n).map(this._resolveModelId).map(this.host.roles.__resolveRoleId)),
                    (t = this.__findAllLocalWithSpecificMembers(n, r, o)),
                    (o && o.localOnly) || 0 !== t.length ? [3, 2] : [4, this.findAll()]
                  );
                case 1:
                  e.sent(), (t = this.__findAllLocalWithSpecificMembers(n, r, o)), (e.label = 2);
                case 2:
                  return [2, t];
              }
            });
          });
        }),
        (Hl.prototype.ensureMembers = function (i, s) {
          return (
            void 0 === s && (s = {}),
            ru(this, void 0, void 0, function () {
              var t, n, r, o;
              return ou(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = i.groupType === si.ROLE_ASSIGNMENT),
                      i.memberIds
                        ? [3, 5]
                        : i.groupType !== si.FORUM
                        ? [3, 2]
                        : [4, this.findAllMemberIds(i.id)]
                    );
                  case 1:
                    return (
                      (n = e.sent()) && this.host.models.Group.inject({ id: i.id, members: n }),
                      [3, 5]
                    );
                  case 2:
                    return t ? [3, 5] : [3, 3];
                  case 3:
                    return [4, this.__find(i.id)];
                  case 4:
                    e.sent(), (e.label = 5);
                  case 5:
                    return (
                      (r = s.attrs ? ul({}, s.attrs) : {}),
                      (o = t && !i.memberIds ? [] : i.memberIds),
                      (r.organizationId = i.organizationId),
                      [4, this.ensureMembersWithIds(i.id, o, ul(ul({}, s), { attrs: r }))]
                    );
                  case 6:
                    return e.sent(), [2];
                }
              });
            })
          );
        }),
        (Hl.prototype.ensureMembersWithIds = function (n, r, o) {
          return (
            void 0 === o && (o = {}),
            ru(this, void 0, void 0, function () {
              var t = this;
              return ou(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      this.host.requireUser(),
                      0 === (r = Object(N.without)(r, this.host.currentUserId)).length
                        ? [2]
                        : ((o = Object(N.defaults)(o, { onlyPlaceholder: !1 })),
                          [
                            4,
                            Promise.all(
                              r
                                .map(function (e) {
                                  return t.__ensureMember(e, o);
                                })
                                .filter(Boolean)
                            ),
                          ])
                    );
                  case 1:
                    return 0 < e.sent().length && this.host.models.Group.touch(n), [2];
                }
              });
            })
          );
        }),
        (Hl.prototype.__ensureMember = function (e, t) {
          if ((void 0 === t && (t = {}), !this.host.models.User.shouldEnsure(e, t.onlyPlaceholder)))
            return null;
          var n = this.host.models.User.get(e);
          return (
            n && t.attrs && this.host.models.User.injectPlaceholder(ul({ id: n.id }, t.attrs)),
            this.host.models.User.waitForEnsuredEntity(e, t)
          );
        }),
        (Hl.prototype.ensureMetadata = function (o) {
          return ru(this, void 0, void 0, function () {
            var t, n, r;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = o.groupType),
                    (n = o.id),
                    (r = o.organizationId) && this.host.metadata.get(n, r)
                      ? [3, 3]
                      : t !== si.FORUM && t !== si.ROLE_ASSIGNMENT
                      ? [3, 1]
                      : [3, 3]
                  );
                case 1:
                  return [4, this.__find(n)];
                case 2:
                  e.sent(), (e.label = 3);
                case 3:
                  return [2];
              }
            });
          });
        }),
        (Hl.prototype.getAll = function () {
          return this.host.models.Group.getAll();
        }),
        (Hl.prototype.getById = function (e) {
          return this.host.models.Group.get(e);
        }),
        (Hl.prototype.getMultiById = function (e) {
          return this.host.models.Group.getMulti(e);
        }),
        (Hl.prototype.__findAllLocalWithSpecificMembers = function (e, t, n) {
          var r = void 0 === n ? {} : n,
            o = r.exact,
            i = void 0 === o || o,
            s = r.includeCurrentUser,
            a = void 0 === s || s,
            u = r.includeForums,
            c = void 0 === u || u,
            l = r.includeRoles,
            d = void 0 === l || l,
            h = r.senderId,
            p = void 0 === h ? null : h,
            f = this.host,
            v = f.currentUser,
            y = f.currentUserId,
            g = v.roles.map(function (e) {
              return e.botUserId;
            });
          p && g.includes(p)
            ? (e = e.slice()).push(p, y)
            : a && !e.includes(y) && (e = e.slice()).push(y);
          for (
            var m = e.includes(y), _ = e.length, b = [], w = 0, I = this.host.models.Group.getAll();
            w < I.length;
            w++
          ) {
            var O = I[w];
            if (c || O.groupType !== si.FORUM) {
              var T = O.memberIds;
              if (O.organizationId === t && T) {
                for (var E = !0, R = 0, A = e; R < A.length; R++) {
                  var C = A[R];
                  if (!T.includes(C)) {
                    E = !1;
                    break;
                  }
                }
                if (E) {
                  if (i) {
                    if (!p && !m) continue;
                    var S = _;
                    if (d)
                      for (var P = 0, j = g; P < j.length; P++) {
                        var M = j[P];
                        O.memberIds.includes(M) && S++;
                      }
                    if (S !== O.memberIds.length) continue;
                  }
                  b.push(O);
                }
              }
            }
          }
          return b;
        }),
        (Hl.prototype.destroy = function (t) {
          return ru(this, void 0, void 0, function () {
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (t = this._resolveModelId(t)),
                    [4, this.host.api.groups.destroy(t)]
                  );
                case 1:
                  if (!e.sent()) throw new G(this.host.models.Group.name, t);
                  return [2];
              }
            });
          });
        }),
        (Hl.prototype.findAllMemberIds = function (t) {
          return ru(this, void 0, void 0, function () {
            return ou(this, function (e) {
              return (
                this.host.requireUser(),
                (t = this._resolveModelId(t)),
                [2, this.host.api.groups.findAllMemberIds(t)]
              );
            });
          });
        }),
        (Hl.prototype.addMembers = function (s, a) {
          return ru(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.host.requireUser(),
                    (s = this._resolveModelId(s)),
                    (a = Na(a).map(this._resolveModelId).map(this.host.roles.__resolveRoleId)),
                    (t = this.getById(s)) && t.groupType === si.ROLE_P2P)
                  )
                    throw new X('role p2p group', t.id, 'add users');
                  return t
                    ? 'FORUM' !== t.groupType || t.memberIds
                      ? [3, 2]
                      : ((n = t), [4, this.findAllMemberIds(s)])
                    : [3, 3];
                case 1:
                  (n.memberIds = e.sent()), (e.label = 2);
                case 2:
                  (a = Object(N.difference)(a, t.memberIds)), (e.label = 3);
                case 3:
                  return 0 === a.length ? [2] : [4, this.host.api.groups.addMembers(s, a)];
                case 4:
                  return (
                    (r = e.sent()),
                    this.config.condensedReplays
                      ? (o = this.host.conversations.getById(r.conversation_id))
                        ? [3, 6]
                        : [4, this.host.api.conversations.find(r.conversation_id)]
                      : [3, 7]
                  );
                case 5:
                  if (!(i = e.sent())) throw new G(this.host.models.Conversation.name, s);
                  (o = this.host.conversations.__injectConversation(i)), (e.label = 6);
                case 6:
                  r.unread_message_count && (o.unreadCount = r.unread_message_count),
                    r.unread_priority_message_count &&
                      (o.unreadPriorityCount = r.unread_priority_message_count),
                    this.host.models.Conversation.inject(o),
                    (e.label = 7);
                case 7:
                  return [2];
              }
            });
          });
        }),
        (Hl.prototype.removeMembers = function (a, u) {
          return ru(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.host.requireUser(),
                    (a = this._resolveModelId(a)),
                    (u = Na(u).map(this._resolveModelId).map(this.host.roles.__resolveRoleId)),
                    !(t = this.getById(a)))
                  )
                    return [3, 3];
                  if (
                    ((n = t.groupType),
                    (r = t.id),
                    (o = t.p2pSender),
                    (i = o && 'role' === o.$entityType && o.botUserId),
                    n === si.ROLE_P2P && i && u.includes(i))
                  )
                    throw new X('role p2p group', r, 'remove an on-duty user');
                  return 'FORUM' !== n || t.memberIds
                    ? [3, 2]
                    : ((s = t), [4, this.findAllMemberIds(a)]);
                case 1:
                  (s.memberIds = e.sent()), (e.label = 2);
                case 2:
                  (u = Object(N.intersection)(u, t.memberIds)), (e.label = 3);
                case 3:
                  return 0 === u.length ? [2] : [4, this.host.api.groups.removeMembers(a, u)];
                case 4:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Hl.prototype.addMember = function (t, n) {
          return ru(this, void 0, void 0, function () {
            return ou(this, function (e) {
              return [2, this.addMembers(t, [n])];
            });
          });
        }),
        (Hl.prototype.removeMember = function (t, n) {
          return ru(this, void 0, void 0, function () {
            return ou(this, function (e) {
              return [2, this.removeMembers(t, [n])];
            });
          });
        }),
        (Hl.prototype.leave = function (p) {
          return ru(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (p = this._resolveModelId(p)),
                    (t = this.getById(p))
                      ? ((n = this.host),
                        (r = n.currentUser),
                        (o = n.currentUserId),
                        (i = t.groupType),
                        (s = t.p2pSender),
                        (a = t.memberIds),
                        (u = r.roles.map(function (e) {
                          return e.botUserId;
                        })),
                        (c = [o]),
                        i !== si.FORUM ? [3, 2] : [4, this.findAllMemberIds(p)])
                      : [2]
                  );
                case 1:
                  (a = e.sent()), (e.label = 2);
                case 2:
                  if (i === si.ROLE_P2P && s) c = ['user' === s.$entityType ? s.id : s.botUserId];
                  else if (a)
                    for (l = 0, d = a; l < d.length; l++) (h = d[l]), u.includes(h) && c.push(h);
                  return [4, this.removeMembers(p, c)];
                case 3:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Hl.prototype.reactToBangEvent = function (e) {
          var t = e.data,
            n = (t = Ta(t)).bang_id || '' + t.sort_number;
          return this.__handleBang({ data: t, eventId: n, alwaysAddToTimeline: !1 });
        }),
        (Hl.prototype.__handleBang = function (e) {
          var t = e.data,
            n = e.eventId,
            r = e.alwaysAddToTimeline,
            o = void 0 !== r && r,
            i = t.event;
          'added' === i
            ? this.__addedToGroup({ data: t, eventId: n, alwaysAddToTimeline: o })
            : 'removed' === i
            ? this.__removedFromGroup({ data: t, eventId: n, alwaysAddToTimeline: o })
            : 'teams_request_accepted' === i
            ? this.__acceptedToTeam({ data: t, eventId: n, alwaysAddToTimeline: o })
            : 'teams_request_declined' === i || 'teams_request_declined_full' === i
            ? this.__deniedToTeam({ data: t, eventId: n, alwaysAddToTimeline: o })
            : oi.fromServer(i)
            ? this.__handleEscalationBang({ data: t, eventId: n, alwaysAddToTimeline: o })
            : 'ended_voip_call' === i &&
              this.__handleEndedCall({ data: t, eventId: n, alwaysAddToTimeline: o });
        }),
        (Hl.prototype.__handleEndedCall = function (e) {
          var _ = e.data,
            b = e.eventId,
            w = e.alwaysAddToTimeline;
          return ru(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m;
            return ou(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = _.participants_duration),
                    (n = _.caller_entity),
                    (r = _.conversation_id),
                    (o = _.created_on),
                    (i = _.organization_id),
                    (s = _.sort_number),
                    (a = _.subject_entity),
                    (u = _.target_entity);
                  try {
                    c = JSON.parse(t);
                  } catch (e) {
                    return [2];
                  }
                  return !c || Object(N.isEmpty)(c) || Object(N.isEmpty)(c[this.host.currentUserId])
                    ? [2]
                    : ((l = c[this.host.currentUserId]),
                      (d = l.duration),
                      (h = l.start_time),
                      d && Object(N.get)(n, 'token') && Object(N.get)(u, 'token')
                        ? ((p = [n, u].map(function (e) {
                            var t = e.display_name,
                              n = e.token,
                              r = e.type;
                            return { displayName: t, id: n, organizationId: i, type: r };
                          })),
                          (f = p[0]),
                          (v = p[1]).type.includes('group')
                            ? ((y = this.host.models.Group.get(v.id)), [3, 3])
                            : [3, 1])
                        : [2]);
                case 1:
                  return v.type.includes('account')
                    ? [4, this.findAllWithSpecificMembers([v.id, f.id], i)]
                    : [3, 3];
                case 2:
                  (g = e.sent()),
                    (m = 1 === g.length && 2 === g[0].memberCount),
                    (y = m && g[0]),
                    (e.label = 3);
                case 3:
                  return (
                    y &&
                      this.host.conversations.addCallChangeLog({
                        action: 'CALL_ENDED',
                        alwaysAddToTimeline: w,
                        callee: v,
                        callEntity: a,
                        caller: f,
                        conversationId: r,
                        createdAt: o,
                        duration: d,
                        group: y,
                        id: b,
                        organizationId: i,
                        sortNumber: +s,
                        userStartTime: h,
                      }),
                    [2]
                  );
              }
            });
          });
        }),
        (Hl.prototype.__addedToGroup = function (e) {
          var t = e.data,
            n = e.eventId,
            r = e.alwaysAddToTimeline,
            o = t.caller_entity,
            i = t.subject_entity,
            s = t.target_entity,
            a = t.organization_id;
          if (o && o.token && s && s.token && i && i.token) {
            i && !i.display_name && (r = !1);
            var u = this.host.models.Group.get(s.token);
            if (u) {
              var c,
                l = { displayName: o.display_name, id: o.token, organizationId: a, type: 'user' },
                d = { displayName: i.display_name, id: i.token, organizationId: a, type: 'user' },
                h = this.host.models.User.get(l.id),
                p = {
                  action: (c =
                    (h && h.isRoleBot) || (o.metadata && 'role' === o.metadata.feature_service)
                      ? 'OPT_IN'
                      : d.id === l.id
                      ? 'JOIN'
                      : 'ADD'),
                  actionTime: t.action_time || t.created_on,
                  actor: l,
                  alwaysAddToTimeline: r,
                  createdAt: t.created_on,
                  group: u,
                  id: n,
                  members: [d],
                  memberIds: [d.id],
                  sortNumber: +t.sort_number,
                };
              this.host.conversations.addMembershipChangeLog(p),
                ('OPT_IN' != c && u.memberIds && u.memberIds.includes(d.id)) ||
                  (this.host.models.Group.touch(u), this.emit('membership:change', p));
            }
          }
        }),
        (Hl.prototype.__removedFromGroup = function (e) {
          var t = e.data,
            n = e.eventId,
            r = e.alwaysAddToTimeline,
            o = t.caller_entity,
            i = t.subject_entity,
            s = t.target_entity,
            a = t.organization_id,
            u = !1;
          if (o && o.token && s && s.token && i && i.token) {
            var c = this.host.models.Group.get(s.token);
            if (c) {
              if (
                t.reason &&
                ('leave_org' === t.reason || 'delete_account' === t.reason) &&
                (t.reason_subject_token || t.subject_entity.token)
              ) {
                u = !(r = !1);
                var l = t.reason_subject_token || t.subject_entity.token;
                this.host.models.User.inject({ id: l, removedFromOrg: !0 });
              }
              var d,
                h = { displayName: o.display_name, id: o.token, organizationId: a, type: 'user' },
                p = { displayName: i.display_name, id: i.token, organizationId: a, type: 'user' },
                f = this.host.models.User.get(h.id),
                v = {
                  action: (d =
                    (f && f.isRoleBot) || (o.metadata && 'role' === o.metadata.feature_service)
                      ? 'OPT_OUT'
                      : p.id === h.id
                      ? 'LEAVE'
                      : 'REMOVE'),
                  actionTime: t.action_time || t.created_on,
                  actor: h,
                  alwaysAddToTimeline: r,
                  createdAt: t.created_on,
                  group: c,
                  id: n,
                  members: [p],
                  memberIds: [p.id],
                  removedFromGroup: u,
                  sortNumber: +t.sort_number,
                };
              this.host.conversations.addMembershipChangeLog(v),
                ('OPT_OUT' != d && c.memberIds && !c.memberIds.includes(p.id)) ||
                  this.emit('membership:change', v);
            }
          }
        }),
        (Hl.prototype.__acceptedToTeam = function (e) {
          var t = e.data,
            n = e.eventId,
            r = e.alwaysAddToTimeline,
            o = t.caller_entity,
            i = t.subject_entity,
            s = t.target_entity,
            a = t.organization_id;
          if (o && o.token && s && s.token && i && i.token) {
            var u = this.host.models.Group.get(s.token);
            if (u) {
              var c = {
                  displayName: t.action_user_name,
                  id: t.action_user_id,
                  organizationId: a,
                  type: 'user',
                },
                l = { displayName: o.display_name, id: o.token, organizationId: a, type: 'user' },
                d = {
                  action: 'ADD',
                  actionTime: t.action_time || t.created_on,
                  actor: c,
                  alwaysAddToTimeline: r,
                  createdAt: t.created_on,
                  group: u,
                  id: n,
                  members: [l],
                  memberIds: [l.id],
                  sortNumber: +t.sort_number,
                };
              this.host.conversations.addMembershipChangeLog(d);
            }
          }
        }),
        (Hl.prototype.__deniedToTeam = function (e) {
          var t = e.data,
            n = e.eventId,
            r = e.alwaysAddToTimeline,
            o = t.caller_entity,
            i = t.subject_entity,
            s = t.target_entity,
            a = t.organization_id;
          if (o && o.token && s && s.token && i && i.token) {
            var u = this.host.models.Group.get(s.token);
            if (u) {
              var c = {
                  displayName: t.action_user_name,
                  id: t.action_user_id,
                  organizationId: a,
                  type: 'user',
                },
                l = { displayName: o.display_name, id: o.token, organizationId: a, type: 'user' },
                d = {
                  action: 'DENY',
                  actionTime: t.action_time || t.created_on,
                  actor: c,
                  alwaysAddToTimeline: r,
                  createdAt: t.created_on,
                  group: u,
                  id: n,
                  members: [l],
                  memberIds: [l.id],
                  sortNumber: +t.sort_number,
                };
              this.host.conversations.addMembershipChangeLog(d);
            }
          }
        }),
        (Hl.prototype.__handleEscalationBang = function (e) {
          var t = e.data,
            n = e.eventId,
            r = e.alwaysAddToTimeline,
            o = t.caller_entity,
            i = t.subject_entity,
            s = t.target_entity,
            a = t.organization_id;
          if (i.token && s.token) {
            var u = this.host.models.Group.get(s.token);
            u = u || this.host.models.Group.injectPlaceholder({ id: s.token, organizationId: a });
            var c = oi.resolve(t.event),
              l = this.host.models.EscalationExecution.get(i.token);
            l =
              (l = l || u.escalationExecution) ||
              (c === oi.MEMBER_ADDED
                ? null
                : this.host.models.EscalationExecution.inject({ id: i.token, organizationId: a }));
            var d = t.action_user_name,
              h = t.action_time || t.created_on,
              p = null,
              f = null;
            c === oi.INITIATED
              ? (p = { displayName: o.display_name, id: o.token, organizationId: a, type: 'user' })
              : c === oi.MEMBER_ADDED
              ? (f = [
                  { displayName: t.member_name, id: t.member_id, organizationId: a, type: 'user' },
                ])
              : c !== oi.NO_RESPONSE &&
                (p = { displayName: d, id: null, organizationId: a, type: 'user' });
            var v = {
              action: c,
              actionTime: h,
              actor: p,
              alwaysAddToTimeline: r,
              createdAt: t.created_on,
              escalationExecution: l,
              group: u,
              members: f,
              id: n,
              sortNumber: +t.sort_number,
            };
            this.host.conversations.addEscalationExecutionChangeLog(v);
          }
        }),
        (Hl.prototype._setMembership = function (e) {
          var t = this.host.currentUser.roles.reduce(function (e, t) {
            var n = t.botUserId;
            return n && (e[n] = !0), e;
          }, {});
          if (((e.hasCurrentUserOrRole = !1), e.memberIds))
            for (var n = 0, r = e.memberIds; n < r.length; n++) {
              var o = r[n];
              if (o === this.host.currentUserId || t[o]) return void (e.hasCurrentUserOrRole = !0);
            }
        }),
        nu([Object(Rs.decorator)()], Hl.prototype, 'find', null),
        nu([Object(Rs.decorator)()], Hl.prototype, '__find', null),
        nu([Object(Rs.decorator)()], Hl.prototype, '__ensureEntitiesLoaded', null),
        nu([Object(Rs.decorator)()], Hl.prototype, 'findAll', null),
        nu([Object(Rs.decorator)()], Hl.prototype, 'findAllWithSpecificMembers', null),
        nu([Object(Rs.decorator)()], Hl.prototype, 'findAllMemberIds', null),
        Hl),
      ll =
        ((Gu = function (e, t) {
          return (Gu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Gu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      dl = function () {
        return (dl =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      hl = ['escalationExecutionId', 'id', 'serverId'],
      pl = ['distributionList', 'group', 'user'],
      fl =
        (ll(Kl, (Fu = Ua)),
        (Kl.prototype.mounted = function () {
          (this._throttled_flushFindRecipientStatusesQueue = this.config
            .flushFindRecipientStatusInterval
            ? Wc()(
                this.__flushFindRecipientStatusesQueue,
                this.config.flushFindRecipientStatusInterval,
                { leading: !1 }
              )
            : this.__flushFindRecipientStatusesQueue),
            (this._throttled_flushSetMessageStatusesQueue = this.config
              .flushSetMessageStatusInterval
              ? Wc()(
                  this.__flushSetMessageStatusesQueue,
                  this.config.flushSetMessageStatusInterval,
                  { leading: !1 }
                )
              : this.__flushSetMessageStatusesQueue),
            (this._attachmentTokens = []),
            (this._pendingFindRecipientStatuses = {}),
            (this._queuedFindRecipientStatuses = []),
            (this._queuedSetMessageStatuses = { deliveredIds: [], readIds: [] }),
            this.host.on('tick', this._onTick),
            this.host.models.MessageStatusPerRecipient.on(
              'afterInject',
              this._onChangeMessageStatus
            ),
            this.host.models.MessageStatusPerRecipient.on(
              'afterEject',
              this._onChangeMessageStatus
            );
        }),
        (Kl.prototype.dispose = function () {
          (this._attachmentTokens = null),
            (this._pendingFindRecipientStatuses = null),
            (this._queuedFindRecipientStatuses = null),
            (this._queuedSetMessageStatuses = null),
            this._downloadAttachmentBlobAndUrl &&
              Rs.decorator.clear(this._downloadAttachmentBlobAndUrl),
            this.downloadAttachmentUrl && Rs.decorator.clear(this.downloadAttachmentUrl),
            this.downloadAttachment && Rs.decorator.clear(this.downloadAttachment),
            this._throttled_flushFindRecipientStatusesQueue.cancel &&
              this._throttled_flushFindRecipientStatusesQueue.cancel(),
            this._throttled_flushSetMessageStatusesQueue.cancel &&
              this._throttled_flushSetMessageStatusesQueue.cancel(),
            this.host.removeListener('tick', this._onTick),
            this.host.models.MessageStatusPerRecipient.removeListener(
              'afterInject',
              this._onChangeMessageStatus
            ),
            this.host.models.MessageStatusPerRecipient.removeListener(
              'afterEject',
              this._onChangeMessageStatus
            );
        }),
        (Kl.prototype.send = function (c, l, d) {
          return (
            void 0 === d && (d = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (this.config.condensedReplays)
                      throw new Error(
                        'the send() method has been deprecated in favor of sendToUser(), sendToGroup(), etc.'
                      );
                    return Array.isArray(c) ? [4, this.__resolveSender(d)] : [3, 2];
                  case 1:
                    return e.sent(), [2, this.sendToGroupOfUsers(c, l, d)];
                  case 2:
                    return [
                      4,
                      this.__resolveCounterPartyEntityAndOrganizationId(
                        c,
                        d.senderOrganizationId || d.organizationId
                      ),
                    ];
                  case 3:
                    return (
                      (t = e.sent()),
                      (n = t.counterParty),
                      (r = t.organizationId),
                      za.notEmpty('counterPartyId', n, 'counterPartyId not found'),
                      r
                        ? (d = dl(
                            dl(
                              {},
                              ee.a.omit(
                                d,
                                'organizationId',
                                'senderOrganizationId',
                                'recipientOrganizationId'
                              )
                            ),
                            { organizationId: r }
                          ))
                        : (r = d.organizationId),
                      [4, this.__resolveSender(d)]
                    );
                  case 4:
                    return (
                      (o = e.sent()),
                      (i = function (e) {
                        return e && 'user' === e.$entityType;
                      }),
                      (s = function (e) {
                        return i(e) && e.isRoleBot;
                      })(n) ||
                      (i(n) && s(o))
                        ? [2, this.sendToRole(c, l, d)]
                        : ((a = n.groupType),
                          (u = n.memberIds),
                          a !== si.FORUM || (u && u.includes(this.host.currentUserId))
                            ? [3, 6]
                            : [4, this.host.forums.join(n)])
                    );
                  case 5:
                    e.sent(), (e.label = 6);
                  case 6:
                    return [2, this.__sendToCounterParty(n, l, d)];
                }
              });
            })
          );
        }),
        (Kl.prototype.__resolveSender = function (o) {
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = this.__resolveSenderId(o)),
                    (n = o.senderOrganizationId || o.organizationId),
                    t === this.host.currentUserId
                      ? [2, this.host.currentUser]
                      : (n ||
                          za.raise(
                            'senderOrganizationId',
                            'missing',
                            'When senderId is provided, senderOrganizationId or organizationId must also be provided'
                          ),
                        [4, this.host.users.find(t, { organizationId: n })])
                  );
                case 1:
                  return (
                    (r = e.sent()) ||
                      za.raise('senderId', 'invalid', 'The provided senderId was not found'),
                    r.isRoleBot ||
                      za.raise(
                        'senderId',
                        'invalid',
                        'senderId must be either the current user or a role'
                      ),
                    [4, this.host.roles.find(t, n)]
                  );
                case 2:
                  return e.sent(), [2, r];
              }
            });
          });
        }),
        (Kl.prototype.__resolveSenderId = function (e) {
          void 0 === e && (e = {});
          var t = e.senderId;
          return (
            (t = t
              ? ((t = this._resolveModelId(t)), this.host.roles.__resolveRoleId(t))
              : this.host.currentUserId),
            (e.senderId = t)
          );
        }),
        (Kl.prototype.__resolveCounterPartyEntityAndOrganizationId = function (o, i) {
          return (
            void 0 === i && (i = null),
            au(this, void 0, void 0, function () {
              var t, n, r;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      'string' == typeof o && (o = this.host.roles.__resolveRoleId(o)),
                      (t = this._resolveEntity(o, lu(pl, ['conversation']))),
                      (n = i),
                      t
                        ? [3, 2]
                        : this.host.conversations.looksLikeConversationHandle(o)
                        ? [4, this.host.conversations.find(o)]
                        : [3, 2]
                    );
                  case 1:
                    (r = e.sent()) && ((t = r.counterParty), (n = r.organizationId)), (e.label = 2);
                  case 2:
                    return t ? [3, 4] : [4, this.__resolveRemoteCounterPartyEntity(o, n)];
                  case 3:
                    (t = e.sent()), (e.label = 4);
                  case 4:
                    return (
                      t &&
                        (t.organizationId && 'user' !== t.$entityType && (n = t.organizationId),
                        'conversation' === t.$entityType && (t = t.counterParty)),
                      [2, { counterParty: t, organizationId: n }]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.__resolveRemoteCounterPartyEntity = function (u, c) {
          return au(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a = this;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = null),
                    (u = this.host.roles.__resolveRoleId(u)),
                    (n = ee.a.compact([
                      function () {
                        return au(a, void 0, void 0, function () {
                          return uu(this, function (e) {
                            return [2, this.host.users.findOrCreate(u, { organizationId: c })];
                          });
                        });
                      },
                      function () {
                        return au(a, void 0, void 0, function () {
                          return uu(this, function (e) {
                            return [2, this.host.groups.find(u)];
                          });
                        });
                      },
                      function () {
                        return au(a, void 0, void 0, function () {
                          return uu(this, function (e) {
                            return [2, this.host.distributionLists.find(u)];
                          });
                        });
                      },
                    ])),
                    (r = 0),
                    (o = n),
                    (e.label = 1);
                case 1:
                  if (!(r < o.length)) return [3, 6];
                  (i = o[r]), (e.label = 2);
                case 2:
                  return e.trys.push([2, 4, , 5]), [4, i()];
                case 3:
                  return (t = e.sent()) ? [3, 6] : [3, 5];
                case 4:
                  if ((s = e.sent()).code !== G.CODE) throw s;
                  return [3, 5];
                case 5:
                  return r++, [3, 1];
                case 6:
                  return [2, t];
              }
            });
          });
        }),
        (Kl.prototype.__sendToCounterParty = function (h, p, e) {
          var f = e.organizationId,
            t = e.senderOrganizationId,
            v = void 0 === t ? f : t,
            n = e.recipientOrganizationId,
            y = void 0 === n ? v : n,
            g = cu(e, ['organizationId', 'senderOrganizationId', 'recipientOrganizationId']);
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = h.$entityType),
                    (n = h.serverId),
                    this.host.requireUser(),
                    za.oneOf('counterPartyType', t, ['user', 'group', 'distributionList']),
                    za.notEmpty('counterPartyId', n),
                    (v = this.__ensureOrganization(v)),
                    (y = y || v),
                    (g = this.__normalizeSendOptions(g, {
                      counterParty: h,
                      senderOrganizationId: v,
                    })),
                    (r = this.__createNewMessage(
                      h,
                      p,
                      dl(
                        { organizationId: f, senderOrganizationId: v, recipientOrganizationId: y },
                        g
                      )
                    )),
                    this.host.events.deferEventQueue(),
                    this.host.models.Message.inject(r),
                    this.host.emit('message:sending', r),
                    (o = g.attachmentFiles),
                    (i = g.deleteOnRead),
                    (s = g.escalate),
                    (a = g.metadata),
                    (u = g.priority),
                    (c = g.ttl),
                    (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 4, , 5]),
                    [
                      4,
                      this.host.api.messages.send({
                        attachment: ee.a.head(o),
                        body: p,
                        counterPartyId: n,
                        deleteOnRead: i,
                        escalate: s,
                        localId: r ? r.id : q.a.v4(),
                        metadata: a,
                        priority: ai.toServer(u),
                        recipientOrganizationId: y,
                        senderOrganizationId: v,
                        ttl: c,
                      }),
                    ]
                  );
                case 2:
                  return (l = e.sent()), [4, this.__retrieveSentMessage(l, { instance: r })];
                case 3:
                  return (r = e.sent()), this.host.emit('message:sent', r), [3, 5];
                case 4:
                  return (
                    (d = e.sent()),
                    this.logger.error('error while sending message', d),
                    (r.senderStatus = di.FAILED),
                    this.host.models.Message.inject(r),
                    [3, 5]
                  );
                case 5:
                  return this.host.events.resumeEventQueue(), [2, r];
              }
            });
          });
        }),
        (Kl.prototype.__createNewMessage = function (e, t, n) {
          var r,
            o = n.conversationId,
            i = n.isForwarded,
            s = void 0 !== i && i,
            a = n.organizationId,
            u = n.senderOrganizationId,
            c = void 0 === u ? a : u,
            l = n.recipientOrganizationId,
            d = void 0 === l ? c : l,
            h = cu(n, [
              'conversationId',
              'isForwarded',
              'organizationId',
              'senderOrganizationId',
              'recipientOrganizationId',
            ]),
            p = h.attachmentFiles,
            f = h.deleteOnRead,
            v = h.escalate,
            y = h.metadata,
            g = h.originalMetadata,
            m = h.priority,
            _ = h.senderId,
            b = h.ttl,
            w = e.$entityType,
            I = e.serverId;
          this.host.requireUser(),
            za.oneOf('counterPartyType', w, ['user', 'group', 'distributionList']),
            za.notEmpty('counterPartyId', I),
            o && (r = this.host.conversations.getById(o));
          var O = (r = r || this.host.conversations.ensureConversation(w, I, c)).isLive,
            T = this.__getNextSortNumber(c, { conversation: r }),
            E = _ && _ !== this.host.currentUserId ? _ : void 0,
            R = t;
          'distributionList' === w && (t = '[' + e.displayName + ']: ' + t);
          var A = this.host.models.Message.createInstance({
            $synced: !1,
            body: t,
            conversationId: r.id,
            counterPartyId: I,
            counterPartyType: w,
            createdAt: new Date(),
            currentSenderRoleId: E,
            deleteOnRead: f,
            id: q.a.v4(),
            inTimeline: O,
            isForwarded: s,
            isOutgoing: !0,
            messageType: pi.USER_SENT,
            metadata: y,
            originalMetadata: g,
            priority: m,
            recipientOrganizationId: d,
            senderId: this.host.currentUserId,
            senderOrganizationId: c,
            senderStatus: di.SENDING,
            shouldEscalate: v,
            sortNumber: T,
            ttl: b,
          });
          return (
            (A._originalBody = R),
            p && (A.attachments = p.map(this.__generateAttachmentDescriptor)),
            'group' === w
              ? (A.groupId = I)
              : 'user' === w
              ? (A.recipientId = I)
              : 'distributionList' === w && (A.distributionListId = I),
            this.config.condensedReplays || (A.markedRecipientStatus = li.READ),
            A
          );
        }),
        (Kl.prototype.__normalizeSendOptions = function (e, t) {
          var n = e.attachmentFile,
            r = e.attachmentFiles,
            o = e.deleteOnRead,
            i = e.escalate,
            s = e.metadata,
            a = e.originalMetadata,
            u = e.priority,
            c = e.senderId,
            l = e.ttl,
            d = t.counterParty,
            h = t.senderOrganizationId;
          (s = this.__normalizeMetadata({ metadata: s, organizationId: h, senderId: c })),
            (r = Na(r || n)),
            !ee.a.isEmpty(r) &&
              1 < r.length &&
              za.raise(
                'attachmentFiles',
                'invalid',
                'currently only a single attachment is supported'
              );
          var p = this.host.models.Organization.get(h);
          void 0 === l && (l = p ? p.messageTimeToLive : -1), !o && p && (o = p.deleteOnRead);
          var f = d.groupType,
            v = d.p2pRecipient;
          return (
            f === si.ROLE_P2P &&
              v &&
              v.escalationPolicy &&
              v.escalationPolicy.alwaysEscalate &&
              ((i = !0), (u = ai.NORMAL)),
            {
              attachmentFiles: r,
              deleteOnRead: o,
              escalate: i,
              metadata: s,
              originalMetadata: a,
              priority: u,
              senderId: c,
              ttl: l,
            }
          );
        }),
        (Kl.prototype.__ensureOrganization = function (e) {
          return (
            e ||
            (this.host.config.defaultOrganizationId
              ? this.host.config.defaultOrganizationId
              : void za.raise(
                  'organizationId',
                  'required',
                  'Message is sent in the context of an organization. Provide `organizationId` or set a default one with client.setDefaultOrganization(...)'
                ))
          );
        }),
        (Kl.prototype.__normalizeMetadata = function (e) {
          var t = e.metadata,
            n = (e.organizationId, e.senderId);
          if (((t = Na((t = t || []))), n !== this.host.currentUserId)) {
            var r = this.host.roles.getById(n),
              o = r.roleTag;
            t.push({
              namespace: 'tigertext:message:role:sender',
              payload: {
                token: n,
                display_name: r.displayName,
                tag_id: o ? o.tagId : '',
                tag_color: o ? o.color.replace('#', '0x') : '',
                tag_name: o ? o.name : '',
              },
            });
          }
          return 0 < t.length
            ? t.map(function (e) {
                return dl({ mimetype: 'application/json' }, e);
              })
            : void 0;
        }),
        (Kl.prototype.__getNextSortNumber = function (e, t) {
          var n = (void 0 === t ? {} : t).conversation,
            r = this.host.models.Organization.get(e);
          r && !n && (n = r.conversations[0]);
          var o = (r && r.highestSortNumber) || 0,
            i = (n && n.lastBangMessageSortNumber) || 0;
          return Math.max(o, i) + 1;
        }),
        (Kl.prototype.previewMessage = function (e, t) {
          void 0 === t && (t = {});
          for (
            var n = this._resolveMessage(e), r = {}, o = 0, i = Object.entries(n);
            o < i.length;
            o++
          ) {
            var s = i[o],
              a = s[0],
              u = s[1];
            Ea(n, a) && !hl.includes(a) && (r[a] = u);
          }
          (r = dl(dl(dl({}, r), { id: q.a.v4(), conversationId: null }), t)),
            this.__setForwardedMessageProperties({
              origMessage: n,
              organizationId: n.__organizationId,
              message: r,
            });
          for (
            var c = this.host.models.Message.inject(r), l = 0, d = n.statusesPerRecipient;
            l < d.length;
            l++
          ) {
            var h = d[l],
              p = h.userId || h.distributionListId,
              f = c.id + ':' + p;
            this.host.models.MessageStatusPerRecipient.inject(
              dl(dl({}, h), { id: f, messageId: c.id })
            );
          }
          return c;
        }),
        (Kl.prototype.endPreviewMessage = function (e) {
          var t = this._resolveMessage(e);
          if (t) {
            for (var n = 0, r = t.statusesPerRecipient; n < r.length; n++) {
              var o = r[n];
              this.host.models.MessageStatusPerRecipient.eject(o);
            }
            this.host.models.Message.eject(t);
          }
        }),
        (Kl.prototype.sendToUser = function (p, f, v) {
          return (
            void 0 === v && (v = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u, c, l, d, h;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!this.host.config.condensedReplays) return [2, this.send(p, f, v)];
                    if (
                      ((t = v.organizationId),
                      (n = v.senderId),
                      (r = void 0 === n ? this.host.currentUserId : n),
                      (o = v.groupName),
                      (i = v.groupMetadata),
                      !t)
                    )
                      throw new Error('organizationId is required');
                    return (
                      (p = this._resolveModelIdWithTypes(p, 'user')),
                      (s = this._resolveEntity(p, 'user')) &&
                      s.profileByOrganizationId &&
                      s.profileByOrganizationId[t]
                        ? [3, 2]
                        : [4, this.host.users.findOrCreate(p, { organizationId: t })]
                    );
                  case 1:
                    (s = e.sent()), (e.label = 2);
                  case 2:
                    return [4, this.__resolveRoleBotId(r, t)];
                  case 3:
                    return (
                      (a = e.sent()),
                      (u = a.isRole),
                      (c = a.roleBotId),
                      u ? [4, this.__prepareRoleP2PGroup(t, p, c, o, { groupMetadata: i })] : [3, 5]
                    );
                  case 4:
                    return (
                      (l = e.sent()),
                      [2, this.sendToGroup(l, f, dl(dl({}, v), { organizationId: t, senderId: r }))]
                    );
                  case 5:
                    if (((d = s && s.profileByOrganizationId[t]), !(h = d && d.conversationId)))
                      throw new Error('conversationId not found for p2p message');
                    return (
                      this.host.conversations.getById(h) ||
                        this.host.models.Conversation.inject({
                          counterPartyId: s.id,
                          counterPartyType: s.$entityType,
                          id: h,
                          organizationId: t,
                        }),
                      [2, this.sendToConversation(h, f, v)]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.sendToGroup = function (n, r, o) {
          return (
            void 0 === o && (o = {}),
            au(this, void 0, void 0, function () {
              var t;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return this.config.condensedReplays
                      ? ((n = this._resolveModelId(n)),
                        (t = this._resolveEntity(n, 'group'))
                          ? [3, 2]
                          : [4, this.host.groups.find(n)])
                      : [2, this.send(n, r, o)];
                  case 1:
                    (t = e.sent()), (e.label = 2);
                  case 2:
                    if (!t || !t.conversationId) throw new Error('group conversationId not found');
                    return (
                      this.host.conversations.getById(t.conversationId) ||
                        this.host.models.Conversation.inject({
                          counterPartyId: t.id,
                          counterPartyType: t.$entityType,
                          id: t.conversationId,
                          organizationId: t.organizationId,
                        }),
                      [2, this.sendToConversation(t.conversationId, r, o)]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.sendToRole = function (l, d, h) {
          return (
            void 0 === h && (h = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u, c;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (
                      ((t = h.organizationId),
                      (n = h.senderId),
                      (r = void 0 === n ? this.host.currentUserId : n),
                      (o = h.groupMetadata),
                      (i = h.groupName),
                      !this.host.config.condensedReplays)
                    )
                      return [3, 2];
                    if (!t) throw new Error('organizationId is required');
                    return [4, this.__resolveRoleBotId(l, t)];
                  case 1:
                    if (((s = e.sent()), (a = s.isRole), (u = s.roleBotId), !a))
                      throw new Error('recipient must be a role');
                    (l = u), (e.label = 2);
                  case 2:
                    return [4, this.__prepareRoleP2PGroup(t, l, r, i, { groupMetadata: o })];
                  case 3:
                    return (
                      (c = e.sent()),
                      [2, this.sendToGroup(c, d, dl(dl({}, h), { organizationId: t, senderId: r }))]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.sendToPatient = function (c, l, d) {
          return (
            void 0 === d && (d = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (
                      (d.groupMetadata,
                      (t = d.organizationId),
                      (n = d.senderId),
                      (r = void 0 === n ? this.host.currentUserId : n),
                      (o = cu(d, ['groupMetadata', 'organizationId', 'senderId'])),
                      (d = dl(dl({}, o), { organizationId: t, senderId: r })),
                      this.host.config.condensedReplays && !t)
                    )
                      throw new Error('organizationId is required');
                    if (
                      ((i = c && 1 === c.length ? c[0] : c), !(a = this._resolveEntity(i, 'user')))
                    )
                      throw new Error('user could not be resolved');
                    return (
                      (s = a.isPatientContact
                        ? this.host.patients._createPatientContactGroupMetadata(a)
                        : this.host.patients._createPatientGroupMetadata(a)),
                      [
                        4,
                        this.host.groups.createPatientGroup({
                          organizationId: t,
                          recipientId: c,
                          senderId: r,
                          metadata: s,
                        }),
                      ]
                    );
                  case 1:
                    return (
                      (u = e.sent()),
                      this.host.metadata.__injectMetadata(u.id, t, s),
                      [2, this.sendToGroup(u, l, dl(dl({}, d), { organizationId: t, senderId: r }))]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.__resolveRoleBotId = function (o, i) {
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  o = this.host.roles.__resolveRoleId(o);
                  try {
                    (n = this._resolveModelIdWithTypes(o, 'role')),
                      (t = !!this._resolveEntity(n, 'role'));
                  } catch (e) {
                    t = !1;
                  }
                  return t
                    ? [3, 3]
                    : (r = this._resolveEntity(o, 'user')) &&
                      r.profileByOrganizationId &&
                      r.profileByOrganizationId[i]
                    ? [3, 2]
                    : [4, this.host.users.find(o, { organizationId: i })];
                case 1:
                  (r = e.sent()), (e.label = 2);
                case 2:
                  r && r.isRoleBot && (t = !0), (e.label = 3);
                case 3:
                  return [2, { isRole: t, roleBotId: o }];
              }
            });
          });
        }),
        (Kl.prototype.sendToConversation = function (w, I, O) {
          return (
            void 0 === O && (O = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _, b;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!this.host.config.condensedReplays) return [2, this.send(w, I, O)];
                    if (
                      ((w = this._resolveModelIdWithTypes(w, 'conversation')),
                      !(t = this.host.conversations.getById(w)))
                    )
                      throw new G(this.host.models.Conversation.name, w);
                    return [4, this.__resolveSender(O)];
                  case 1:
                    return (
                      (n = e.sent()),
                      (r = t.counterPartyId),
                      (o = t.counterPartyType),
                      (i = t.organizationId),
                      (s = this._resolveEntity(r, o)),
                      this.host.requireUser(),
                      (a = s.groupType),
                      (u = s.memberIds),
                      a !== si.FORUM || (u && u.includes(this.host.currentUserId))
                        ? [3, 3]
                        : [4, this.host.forums.join(s)]
                    );
                  case 2:
                    e.sent(), (e.label = 3);
                  case 3:
                    (l = c = i),
                      (O = this.__normalizeSendOptions(O, {
                        counterParty: s,
                        senderOrganizationId: c,
                        senderId: n.id,
                      })),
                      (d = this.__createNewMessage(
                        s,
                        I,
                        dl(
                          {
                            conversationId: w,
                            organizationId: i,
                            senderOrganizationId: c,
                            recipientOrganizationId: l,
                          },
                          O
                        )
                      )),
                      this.host.events.deferEventQueue(),
                      this.host.models.Message.inject(d),
                      this.host.emit('message:sending', d),
                      (h = O.attachmentFiles),
                      (p = O.deleteOnRead),
                      (f = O.escalate),
                      (v = O.metadata),
                      (y = O.priority),
                      (g = O.ttl),
                      (e.label = 4);
                  case 4:
                    return (
                      e.trys.push([4, 7, , 8]),
                      [
                        4,
                        this.host.api.messages.send({
                          attachment: ee.a.head(h),
                          body: I,
                          conversationId: t.id,
                          deleteOnRead: p,
                          escalate: f,
                          localId: d ? d.id : q.a.v4(),
                          metadata: v,
                          priority: ai.toServer(y),
                          senderOrganizationId: c,
                          ttl: g,
                        }),
                      ]
                    );
                  case 5:
                    return (
                      (m = e.sent()),
                      (_ = m.last_message ? m.last_message : m),
                      [4, this.__retrieveSentMessage(_, { instance: d })]
                    );
                  case 6:
                    return (
                      (d = e.sent()).unreadMessageCount && (t.unreadCount = d.unreadMessageCount),
                      d.unreadPriorityMessageCount &&
                        (t.unreadPriorityCount = d.unreadPriorityMessageCount),
                      (t.lastMessage = d),
                      (t.highestSortNumber = d.sortNumber
                        ? d.sortNumber
                        : this.__getNextSortNumber(c, { conversation: t })),
                      (t.isLive = !0),
                      t.timeline.push(d),
                      this.host.models.Conversation.inject(t),
                      (d.inTimeline = !0),
                      this.host.models.Message.inject(d),
                      this.host.emit('message:sent', d),
                      [3, 8]
                    );
                  case 7:
                    return (
                      (b = e.sent()),
                      this.logger.error('error while sending message', b),
                      (d.senderStatus = di.FAILED),
                      this.host.models.Message.inject(d),
                      [3, 8]
                    );
                  case 8:
                    return this.host.events.resumeEventQueue(), [2, d];
                }
              });
            })
          );
        }),
        (Kl.prototype.sendToDistributionList = function (r, o, i) {
          return (
            void 0 === i && (i = {}),
            au(this, void 0, void 0, function () {
              var t, n;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return this.config.condensedReplays
                      ? ((r = this._resolveModelIdWithTypes(r, 'distributionList')),
                        (t = this._resolveEntity(r, 'distributionList'))
                          ? [3, 2]
                          : [4, this.host.distributionLists.find(r)])
                      : [2, this.send(r, o, i)];
                  case 1:
                    (t = e.sent()), (e.label = 2);
                  case 2:
                    if (!t || !t.conversationId)
                      throw new Error('distributionList conversationId not found');
                    return (
                      (n = this.host.conversations.getById(t.conversationId)) ||
                        (n = this.host.models.Conversation.inject({
                          counterPartyId: t.id,
                          counterPartyType: t.$entityType,
                          id: t.conversationId,
                          organizationId: t.organizationId,
                        })),
                      [2, this.sendToConversation(n.id, o, i)]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.sendToGroupOfUsers = function (r, o, e) {
          void 0 === e && (e = {});
          var i = e.groupMetadata,
            s = e.groupName,
            a = e.isTeamActivation,
            u = e.organizationId,
            c = e.senderId,
            l = cu(e, [
              'groupMetadata',
              'groupName',
              'isTeamActivation',
              'organizationId',
              'senderId',
            ]);
          return au(this, void 0, void 0, function () {
            var t, n;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.__prepareGroupForUsers(u, r, c, s, a, { groupMetadata: i })];
                case 1:
                  return (
                    (t = e.sent()),
                    this.config.condensedReplays
                      ? ((n = t.conversationId), [4, this.host.conversations.find(n)])
                      : [3, 3]
                  );
                case 2:
                  return (
                    e.sent(),
                    [
                      2,
                      this.sendToConversation(
                        n,
                        o,
                        dl(dl({}, l), { organizationId: u, senderId: c })
                      ),
                    ]
                  );
                case 3:
                  return [
                    2,
                    this.sendToGroup(t, o, dl(dl({}, l), { organizationId: u, senderId: c })),
                  ];
              }
            });
          });
        }),
        (Kl.prototype.__prepareGroupForUsers = function (e, t, n, r, o, i) {
          var s = (void 0 === i ? {} : i).groupMetadata;
          return (
            0 === t.length && za.raise('memberIds', 'required'),
            this.host.groups.create({
              isTeamActivation: o,
              memberIds: t,
              metadata: s,
              name: r,
              organizationId: e,
              senderId: n,
            })
          );
        }),
        (Kl.prototype.__prepareRoleP2PGroup = function (n, r, o, i, e) {
          var s = (void 0 === e ? {} : e).groupMetadata;
          return au(this, void 0, void 0, function () {
            var t;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (t = this.host.conversations.findLocalRoleP2PConversation(r, o))
                    ? [2, t.counterParty]
                    : [
                        4,
                        this.host.roles.createP2PGroup({
                          metadata: s,
                          name: i,
                          organizationId: n,
                          recipientId: r,
                          senderId: o,
                        }),
                      ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Kl.prototype.recall = function (r) {
          return au(this, void 0, void 0, function () {
            var t, n;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (t = Na(r).filter(Boolean)),
                    (n = t.map(this.__recallSingle.bind(this))),
                    [4, Promise.all(n)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Kl.prototype.__recallSingle = function (n) {
          return au(this, void 0, void 0, function () {
            var t;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveMessage(n))) return [3, 4];
                  if (t.senderId !== this.host.currentUserId) throw new X(t, t.serverId, 'recall');
                  return !1 !== t.$synced && t.serverId
                    ? [3, 1]
                    : (this.host.models.Message.eject(t), [3, 3]);
                case 1:
                  return [4, this.host.api.messages.destroy(t.serverId)];
                case 2:
                  e.sent(), this.host.models.Message.eject(t), (e.label = 3);
                case 3:
                  return [3, 6];
                case 4:
                  return [4, this.host.api.messages.destroy(n)];
                case 5:
                  e.sent(), (e.label = 6);
                case 6:
                  return [2];
              }
            });
          });
        }),
        (Kl.prototype.retrySend = function (o) {
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !(t = this._resolveMessage(o))))
                    throw new G(this.host.models.Message.name, o);
                  return (
                    (n = t.isForwarded),
                    t.senderStatus !== di.FAILED &&
                      za.raise(
                        'message',
                        'invalid',
                        'Message to retry must be in a FAILED senderStatus and sent from current user'
                      ),
                    this.host.events.deferEventQueue(),
                    (t.senderStatus = di.RETRYING),
                    this.host.models.Message.inject(t),
                    this.host.emit('message:sending', t),
                    n ? [4, this.__retryApiForward(t)] : [3, 2]
                  );
                case 1:
                  return (t = e.sent()), [3, 4];
                case 2:
                  return [4, this.__retryApiSend(t)];
                case 3:
                  (t = e.sent()), (e.label = 4);
                case 4:
                  return (
                    this.config.condensedReplays &&
                      ((r = this.host.conversations.getById(t.conversationId)),
                      t.unreadMessageCount && (r.unreadCount = t.unreadMessageCount),
                      t.unreadPriorityMessageCount &&
                        (r.unreadPriorityCount = t.unreadPriorityMessageCount),
                      (r.lastMessage = t),
                      (r.highestSortNumber = t.sortNumber),
                      this.host.models.Conversation.inject(r)),
                    this.host.events.resumeEventQueue(),
                    [2, t]
                  );
              }
            });
          });
        }),
        (Kl.prototype.resend = function (m, e) {
          var t = void 0 === e ? {} : e,
            _ = t.priority,
            n = t.retrieveMessage,
            b = void 0 !== n && n,
            w = t.senderId;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = this._resolveMessage(m)),
                    void 0 === _ && (_ = t.priority),
                    void 0 === w && (w = t.senderId),
                    (n = t.attachments),
                    (r = t.body),
                    (o = t.conversationId),
                    (i = t.counterParty),
                    (s = t.counterPartyId),
                    (a = t.deleteOnRead),
                    (u = t.isForwarded),
                    (c = t.metadata),
                    (l = t.originalMessageId),
                    (d = t.recipientOrganizationId),
                    (h = t.ttl),
                    u
                      ? this.config.condensedReplays
                        ? [2, this.forwardToConversation(l, o, { organizationId: d, priority: _ })]
                        : [
                            2,
                            this.forward(l, s, {
                              organizationId: d,
                              priority: _,
                              retrieveMessage: b,
                              senderId: w,
                            }),
                          ]
                      : [3, 1]
                  );
                case 1:
                  if (
                    ((p = []),
                    (c = c.filter(function (e) {
                      return 'tigertext:message:role:sender' !== e.namespace;
                    })),
                    !n)
                  )
                    return [3, 5];
                  (f = 0), (v = n), (e.label = 2);
                case 2:
                  return f < v.length
                    ? ((y = v[f]), [4, this._downloadAttachmentBlobAndUrl(m, y.id)])
                    : [3, 5];
                case 3:
                  ((g = e.sent().blob).name = y.name), p.push(g), (e.label = 4);
                case 4:
                  return f++, [3, 2];
                case 5:
                  return this.config.condensedReplays
                    ? [
                        2,
                        this.sendToConversation(o, r, {
                          attachmentFiles: p,
                          deleteOnRead: a,
                          organizationId: d,
                          priority: _,
                          metadata: c,
                          senderId: w,
                          ttl: h,
                        }),
                      ]
                    : [
                        2,
                        this.__sendToCounterParty(i, r, {
                          attachmentFiles: p,
                          deleteOnRead: a,
                          organizationId: d,
                          priority: _,
                          senderId: w,
                          metadata: c,
                          ttl: h,
                        }),
                      ];
              }
            });
          });
        }),
        (Kl.prototype.forwardToConversation = function (I, O, T) {
          return (
            void 0 === T && (T = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _, b, w;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!this.config.condensedReplays) return [2, this.forward(I, O, T)];
                    if (
                      ((t = T.metadata),
                      (n = void 0 === t ? [] : t),
                      (r = T.priority),
                      (o = T.senderId),
                      (i = void 0 === o ? this.host.currentUserId : o),
                      !(s = this.host.conversations.getById(O)))
                    )
                      throw new Error('conversation not found');
                    if ((this.host.requireUser(), !(a = this._resolveMessage(I))))
                      throw new G(this.host.models.Message.name, I);
                    if (((u = a.attachments), (c = a.body), !(l = a.serverId)))
                      throw new Error('original message was not sent');
                    (i = this.__resolveSenderId({ senderId: i })),
                      void 0 === r && (r = a.priority),
                      (d = s.counterPartyId),
                      (h = s.counterPartyType),
                      (p = s.organizationId),
                      (f = this._resolveEntity(d, h)),
                      (v = p),
                      (y = ee.a.get(a, 'originalMetadata')),
                      (g = { metadata: n, priority: r, senderId: i, originalMetadata: y }),
                      (g = this.__normalizeSendOptions(g, {
                        counterParty: f,
                        senderOrganizationId: v,
                      })),
                      (n = g.metadata),
                      ((m = this.__createNewMessage(
                        f,
                        c,
                        dl({ conversationId: O, organizationId: p, isForwarded: !0 }, g)
                      )).attachments = u),
                      this.__setForwardedMessageProperties({
                        origMessage: a,
                        organizationId: p,
                        message: m,
                      }),
                      this.host.events.deferEventQueue(),
                      this.host.models.Message.inject(m),
                      this.host.emit('message:sending', m),
                      (e.label = 1);
                  case 1:
                    return (
                      e.trys.push([1, 4, , 5]),
                      [
                        4,
                        this.host.api.messages.forward(l, null, {
                          conversationId: O,
                          localId: m.id,
                          metadata: n,
                          priority: ai.toServer(r),
                        }),
                      ]
                    );
                  case 2:
                    return (
                      (_ = e.sent()), [4, this.__retrieveSentMessage(_.message, { instance: m })]
                    );
                  case 3:
                    return (
                      (b = e.sent()).unreadMessageCount && (s.unreadCount = b.unreadMessageCount),
                      b.unreadPriorityMessageCount &&
                        (s.unreadPriorityCount = b.unreadPriorityMessageCount),
                      this.host.models.Conversation.inject(s),
                      this.host.emit('message:sent', b),
                      [3, 5]
                    );
                  case 4:
                    return (
                      (w = e.sent()),
                      this.logger.error('error while forwarding message', w),
                      (m.senderStatus = di.FAILED),
                      this.host.models.Message.inject(m),
                      [3, 5]
                    );
                  case 5:
                    return this.host.events.resumeEventQueue(), [2, m];
                }
              });
            })
          );
        }),
        (Kl.prototype.forwardToUser = function (v, y) {
          for (var g = [], e = 2; e < arguments.length; e++) g[e - 2] = arguments[e];
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!this.config.condensedReplays)
                    return [2, this.forward.apply(this, lu([v, y], g))];
                  if (
                    ((t = g[0]),
                    (r = (n = void 0 === t ? {} : t).organizationId),
                    (o = n.senderId),
                    (i = void 0 === o ? this.host.currentUserId : o),
                    (s = n.groupName),
                    (a = n.groupMetadata),
                    !r)
                  )
                    throw new Error('organizationId is required');
                  return (
                    (y = this._resolveModelIdWithTypes(y, 'user')),
                    (u = this._resolveEntity(y, 'user')) &&
                    u.profileByOrganizationId &&
                    u.profileByOrganizationId[r]
                      ? [3, 2]
                      : [4, this.host.users.find(y, { organizationId: r })]
                  );
                case 1:
                  (u = e.sent()), (e.label = 2);
                case 2:
                  return [4, this.__resolveRoleBotId(i, r)];
                case 3:
                  return (
                    (c = e.sent()),
                    (l = c.isRole),
                    (d = c.roleBotId),
                    l ? [4, this.__prepareRoleP2PGroup(r, y, d, s, { groupMetadata: a })] : [3, 5]
                  );
                case 4:
                  return (
                    (h = e.sent()),
                    [
                      2,
                      this.forwardToGroup(v, h, dl(dl({}, n), { organizationId: r, senderId: i })),
                    ]
                  );
                case 5:
                  if (((p = u && u.profileByOrganizationId[r]), !(f = p && p.conversationId)))
                    throw new Error('conversationId not found for p2p message');
                  return (
                    this.host.conversations.getById(f) ||
                      this.host.models.Conversation.inject({
                        counterPartyId: u.id,
                        counterPartyType: u.$entityType,
                        id: f,
                        organizationId: r,
                      }),
                    [2, this.forwardToConversation.apply(this, lu([v, f], g))]
                  );
              }
            });
          });
        }),
        (Kl.prototype.forwardToGroup = function (n, r) {
          for (var o = [], e = 2; e < arguments.length; e++) o[e - 2] = arguments[e];
          return au(this, void 0, void 0, function () {
            var t;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.config.condensedReplays
                    ? ((r = this._resolveModelId(r)),
                      (t = this._resolveEntity(r, 'group'))
                        ? [3, 2]
                        : [4, this.host.groups.find(r)])
                    : [2, this.forward.apply(this, lu([n, r], o))];
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  if (!t || !t.conversationId) throw new Error('group ' + r + ' not found');
                  return (
                    this.host.conversations.getById(t.conversationId) ||
                      this.host.models.Conversation.inject({
                        counterPartyId: t.id,
                        counterPartyType: t.$entityType,
                        id: t.conversationId,
                        organizationId: t.organizationId,
                      }),
                    [2, this.forwardToConversation.apply(this, lu([n, t.conversationId], o))]
                  );
              }
            });
          });
        }),
        (Kl.prototype.forwardToDistributionList = function (n, r, o) {
          return (
            void 0 === o && (o = {}),
            au(this, void 0, void 0, function () {
              var t;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return this.config.condensedReplays
                      ? ((r = this._resolveModelId(r)),
                        (t = this._resolveEntity(r, 'distributionList'))
                          ? [3, 2]
                          : [4, this.host.distributionLists.find(r)])
                      : [2, this.forward(n, r, o)];
                  case 1:
                    (t = e.sent()), (e.label = 2);
                  case 2:
                    if (!t || !t.conversationId)
                      throw new Error('distributionList ' + r + ' not found');
                    return (
                      this.host.conversations.getById(t.conversationId) ||
                        this.host.models.Conversation.inject({
                          counterPartyId: t.id,
                          counterPartyType: t.$entityType,
                          id: t.conversationId,
                          organizationId: t.organizationId,
                        }),
                      [2, this.forwardToConversation(n, t.conversationId, o)]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.forwardToGroupOfUsers = function (r, o, e) {
          void 0 === e && (e = {});
          var i = e.groupMetadata,
            s = e.groupName,
            a = e.organizationId,
            u = e.senderId,
            c = cu(e, ['groupMetadata', 'groupName', 'organizationId', 'senderId']);
          return au(this, void 0, void 0, function () {
            var t, n;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.__prepareGroupForUsers(a, o, u, s, !1, { groupMetadata: i })];
                case 1:
                  return (
                    (t = e.sent()),
                    this.config.condensedReplays
                      ? ((n = t.conversationId), [4, this.host.conversations.find(n)])
                      : [3, 3]
                  );
                case 2:
                  return (
                    e.sent(),
                    [
                      2,
                      this.forwardToConversation(
                        r,
                        n,
                        dl(dl({}, c), { organizationId: a, senderId: u })
                      ),
                    ]
                  );
                case 3:
                  return [
                    2,
                    this.forwardToGroup(r, t, dl(dl({}, c), { organizationId: a, senderId: u })),
                  ];
              }
            });
          });
        }),
        (Kl.prototype.forwardToRole = function (l, d, h) {
          return (
            void 0 === h && (h = {}),
            au(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u, c;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (
                      ((t = h.organizationId),
                      (n = h.senderId),
                      (r = void 0 === n ? this.host.currentUserId : n),
                      (o = h.groupMetadata),
                      (i = h.groupName),
                      !this.host.config.condensedReplays)
                    )
                      return [3, 2];
                    if (!t) throw new Error('organizationId is required');
                    return [4, this.__resolveRoleBotId(d, t)];
                  case 1:
                    if (((s = e.sent()), (a = s.isRole), (u = s.roleBotId), !a))
                      throw new Error('recipient must be a role');
                    (d = u), (e.label = 2);
                  case 2:
                    return [4, this.__prepareRoleP2PGroup(t, d, r, i, { groupMetadata: o })];
                  case 3:
                    return (
                      (c = e.sent()),
                      [
                        2,
                        this.forwardToGroup(
                          l,
                          c.id,
                          dl(dl({}, h), { organizationId: t, senderId: r })
                        ),
                      ]
                    );
                }
              });
            })
          );
        }),
        (Kl.prototype.forward = function (b, w, e) {
          var t = void 0 === e ? {} : e,
            I = t.organizationId,
            n = t.senderOrganizationId,
            O = void 0 === n ? I : n,
            r = t.recipientOrganizationId,
            T = void 0 === r ? O : r,
            E = t.groupMetadata,
            R = t.groupName,
            o = t.metadata,
            A = void 0 === o ? [] : o,
            C = (t.preferExistingGroup, t.priority),
            i = t.retrieveMessage,
            S = void 0 !== i && i,
            s = t.senderId,
            P = void 0 === s ? this.host.currentUserId : s;
          return au(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              d,
              h,
              p,
              f,
              v,
              y,
              g,
              m,
              _ = this;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (this.config.condensedReplays)
                    throw new Error(
                      'the forward() method has been deprecated in favor of forwardToUser(), forwardToGroup(), etc.'
                    );
                  if ((this.host.requireUser(), !(t = this._resolveMessage(b))))
                    throw new G(this.host.models.Message.name, b);
                  if (((n = t.attachments), (r = t.body), !(o = t.serverId)))
                    throw new Error('original message was not sent');
                  return (
                    (P = this.__resolveSenderId({ senderId: P })),
                    Array.isArray(w)
                      ? ((i = w.map(function (e) {
                          return _._resolveModelIdWithTypes(e, ['user', 'role']);
                        })),
                        [4, this.__prepareGroupForUsers(I, i, P, R, !1, { groupMetadata: E })])
                      : [3, 2]
                  );
                case 1:
                  (p = e.sent()), (w = p.id), (e.label = 2);
                case 2:
                  return (
                    void 0 === C && (C = t.priority),
                    [4, this.__resolveCounterPartyEntityAndOrganizationId(w, O)]
                  );
                case 3:
                  return (
                    (s = e.sent()),
                    (a = s.counterParty),
                    (u = s.organizationId) && (O = T = u),
                    (T = T || O),
                    a && (w = a.serverId),
                    [
                      4,
                      this.__resolveSender({
                        organizationId: I,
                        senderId: P,
                        senderOrganizationId: O,
                      }),
                    ]
                  );
                case 4:
                  return (
                    (c = e.sent()),
                    (l = function (e) {
                      return e && 'user' === e.$entityType;
                    }),
                    (d = function (e) {
                      return l(e) && e.isRoleBot;
                    }),
                    (h = ee.a.get(t, 'originalMetadata')),
                    d(a) || (l(a) && d(c))
                      ? [4, this.__prepareRoleP2PGroup(I, a.id, P, R, { groupMetadata: E })]
                      : [3, 6]
                  );
                case 5:
                  (p = e.sent()), (w = (a = p).id), (e.label = 6);
                case 6:
                  za.notEmpty('entityId', w, 'entityId not found'),
                    (f = { metadata: A, priority: C, senderId: P, originalMetadata: h }),
                    (f = this.__normalizeSendOptions(f, {
                      counterParty: a,
                      senderOrganizationId: O,
                    })),
                    (A = f.metadata),
                    ((v = this.__createNewMessage(
                      a,
                      r,
                      dl(
                        {
                          organizationId: I,
                          senderOrganizationId: O,
                          recipientOrganizationId: T,
                          isForwarded: !0,
                        },
                        f
                      )
                    )).attachments = n),
                    this.__setForwardedMessageProperties({
                      origMessage: t,
                      organizationId: I,
                      message: v,
                    }),
                    this.host.events.deferEventQueue(),
                    this.host.models.Message.inject(v),
                    this.host.emit('message:sending', v),
                    (e.label = 7);
                case 7:
                  return (
                    e.trys.push([7, 12, , 13]),
                    [
                      4,
                      this.host.api.messages.forward(o, w, {
                        localId: v.id,
                        metadata: A,
                        priority: ai.toServer(C),
                        recipientOrganizationId: T,
                        senderOrganizationId: O,
                      }),
                    ]
                  );
                case 8:
                  return (
                    (y = e.sent()),
                    (g = y.message_id),
                    S ? [4, this.find(g, { instance: v, replace: !0 })] : [3, 10]
                  );
                case 9:
                  return (v = e.sent()), [3, 11];
                case 10:
                  (v.senderStatus = di.SENT),
                    (v.serverId = g),
                    (v.$synced = void 0),
                    this.host.models.Message.inject(v),
                    (e.label = 11);
                case 11:
                  return this.host.emit('message:sent', v), [3, 13];
                case 12:
                  return (
                    (m = e.sent()),
                    this.logger.error('error while forwarding message', m),
                    (v.senderStatus = di.FAILED),
                    this.host.models.Message.inject(v),
                    [3, 13]
                  );
                case 13:
                  return this.host.events.resumeEventQueue(), [2, v];
              }
            });
          });
        }),
        (Kl.prototype.__setForwardedMessageProperties = function (e) {
          var t = e.origMessage,
            n = e.organizationId,
            r = e.message,
            o = t.createdAt,
            i = t.currentSenderRole,
            s = t.originalForwardedMessageCreatedAt,
            a = t.originalMessageId,
            u = t.originalSender,
            c = t.originalSenderRole,
            l = t.sender,
            d = t.senderRole,
            h = t.serverId,
            p = t.subType;
          return (
            r.originalForwardedMessageCreatedAt || (r.originalForwardedMessageCreatedAt = s || o),
            r.originalMessageId || (r.originalMessageId = a || h),
            r.originalSender
              ? (r.originalSender = u)
              : l &&
                (r.originalSender = { displayName: l.displayName, id: l.id, organizationId: n }),
            r.originalSenderRole ||
              (p === hi.ROLE_AWAY_NOTIFICATION && i
                ? (r.originalSenderRole = {
                    $entityType: 'role',
                    botUserId: i.botUserId,
                    displayName: i.displayName,
                    id: i.id,
                    organizationId: n,
                  })
                : c
                ? (r.originalSenderRole = dl({}, c))
                : d && (r.originalSenderRole = dl({}, d))),
            r.subType || (r.subType = p),
            r
          );
        }),
        (Kl.prototype.reactToMessageStatusEvent = function (e) {
          var t = e.data;
          if (this.config.condensedReplays) this.reactToMessageStatusEventCR({ data: t });
          else {
            var n = (t = Ta(t)).client_id,
              r = t.is_recalled,
              o = this.host.models.Message.get(n);
            o &&
              (r
                ? this.host.models.Message.eject(o)
                : (this.__injectMessageStatus(o, t),
                  ci[o.markedRecipientStatus] < ci[li.DELIVERED] && this.markAsReceived(o)));
          }
        }),
        (Kl.prototype.reactToMessageStatusEventCR = function (e) {
          var t = e.data,
            n = (t = Ta(t)).client_id,
            r = t.is_recalled,
            o = t.is_unread,
            i = this.host.models.Message.get(n);
          if (i) {
            t.conversation_id || (t.conversation_id = i.conversationId);
            var s = this.host.conversations.getById(t.conversation_id);
            s &&
              (r
                ? this.host.models.Message.eject(i)
                : ((i.shouldEnsureRecipientStatus = !0),
                  void 0 !== o && (i.isUnread = o),
                  this.host.models.Message.inject(i),
                  s._markingAsReadSortNumber &&
                    i.sortNumber >= s._markingAsReadSortNumber &&
                    this.host.conversations.__clearOptimisticStatus([s])),
              this.host.conversations.__injectConversation(t));
          }
        }),
        (Kl.prototype.__injectMessageStatus = function (e, t) {
          if (e) {
            var n = t.account_id || t.accountId,
              r = {
                createdAt: t.timestamp || t.createdAt,
                id: e.id + ':' + n,
                messageId: e.id,
                status: li.resolve(t.status),
              };
            return (
              'distributionList' === e.counterPartyType
                ? (r.distributionListId = n)
                : ((r.userId = n), this.host.models.User.ensureEntity(n, { onlyPlaceholder: !0 })),
              this.host.models.MessageStatusPerRecipient.inject(r)
            );
          }
        }),
        (Kl.prototype._findCR = function (a, e) {
          var t = void 0 === e ? {} : e,
            n = t.includeCounterParty,
            u = void 0 === n || n,
            r = t.includeStatuses,
            c = void 0 === r || r,
            l = t.instance,
            o = t.replace,
            d = void 0 !== o && o;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.host.requireUser(), [4, this.host.api.messages.find(a)];
                case 1:
                  return (t = e.sent()) && (n = t.message)
                    ? ((n.conversationId = t.conversation_id),
                      l && d && this.__setDefaultAttributes(n, { instance: l }),
                      u
                        ? ((r = n.recipient_token),
                          (o = n.sender_organization),
                          [4, this.__lookupCounterParty(r, { organizationId: o })])
                        : [3, 3])
                    : [2, null];
                case 2:
                  if (!(i = e.sent())) return [2, null];
                  (n.counterParty = i),
                    n.conversationHandle ||
                      (n.conversationHandle = this.host.conversations.getConversationKey(
                        i.$entityType,
                        i.serverId,
                        o
                      )),
                    (e.label = 3);
                case 3:
                  return (
                    ((s = d
                      ? this.host.models.Message.replaceExisting(n, { instance: l })
                      : this.host.models.Message.inject(n)).$synced = void 0),
                    c ? [4, this.findRecipientStatus(s, { queue: !1 })] : [3, 5]
                  );
                case 4:
                  e.sent(), (e.label = 5);
                case 5:
                  return [2, s];
              }
            });
          });
        }),
        (Kl.prototype.find = function (s, e) {
          var t = void 0 === e ? {} : e,
            n = t.includeCounterParty,
            a = void 0 === n || n,
            r = t.includeStatuses,
            u = void 0 === r || r,
            c = t.instance,
            o = t.replace,
            l = void 0 !== o && o;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.config.condensedReplays
                    ? [
                        4,
                        this._findCR(s, {
                          includeCounterParty: a,
                          includeStatuses: u,
                          instance: c,
                          replace: l,
                        }),
                      ]
                    : [3, 2];
                case 1:
                  return [2, e.sent()];
                case 2:
                  return this.host.requireUser(), [4, this.host.api.messages.find(s)];
                case 3:
                  return (t = e.sent())
                    ? (c && l && this.__setDefaultAttributes(t, { instance: c }),
                      a
                        ? ((n = t.recipient_token),
                          (r = t.sender_organization),
                          [4, this.__lookupCounterParty(n, { organizationId: r })])
                        : [3, 5])
                    : [2, null];
                case 4:
                  if (!(o = e.sent())) return [2, null];
                  (t.counterParty = o),
                    this.config.condensedReplays ||
                      t.conversationId ||
                      (t.conversationId = this.host.conversations.getConversationKey(
                        o.$entityType,
                        o.serverId,
                        r
                      )),
                    (e.label = 5);
                case 5:
                  return (
                    ((i = l
                      ? this.host.models.Message.replaceExisting(t, { instance: c })
                      : this.host.models.Message.inject(t)).$synced = void 0),
                    u ? [4, this.findRecipientStatus(i, { queue: !1 })] : [3, 7]
                  );
                case 6:
                  e.sent(), (e.label = 7);
                case 7:
                  return [2, i];
              }
            });
          });
        }),
        (Kl.prototype.findAttachment = function (o, i) {
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = this._resolveMessage(o)),
                    (n = !1),
                    t
                      ? [3, 2]
                      : ((n = !0),
                        [4, this.find(o, { includeStatuses: !1, includeCounterParty: !1 })])
                  );
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  return t
                    ? !(r = this.__getMessageAttachment(t, i)) || r.isLocal || n || 'name' in r
                      ? [3, 4]
                      : [4, this.find(o, { includeStatuses: !1, includeCounterParty: !1 })]
                    : [2, null];
                case 3:
                  (t = e.sent()),
                    (r = this.__getMessageAttachment(t, i)).name || (r.name = null),
                    (e.label = 4);
                case 4:
                  return [2, r];
              }
            });
          });
        }),
        (Kl.prototype.getById = function (e) {
          return this.host.models.Message.get(e);
        }),
        (Kl.prototype.getMultiById = function (e) {
          return this.host.models.Message.getMulti(e);
        }),
        (Kl.prototype.__lookupCounterParty = function (d, e) {
          var h = (void 0 === e ? {} : e).organizationId;
          return au(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l = this;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  for (
                    t = [
                      {
                        model: this.host.models.User,
                        finder: function () {
                          return l.host.users.find(d, { organizationId: h });
                        },
                      },
                      {
                        model: this.host.models.Group,
                        finder: function () {
                          return l.host.groups.find(d);
                        },
                      },
                      {
                        model: this.host.models.DistributionList,
                        finder: function () {
                          return l.host.distributionLists.find(d);
                        },
                      },
                    ],
                      n = 0,
                      r = t;
                    n < r.length;
                    n++
                  )
                    if (((o = r[n].model), (u = o.get(d)))) return [2, u];
                  (i = 0), (s = t), (e.label = 1);
                case 1:
                  if (!(i < s.length)) return [3, 6];
                  (a = s[i].finder), (e.label = 2);
                case 2:
                  return e.trys.push([2, 4, , 5]), [4, a()];
                case 3:
                  return (u = e.sent()) ? [2, u] : [3, 5];
                case 4:
                  if ((c = e.sent()).code !== G.CODE) throw c;
                  return [3, 5];
                case 5:
                  return i++, [3, 1];
                case 6:
                  return [2, null];
              }
            });
          });
        }),
        (Kl.prototype._isMessageOutgoing = function (e) {
          var t = e.counterParty,
            n = e.counterPartyType,
            r = e.currentSenderRole,
            o = e.senderId;
          if (!o) return !1;
          for (
            var i = this.host,
              s = i.currentUser,
              a = i.currentUserId,
              u = t || {},
              c = u.groupType,
              l = u.members,
              d = u.p2pRecipient,
              h = u.p2pSender,
              p = 'group' === n && c === si.ROLE_P2P,
              f = s.roles,
              v = [a],
              y = [],
              g = 0,
              m = 0,
              _ = f;
            m < _.length;
            m++
          ) {
            var b = _[m].botUserId;
            v.push(b);
          }
          if (l) {
            for (var w = 0, I = l; w < I.length; w++) {
              var O = I[w],
                T = O.botRole;
              O.isRoleBot && T && !y.includes(T) && y.push(T);
            }
            p &&
              (h && ((T = h.botRole), h.isRoleBot && T && !y.includes(T) && y.push(T)),
              d && ((T = d.botRole), d.isRoleBot && T && !y.includes(T) && y.push(T)));
            for (var E = 0, R = y; E < R.length; E++) {
              var A = R[E];
              f.includes(A) && g++;
            }
          }
          return p
            ? !(d === s && o === a && !r) &&
                (!(!h || (o !== h.id && o !== h.botUserId)) ||
                  (f.includes(r) && (1 === g || r === h)))
            : 'distributionList' === n || f.includes(r) || v.includes(o);
        }),
        (Kl.prototype._setRecipientStatus = function (e) {
          for (
            var t,
              n,
              r = e.__organizationId,
              o = e._markingAsStatus,
              i = e.conversation,
              s = e.counterParty,
              a = e.counterPartyType,
              u = e.createdAt,
              c = e.deleteOnRead,
              l = e.expiresAt,
              d = e.isOutgoing,
              h = e.messageType,
              p = e.senderId,
              f = e.statusesPerRecipient,
              v = e.ttl,
              y = this.host,
              g = y.currentUser,
              m = y.currentUserId,
              _ = s || {},
              b = _.groupType,
              w = _.p2pRecipient,
              I = [],
              O = [],
              T = [m],
              E = 0,
              R = g.roles;
            E < R.length;
            E++
          ) {
            var A = R[E];
            A.organizationId === r && T.push(A.botUserId);
          }
          for (
            var C = p && T.includes(p),
              S = [],
              P = li.READ,
              j = li.NEW,
              M = b === si.ROLE_P2P && w === g,
              z = 0,
              k = f;
            z < k.length;
            z++
          ) {
            var N = (q = k[z]).userId;
            (F = T.includes(N)) && S.push(N);
          }
          for (var x = 1 < S.length, U = 0, L = f; U < L.length; U++) {
            var q,
              D = (q = L[U]).distributionListId,
              B = ((N = q.userId), q.status),
              F = T.includes(N);
            M || (!(!d && F) && !(d && (D || !F))) || (x && N === m) || O.push(B),
              (M || (C && T.includes(p))) &&
                (ci[j] < ci[B] && (j = B), ci[j] < ci[li.READ] && (j = li.READ)),
              !F || M || (C && p === N) || I.push(B);
          }
          if (0 < O.length) {
            n = O[0];
            for (var G = 1; G < O.length; G++) {
              var V = O[G];
              0 === S.length ? ci[n] < ci[V] && (n = V) : ci[n] > ci[V] && (n = V);
            }
          } else n = j;
          if (((t = P), 0 < I.length))
            for (var K = 0, H = I; K < H.length; K++) (V = H[K]), ci[t] > ci[V] && (t = V);
          if (
            (this.config.condensedReplays &&
              i &&
              i._markingAsRead &&
              i._markingAsReadSortNumber >= e.sortNumber &&
              (n = li.READ),
            o)
          ) {
            var $ = !1;
            ci[n] < ci[o] && ((n = o), ($ = !0)),
              !this.config.condensedReplays && d && ci[t] < ci[o] && ((t = o), ($ = !0)),
              $ || this.config.condensedReplays || (e._markingAsStatus = void 0);
          }
          if (c && 'user' === a && n === li.READ) {
            var W = Date.now() + 6e4;
            (!l || W < l) && (l = W);
          } else l || void 0 === v || (l = u.getTime() + 60 * v * 1e3);
          (e.expiresAt = l),
            this.config.condensedReplays
              ? (e.isUnread = !e.isEphemeral && e.isUnread)
              : ((e.isUnread =
                  !e.isEphemeral &&
                  h === pi.USER_SENT &&
                  !d &&
                  -1 === this.compareRecipientStatus(n, li.READ)),
                (e.markedRecipientStatus = t)),
            (e.ttl = v);
        }),
        (Kl.prototype.compareRecipientStatus = function (e, t) {
          return (
            li.isValid(e) && (e = ci[e]),
            li.isValid(t) && (t = ci[t]),
            t < e ? 1 : e === t ? 0 : e < t ? -1 : void 0
          );
        }),
        (Kl.prototype.__getMessageAttachment = function (e, t) {
          var n = this._resolveMessage(e);
          return n
            ? ((t = t.toString()), n.attachments ? ee.a.find(n.attachments, { id: t }) : null)
            : null;
        }),
        (Kl.prototype.__getAttachmentPath = function (e, t) {
          return (
            '/' + this.host.api.messages.getVersion().version + '/message/' + e + '/attachment/' + t
          );
        }),
        (Kl.prototype.downloadAttachmentUrl = function (e, t) {
          return this._downloadAttachmentBlobAndUrl(e, t).then(function (e) {
            return e.url;
          });
        }),
        (Kl.prototype.downloadAttachmentBlobAndUrl = function (e, t) {
          return this._downloadAttachmentBlobAndUrl(e, t);
        }),
        (Kl.prototype.downloadAttachmentUrlWithToken = function (e, t) {
          return this._downloadAttachmentBlobAndUrlWithToken(e, t).then(function (e) {
            return e.url;
          });
        }),
        (Kl.prototype.downloadAttachment = function (e, o, t) {
          var i = (void 0 === t ? {} : t).fileName;
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [3, 5];
                case 1:
                  return [4, this._downloadAttachmentBlobAndUrl(t.serverId, o)];
                case 2:
                  (n = e.sent().blob), (e.label = 3);
                case 3:
                  return (
                    (i = i || (void 0).name) ||
                      ((i = 'Attachment'),
                      t.sender.$placeholder || (i += ' from ' + t.sender.displayName),
                      (i += ' at ' + wc()(t.createdAt).format('YYYY-MM-DD h-mma')),
                      (r = Qs({ mime: (void 0).contentType })) && (i += r.ext)),
                    [4, wa({ attachmentContentType: (void 0).contentType, blob: n, fileName: i })]
                  );
                case 4:
                  return e.sent(), [3, 6];
                case 5:
                  Z.raise(), (e.label = 6);
                case 6:
                  return [2];
              }
            });
          });
        }),
        (Kl.prototype._downloadAttachmentBlobAndUrl = function (e, r) {
          return au(this, void 0, void 0, function () {
            var t, n;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [3, 5];
                case 1:
                  if (!(t = e.sent()))
                    throw new G('MessageAttachment', (void 0).serverId + ':' + r);
                  return t.isLocal && t.localFile instanceof Blob
                    ? [4, t.localPathPromise]
                    : [3, 3];
                case 2:
                  return (
                    e.sent(), [2, { blob: t.localFile, url: URL.createObjectURL(t.localFile) }]
                  );
                case 3:
                  return (
                    (n = this.__getAttachmentPath((void 0).serverId, r)),
                    [2, this.httpClient.downloadFileBlobAndUrl(n)]
                  );
                case 4:
                  return [3, 6];
                case 5:
                  Z.raise(), (e.label = 6);
                case 6:
                  return [2];
              }
            });
          });
        }),
        (Kl.prototype._downloadAttachmentBlobAndUrlWithToken = function (e, o) {
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [3, 6];
                case 1:
                  if (!(t = e.sent()))
                    throw new G('MessageAttachment', (void 0).serverId + ':' + o);
                  return t.isLocal && t.localFile instanceof Blob
                    ? [4, t.localPathPromise]
                    : [3, 3];
                case 2:
                  return (n = e.sent()), [2, { blob: t.localFile, url: n }];
                case 3:
                  return [4, this.getAttachmentUrlWithToken((void 0).serverId, o)];
                case 4:
                  return (r = e.sent()), [2, this.httpClient.downloadFileBlobAndUrl(r)];
                case 5:
                  return [3, 7];
                case 6:
                  Z.raise(), (e.label = 7);
                case 7:
                  return [2];
              }
            });
          });
        }),
        (Kl.prototype.downloadAttachmentToFile = function (o, i, s) {
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (i = i.toString()),
                    (t = this._resolveMessage(o)),
                    [4, this.findAttachment(o, i)]
                  );
                case 1:
                  if (!(n = e.sent())) throw new G('MessageAttachment', t.serverId + ':' + i);
                  if (/(\/|\\)$/.test(s)) {
                    if (!n.name)
                      throw new Error('missing file name in downloadAttachmentToFile(..., dest)');
                    s += n.name;
                  }
                  return (
                    (r = this.__getAttachmentPath(t.serverId, i)),
                    [2, this.httpClient.downloadToFile(r, s)]
                  );
                case 2:
                  Z.raise(), (e.label = 3);
                case 3:
                  return [2];
              }
            });
          });
        }),
        (Kl.prototype.getMessageCount = function () {
          return this.host.models.Message.getAll().length;
        }),
        (Kl.prototype.getTotalUnreadCount = function () {
          var e = this.host.models.Product.getAll()[0];
          return e ? e.unreadCount : 0;
        }),
        (Kl.prototype.getTotalUnreadPriorityCount = function () {
          var e = this.host.models.Product.getAll()[0];
          return e ? e.unreadPriorityCount : 0;
        }),
        (Kl.prototype.markAsRead = function (s, e) {
          var t = void 0 === e ? {} : e,
            n = t.localOnly,
            a = void 0 !== n && n,
            r = t.queue,
            u = void 0 === r ? this.host.currentlyServingOfflineMessages : r;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return uu(this, function (e) {
              if (((s = ka.call(s).map(this._resolveModelId)), 0 === (t = gc.a.call(s)).length))
                return [2];
              if (this.config.condensedReplays || !a)
                return u
                  ? [2, this.__queueSetMessageStatuses({ readIds: t })]
                  : [2, this.__setMessagesStatus({ readIds: t })];
              for (n = this.host.models.Message.getMulti(t), r = 0, o = n; r < o.length; r++)
                (i = o[r]) && ((i._markingAsStatus = li.READ), this.host.models.Message.inject(i));
              return [2];
            });
          });
        }),
        (Kl.prototype.markAsDelivered = function (n, r) {
          return (
            void 0 === r && (r = {}),
            au(this, void 0, void 0, function () {
              var t;
              return uu(this, function (e) {
                return (
                  (r = ee.a.defaults(r, { queue: this.host.currentlyServingOfflineMessages })),
                  (n = ka.call(n).map(this._resolveModelId)),
                  0 === (t = gc.a.call(n)).length
                    ? [2]
                    : r.queue
                    ? [2, this.__queueSetMessageStatuses({ deliveredIds: t })]
                    : [2, this.__setMessagesStatus({ deliveredIds: t })]
                );
              });
            })
          );
        }),
        (Kl.prototype.markAsReceived = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
          return au(this, void 0, void 0, function () {
            return uu(this, function (e) {
              return [2, this.markAsDelivered.apply(this, t)];
            });
          });
        }),
        (Kl.prototype.__queueSetMessageStatuses = function (e) {
          var n = e.deliveredIds,
            r = e.readIds;
          return au(this, void 0, void 0, function () {
            var t;
            return uu(this, function (e) {
              return (
                (t = this._queuedSetMessageStatuses),
                n && (t.deliveredIds = ee.a.union(t.deliveredIds, n)),
                r && (t.readIds = ee.a.union(t.readIds, r)),
                t.deliveredIds.length + t.readIds.length >=
                this.config.flushSetMessageStatusMaxCount
                  ? (this.logger.log(
                      'reached ' + this.config.flushSetMessageStatusMaxCount + ' -- flushing'
                    ),
                    [2, this.__flushSetMessageStatusesQueue()])
                  : (this._throttled_flushSetMessageStatusesQueue(), [2])
              );
            });
          });
        }),
        (Kl.prototype.__setMessagesStatus = function (e) {
          var t = e.deliveredIds,
            T = void 0 === t ? [] : t,
            n = e.readIds,
            E = void 0 === n ? [] : n;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _, b, w, I, O;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.host.requireUser(),
                    (T = T.map(this._resolveModelId)),
                    (E = E.map(this._resolveModelId)),
                    (t = gc.a.call(T)),
                    (n = gc.a.call(E)),
                    (t = this.config.condensedReplays
                      ? ee.a.difference(t, n)
                      : ((r = this.host.models.Message.getMulti(t).filter(function (e) {
                          return e && ci[e.markedRecipientStatus] >= ci[li.DELIVERED];
                        })),
                        (o = r.map(function (e) {
                          return e.id;
                        })),
                        (i = this.host.models.Message.getMulti(n).filter(function (e) {
                          return e && ci[e.markedRecipientStatus] >= ci[li.READ];
                        })),
                        (s = i.map(function (e) {
                          return e.id;
                        })),
                        (n = ee.a.difference(n, s)),
                        ee.a.difference(t, n, o))),
                    (a = {}),
                    0 < t.length && (a.delivered = t),
                    0 < n.length)
                  )
                    for (
                      a.read = n, b = this.host.models.Message.getMulti(n), u = 0, c = b;
                      u < c.length;
                      u++
                    )
                      (O = c[u]) &&
                        ((O._markingAsStatus = li.READ), this.host.models.Message.inject(O));
                  if (0 === Object.keys(a).length) return [2, !1];
                  e.label = 1;
                case 1:
                  return (
                    e.trys.push([1, 3, , 4]),
                    [4, this.host.api.messages.updateRecipientStatusMulti(a)]
                  );
                case 2:
                  if (((l = e.sent()), this.config.condensedReplays))
                    for (d = 0, h = Object.entries(l); d < h.length; d++)
                      (p = h[d]),
                        (f = p[0]),
                        (v = p[1]),
                        (y = v.unread_message_count),
                        (g = v.unread_priority_message_count),
                        (m = this.host.models.Conversation.get(f)) &&
                          ((m.unreadMessageCount = y),
                          (m.unreadPriorityMessageCount = g),
                          this.host.models.Conversation.inject(m));
                  return [3, 4];
                case 3:
                  for (
                    _ = e.sent(), b = this.host.models.Message.getMulti(n), w = 0, I = b;
                    w < I.length;
                    w++
                  )
                    (O = I[w]) &&
                      O._markingAsStatus &&
                      ((O._markingAsStatus = void 0), this.host.models.Message.inject(O));
                  return [2, Promise.reject(_)];
                case 4:
                  return [2, !0];
              }
            });
          });
        }),
        (Kl.prototype.setMessageTTLInMinutes = function (e, t) {
          var n = this._resolveMessage(e);
          if (n) {
            var r = wc()().add(t, 'minute').toDate().getTime();
            this.host.models.Message.inject({ id: n.id, ttl: t, expiresAt: r });
          }
        }),
        (Kl.prototype._clearOptimisticMarkAsReadState = function (e) {
          void 0 === e && (e = Date.now()), e.getTime && (e = e.getTime());
          for (var t = 0, n = this.host.organizations.getAll(); t < n.length; t++)
            for (var r = n[t].__markingAsReadConversations, o = !1; !o && 0 < r.length; ) {
              var i = r[0],
                s = this.host.conversations.getById(i.id);
              if (!s) return;
              s._markingAsReadExpiration < e
                ? ((s._markingAsRead = !1),
                  (s._markingAsReadSortNumber = null),
                  (s._markingAsReadExpiration = null),
                  this.host.models.Conversation.inject(s),
                  this.host.conversations.find(s.id, { ensureEntities: !1 }))
                : (o = !0);
            }
        }),
        (Kl.prototype.ensureRecipientStatus = function (d, e) {
          var t = void 0 === e ? {} : e,
            n = t.includeUsers,
            h = void 0 === n || n,
            r = t.queue,
            p = void 0 === r || r;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.host.requireUser(),
                    (d = this._resolveModelId(d)),
                    !(t = this._resolveMessage(d)))
                  )
                    return [2, null];
                  if (
                    ((n = t.counterPartyType),
                    (r = t.senderStatus),
                    (o = t.shouldEnsureRecipientStatus),
                    (i = t.statusesPerRecipient),
                    r === di.SENDING)
                  )
                    return [2, null];
                  if ('distributionList' === n) return [2, null];
                  if (!o && 0 < i.length) {
                    if (((s = !1), h)) for (a = 0, u = i; a < u.length; a++) u[a].user || (s = !0);
                    if (!s) return [2, i];
                  }
                  return p
                    ? [4, this.__queueFindRecipientStatuses([{ id: d, includeUsers: h }])]
                    : [3, 2];
                case 1:
                  return (l = e.sent()), (c = l[0]), [3, 4];
                case 2:
                  return [4, this.__findRecipientStatus(d, { includeUsers: h })];
                case 3:
                  (c = e.sent()), (e.label = 4);
                case 4:
                  return [2, c];
              }
            });
          });
        }),
        (Kl.prototype.findRecipientStatus = function (o, e) {
          var t = void 0 === e ? {} : e,
            n = t.includeUsers,
            i = void 0 !== n && n,
            r = t.queue,
            s = void 0 === r || r;
          return au(this, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (t = this._resolveMessage(o))
                      ? t.senderStatus === di.SENDING || 'distributionList' === t.counterPartyType
                        ? [2, null]
                        : ((o = this._resolveModelId(o)),
                          s
                            ? [4, this.__queueFindRecipientStatuses([{ id: o, includeUsers: i }])]
                            : [3, 2])
                      : [2, null]
                  );
                case 1:
                  return (r = e.sent()), (n = r[0]), [3, 4];
                case 2:
                  return [4, this.__findRecipientStatus(o, { includeUsers: i })];
                case 3:
                  (n = e.sent()), (e.label = 4);
                case 4:
                  return [2, n];
              }
            });
          });
        }),
        (Kl.prototype.ensureRecipientStatusMulti = function (b, e) {
          var t = void 0 === e ? {} : e,
            n = t.includeUsers,
            w = void 0 === n || n,
            r = t.queue,
            I = void 0 === r || r;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  for (
                    b = ka.call(b).map(this._resolveModelId),
                      t = gc.a.call(b),
                      n = [],
                      r = {},
                      o = 0,
                      i = t;
                    o < i.length;
                    o++
                  ) {
                    if (
                      ((_ = i[o]),
                      (f = { id: _, includeUsers: w }),
                      (s = this._resolveMessage(_)),
                      (a = !0),
                      s &&
                        ((u = s.shouldEnsureRecipientStatus),
                        (c = s.statusesPerRecipient),
                        !u && 0 < c.length && ((a = !1), w)))
                    )
                      for (l = 0, d = c; l < d.length; l++) d[l].user || (a = !0);
                    a ? n.push(f) : (r[f.id] = s.statusesPerRecipient);
                  }
                  return 0 === n.length
                    ? [2]
                    : I
                    ? [4, this.__queueFindRecipientStatuses(n)]
                    : [3, 2];
                case 1:
                  return (h = e.sent()), [3, 4];
                case 2:
                  return [4, this.__findRecipientStatusMulti(n)];
                case 3:
                  (h = e.sent()), (e.label = 4);
                case 4:
                  if (h)
                    for (p = 0; p < n.length; p++)
                      h.length > p && ((f = n[p]), (v = h[p]), (r[f.id] = v));
                  for (y = [], g = 0, m = t; g < m.length; g++) (_ = m[g]), y.push(r[_]);
                  return [2, y];
              }
            });
          });
        }),
        (Kl.prototype.findRecipientStatusMulti = function (a, e) {
          var t = void 0 === e ? {} : e,
            n = t.includeUsers,
            u = void 0 !== n && n,
            r = t.queue,
            c = void 0 !== r && r;
          return au(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return uu(this, function (e) {
              for (
                a = ka.call(a).map(this._resolveModelId), t = gc.a.call(a), n = [], r = 0, o = t;
                r < o.length;
                r++
              )
                (i = o[r]), (s = { id: i, includeUsers: u }), n.push(s);
              return 0 === n.length
                ? [2]
                : c
                ? [2, this.__queueFindRecipientStatuses(n)]
                : [2, this.__findRecipientStatusMulti(n)];
            });
          });
        }),
        (Kl.prototype.__queueFindRecipientStatuses = function (a) {
          return au(this, void 0, void 0, function () {
            var u, t, c, n, r, o, i, s;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  for (
                    u = [],
                      t = function (e, t) {
                        var n,
                          r,
                          o = !0;
                        u.push(
                          new Promise(function (e, t) {
                            (n = e), (r = t);
                          })
                        );
                        for (var i = 0, s = c._queuedFindRecipientStatuses; i < s.length; i++) {
                          var a = s[i];
                          if (e === a.id) {
                            (a.includeUsers = a.includeUsers || t),
                              a.onCompletes.push(n),
                              a.onErrors.push(r),
                              (o = !1);
                            break;
                          }
                        }
                        o &&
                          c._queuedFindRecipientStatuses.push({
                            id: e,
                            includeUsers: t,
                            onCompletes: [n],
                            onErrors: [r],
                          });
                      },
                      c = this,
                      n = 0,
                      r = a;
                    n < r.length;
                    n++
                  )
                    (o = r[n]), (i = o.id), (s = o.includeUsers), t(i, s);
                  return (
                    this._queuedFindRecipientStatuses.length >=
                    this.config.flushFindRecipientStatusMaxCount
                      ? (this.logger.log(
                          'reached ' + this.config.flushFindRecipientStatusMaxCount + ' -- flushing'
                        ),
                        this.__flushFindRecipientStatusesQueue())
                      : 0 < this._queuedFindRecipientStatuses.length &&
                        this._throttled_flushFindRecipientStatusesQueue(),
                    [4, Promise.all(u)]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (Kl.prototype.__flushFindRecipientStatusesQueue = function () {
          return au(this, void 0, void 0, function () {
            var d, h, p, t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (0 === this._queuedFindRecipientStatuses.length) return [2];
                  (d = this._queuedFindRecipientStatuses),
                    (this._queuedFindRecipientStatuses = []),
                    (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, 4, 5]), [4, this.__findRecipientStatusMulti(d)];
                case 2:
                  return (p = e.sent()), [3, 5];
                case 3:
                  return (t = e.sent()), (h = t), [3, 5];
                case 4:
                  for (
                    n = function (e) {
                      var t;
                      p && p.length > e && (t = p[e]);
                      var n = d[e],
                        r = n.onCompletes,
                        o = n.onErrors;
                      if (h)
                        for (
                          var i = function (e) {
                              setTimeout(function () {
                                return e(h);
                              }, 0);
                            },
                            s = 0,
                            a = o;
                          s < a.length;
                          s++
                        )
                          i(a[s]);
                      else
                        for (
                          var u = function (e) {
                              setTimeout(function () {
                                return e(t);
                              }, 0);
                            },
                            c = 0,
                            l = r;
                          c < l.length;
                          c++
                        )
                          u(l[c]);
                    },
                      r = 0;
                    r < d.length;
                    r++
                  )
                    n(r);
                  return [7];
                case 5:
                  return [2];
              }
            });
          });
        }),
        (Kl.prototype.__findRecipientStatus = function (v, e) {
          var y = e.includeUsers;
          return au(this, void 0, void 0, function () {
            var n,
              t,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              d,
              h,
              p,
              f = this;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.host.requireUser(),
                    (n = this._resolveMessage(v)),
                    (t = !1),
                    this._pendingFindRecipientStatuses[n.id])
                  )
                    return [2, null];
                  e.label = 1;
                case 1:
                  return (
                    e.trys.push([1, , 3, 4]),
                    (o = new Promise(function (e, t) {
                      f._pendingFindRecipientStatuses[n.id] = function () {
                        return e(null);
                      };
                    })),
                    [4, Promise.race([o, this.host.api.messages.findRecipientStatus(n.serverId)])]
                  );
                case 2:
                  return (r = e.sent()), [3, 4];
                case 3:
                  return delete this._pendingFindRecipientStatuses[n.id], [7];
                case 4:
                  if (!r) return [2, null];
                  if (r.is_recalled) return this.host.models.Message.eject(n), [2, null];
                  for (i = 0, s = r.statuses; i < s.length; i++)
                    (a = s[i]), this.__injectMessageStatus(n, a);
                  if (!y) return [3, 6];
                  for (
                    u = n.recipientOrganizationId, c = n.statusesPerRecipient, l = [], d = 0, h = c;
                    d < h.length;
                    d++
                  )
                    (p = h[d].userId) && l.push(p);
                  return [4, this.host.users.ensureUsers(l, u)];
                case 5:
                  e.sent(), (t = !0), (e.label = 6);
                case 6:
                  return (
                    n.shouldEnsureRecipientStatus &&
                      ((n.shouldEnsureRecipientStatus = !1), (t = !0)),
                    t && this.host.models.Message.inject(n),
                    !this.config.condensedReplays &&
                      ci[n.markedRecipientStatus] < ci[li.DELIVERED] &&
                      this.markAsReceived(n),
                    [2, n.statusesPerRecipient]
                  );
              }
            });
          });
        }),
        (Kl.prototype.__findRecipientStatusMulti = function (q) {
          return au(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              I,
              O,
              d,
              T,
              h,
              p,
              f,
              v,
              y,
              g,
              m,
              _,
              b,
              w,
              E,
              R,
              A,
              C,
              S,
              P,
              j,
              M,
              z,
              k,
              N,
              x,
              U,
              L;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  for (
                    this.host.requireUser(), t = {}, n = q, q = [], r = 0, o = n;
                    r < o.length;
                    r++
                  )
                    (i = o[r]),
                      (U = i.id),
                      (_ = i.includeUsers),
                      (z = this._resolveMessage(U)),
                      (a = (s = z || {}).counterParty),
                      (u = s.serverId),
                      (c = { id: U, includeUsers: _, message: z }),
                      q.push(c),
                      u &&
                        (this._pendingFindRecipientStatuses[u] ||
                          (a && 'distributionList' === a.$entityType) ||
                          ((c.id = u), (t[u] = !0)));
                  (l = ee.a.chunk(Object.keys(t), 20)),
                    (I = {}),
                    (O = {}),
                    (d = function (t) {
                      var n, r, o, i, s, a, u, c, l, d, h, p, f, v, y, g, m, _, b, w;
                      return uu(this, function (e) {
                        switch (e.label) {
                          case 0:
                            (n = void 0), (e.label = 1);
                          case 1:
                            for (
                              e.trys.push([1, , 3, 4]),
                                r = {},
                                o = function (e) {
                                  T._pendingFindRecipientStatuses[e] = function () {
                                    r[e] = !0;
                                  };
                                },
                                i = 0,
                                s = t;
                              i < s.length;
                              i++
                            )
                              (h = s[i]), o(h);
                            return [4, T.host.api.messages.findRecipientStatusMulti(t)];
                          case 2:
                            for (a = e.sent(), n = [], u = 0, c = a; u < c.length; u++)
                              (v = c[u]), (h = v.client_id), r[h] || n.push(v);
                            return [3, 4];
                          case 3:
                            for (l = 0, d = t; l < d.length; l++)
                              (h = d[l]), delete T._pendingFindRecipientStatuses[h];
                            return [7];
                          case 4:
                            if (!n) return [2, { value: [] }];
                            for (p = 0, f = n; p < f.length; p++)
                              if (
                                ((v = f[p]),
                                (y = v.client_id),
                                (g = v.statuses),
                                (m = T.host.models.Message.get(y)),
                                v.is_recalled)
                              )
                                T.host.models.Message.eject(m), (O[y] = !0);
                              else if (g && 0 < g.length) {
                                for (_ = 0, b = g; _ < b.length; _++)
                                  (w = b[_]), T.__injectMessageStatus(m, w);
                                I[y] = m;
                              }
                            return [2];
                        }
                      });
                    }),
                    (T = this),
                    (h = 0),
                    (p = l),
                    (e.label = 1);
                case 1:
                  return h < p.length ? ((f = p[h]), [5, d(f)]) : [3, 4];
                case 2:
                  if ('object' == typeof (v = e.sent())) return [2, v.value];
                  e.label = 3;
                case 3:
                  return h++, [3, 1];
                case 4:
                  (y = 0), (g = q), (e.label = 5);
                case 5:
                  if (!(y < g.length)) return [3, 9];
                  if (
                    ((m = g[y]),
                    (_ = m.includeUsers),
                    (z = m.message),
                    (b = !1),
                    !z || O[z.serverId])
                  )
                    return [3, 8];
                  if (
                    ((w = z.recipientOrganizationId),
                    (E = z.shouldEnsureRecipientStatus),
                    (R = z.statusesPerRecipient),
                    !_)
                  )
                    return [3, 7];
                  for (A = [], C = 0, S = R; C < S.length; C++) (P = S[C].userId) && A.push(P);
                  return [4, this.host.users.ensureUsers(A, w)];
                case 6:
                  e.sent(), (b = !0), (e.label = 7);
                case 7:
                  E && ((z.shouldEnsureRecipientStatus = !1), (b = !0)),
                    b && this.host.models.Message.inject(z),
                    (e.label = 8);
                case 8:
                  return y++, [3, 5];
                case 9:
                  if (!this.config.condensedReplays)
                    for (j = 0, M = Object.values(I); j < M.length; j++)
                      (z = M[j]),
                        ci[z.markedRecipientStatus] < ci[li.DELIVERED] && this.markAsReceived(z);
                  for (k = [], N = 0, x = q; N < x.length; N++)
                    (U = x[N].id), (L = I[U]), k.push(L ? L.statusesPerRecipient : null);
                  return [2, k];
              }
            });
          });
        }),
        su([Object(Rs.decorator)()], Kl.prototype, '__prepareGroupForUsers', null),
        su([Object(Rs.decorator)()], Kl.prototype, '__prepareRoleP2PGroup', null),
        su(
          [
            Object(Rs.decorator)({
              serializeArguments: function (e) {
                return e[0];
              },
            }),
          ],
          Kl.prototype,
          'find',
          null
        ),
        su([Object(Rs.decorator)({ memoize: !0 })], Kl.prototype, 'downloadAttachmentUrl', null),
        su(
          [Object(Rs.decorator)({ memoize: !0 })],
          Kl.prototype,
          'downloadAttachmentBlobAndUrl',
          null
        ),
        su([Object(Rs.decorator)()], Kl.prototype, 'downloadAttachment', null),
        su(
          [Object(Rs.decorator)({ memoize: !0 })],
          Kl.prototype,
          '_downloadAttachmentBlobAndUrl',
          null
        ),
        su(
          [
            Object(Rs.decorator)({
              serializeArguments: function (e) {
                return 'object' == typeof e[0] ? e[0].id : e[0];
              },
            }),
          ],
          Kl.prototype,
          'findRecipientStatus',
          null
        ),
        su(
          [
            Object(Rs.decorator)({
              serializeArguments: function (e) {
                return e[0]
                  .map(function (e) {
                    return 'object' == typeof e ? e.id : e;
                  })
                  .join(':');
              },
            }),
          ],
          Kl.prototype,
          'findRecipientStatusMulti',
          null
        ),
        Kl),
      vl =
        ((Bu = function (e, t) {
          return (Bu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Bu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      yl = ['template_label'].join(','),
      gl =
        (vl(Vl, (Du = Ua)),
        (Vl.prototype.batchDelete = function (e) {
          var n = e.ids,
            r = e.organizationId;
          return hu(this, void 0, void 0, function () {
            var t = this;
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!Array.isArray(n)) throw new ne('ids', 'required', 'ids must be an array');
                  if (!r) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.messageTemplates.batch({
                      ids: n,
                      operation: 'destroy',
                      organizationId: r,
                    }),
                  ];
                case 1:
                  return (
                    e.sent(),
                    [
                      2,
                      n.map(function (e) {
                        return t.host.models.MessageTemplate.inject({ $deleted: !0, id: e });
                      }),
                    ]
                  );
              }
            });
          });
        }),
        (Vl.prototype.create = function (e) {
          var o = e.attachment,
            i = e.body,
            t = e.network,
            s = void 0 === t ? 'patient' : t,
            a = e.organizationId,
            n = e.repository,
            u = void 0 === n ? 'personal' : n,
            c = e.title;
          return hu(this, void 0, void 0, function () {
            var t, n, r;
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = c ? c.trim() : ''),
                    (n = i ? i.trim() : ''),
                    this._validate({
                      body: n,
                      organizationId: a,
                      repository: u,
                      shouldCheckId: !1,
                      title: t,
                    }),
                    !1 === ['patient'].includes(s))
                  )
                    throw new ne('network', 'invalid', 'network must be "patient"');
                  return [
                    4,
                    this.host.api.messageTemplates.create({
                      attachment: o,
                      body: n,
                      network: s,
                      organizationId: a,
                      repository: u,
                      title: t,
                    }),
                  ];
                case 1:
                  return (r = e.sent()), [2, this.host.models.MessageTemplate.inject(r)];
              }
            });
          });
        }),
        (Vl.prototype.delete = function (t, n) {
          return hu(this, void 0, void 0, function () {
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({ id: t, organizationId: n, shouldCheckInvalid: !1 }),
                    [4, this.host.api.messageTemplates.delete(t, n)]
                  );
                case 1:
                  return (
                    e.sent(), [2, this.host.models.MessageTemplate.inject({ $deleted: !0, id: t })]
                  );
              }
            });
          });
        }),
        (Vl.prototype.downloadTemplateFile = function (e) {
          var n = e.templateId,
            r = e.fileName,
            o = e.organizationId;
          return hu(this, void 0, void 0, function () {
            var t;
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.api.messageTemplates.downloadTemplateFile({
                      templateId: n,
                      fileName: r,
                      organizationId: o,
                    }),
                  ];
                case 1:
                  return [
                    4,
                    wa({ attachmentContentType: (t = e.sent()).type, blob: t, fileName: r }),
                  ];
                case 2:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Vl.prototype.find = function (n, r) {
          return hu(this, void 0, void 0, function () {
            var t;
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({ id: n, organizationId: r, shouldCheckInvalid: !1 }),
                    [4, this.host.api.messageTemplates.find(n, r)]
                  );
                case 1:
                  return (t = e.sent()), [2, this.host.models.MessageTemplate.inject(t)];
              }
            });
          });
        }),
        (Vl.prototype.getAll = function () {
          return this.host.models.MessageTemplate.getAll();
        }),
        (Vl.prototype.getById = function (e) {
          return this.host.models.MessageTemplate.get(e);
        }),
        (Vl.prototype.search = function (e) {
          var i = e.continuation,
            t = e.network,
            s = void 0 === t ? 'patient' : t,
            a = e.organizationId,
            n = e.query,
            u = void 0 === n ? '' : n,
            r = e.repository,
            c = void 0 === r ? 'personal' : r,
            o = e.sortBy,
            l = void 0 === o ? 'title' : o,
            d = e.sortOrder,
            h = void 0 === d ? 'asc' : d;
          return hu(this, void 0, void 0, function () {
            var t, n, r, o;
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.search.query({
                      continuation: i,
                      network: s,
                      organizationId: a,
                      query: ((r = {}), (r[yl] = u), (r.repository = c), r),
                      returnFields: [],
                      sort: ((o = {}), (o[l] = h), o),
                      types: ['messageTemplate'],
                    }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = this._processSearchResults(t.results)),
                    [2, { metadata: t.metadata, results: n }]
                  );
              }
            });
          });
        }),
        (Vl.prototype.update = function (e) {
          var o = e.attachment,
            i = e.body,
            s = e.id,
            a = e.organizationId,
            u = e.repository,
            c = e.title;
          return hu(this, void 0, void 0, function () {
            var t, n, r;
            return pu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = c ? c.trim() : ''),
                    (n = i ? i.trim() : ''),
                    this._validate({ body: n, id: s, organizationId: a, repository: u, title: t }),
                    [
                      4,
                      this.host.api.messageTemplates.update({
                        attachment: o,
                        body: n,
                        id: s,
                        organizationId: a,
                        repository: u,
                        title: t,
                      }),
                    ]
                  );
                case 1:
                  return (r = e.sent()), [2, this.host.models.MessageTemplate.inject(r)];
              }
            });
          });
        }),
        (Vl.prototype._processSearchResults = function (e) {
          return e
            .map(function (e) {
              return e.entity;
            })
            .filter(function (e) {
              return !e.$deleted;
            });
        }),
        (Vl.prototype._validate = function (e) {
          var t = e.body,
            n = e.id,
            r = (e.network, e.organizationId),
            o = e.repository,
            i = e.shouldCheckId,
            s = void 0 === i || i,
            a = e.shouldCheckInvalid,
            u = void 0 === a || a,
            c = e.title;
          if (s && !n) throw new ne('id', 'required');
          if (!r) throw new ne('organizationId', 'required');
          if (u) {
            if (!t || 0 === t.trim().length)
              throw new ne('body', 'invalid', 'body must be at least 1 character');
            if (!o || !['general', 'personal'].includes(o))
              throw new ne(
                'repository',
                'invalid',
                'repository must be either "general" or "personal"'
              );
            if (!c || 0 === c.trim().length || 60 < c.trim().length)
              throw new ne('title', 'invalid', 'title must be between 1 and 60 characters');
          }
        }),
        du([Object(Rs.decorator)()], Vl.prototype, 'downloadTemplateFile', null),
        du([Object(Rs.decorator)()], Vl.prototype, 'find', null),
        du([Object(Rs.decorator)()], Vl.prototype, 'search', null),
        Vl),
      ml =
        ((qu = function (e, t) {
          return (qu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          qu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      _l = function () {
        return (_l =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      bl =
        (ml(Gl, (Lu = Ua)),
        (Gl.prototype.fullUpdate = function (s, a, u) {
          return vu(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return yu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!u) throw new ne('organizationId', 'required');
                  if (
                    0 < this.host.config.maxMetadataKeyCount &&
                    Object.keys(a).length > this.host.config.maxMetadataKeyCount
                  )
                    throw new ne(
                      'entireData',
                      'invalid',
                      'Total number of metadata keys is ' +
                        Object.keys(a) +
                        ' and should not exceed ' +
                        this.host.config.maxMetadataKeyCount
                    );
                  for (t = 0, n = Object.entries(a); t < n.length; t++)
                    if (((r = n[t]), (o = r[0]), 'string' != typeof r[1]))
                      throw new ne(
                        'value',
                        'invalid',
                        'Value for metadata key ' + o + ' must be a string'
                      );
                  this.host.requireUser(), (s = this._resolveModelId(s)), (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this.host.api.metadata.update(s, a, u)];
                case 2:
                  return e.sent(), this.__injectMetadata(s, u, a), [2, a];
                case 3:
                  if ((i = e.sent()).response && 404 === i.response.status)
                    throw new G('metadata', s);
                  return [2, Promise.reject(i)];
                case 4:
                  return [2];
              }
            });
          });
        }),
        (Gl.prototype.update = function (r, o, i) {
          return vu(this, void 0, void 0, function () {
            var t, n;
            return yu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!i) throw new ne('organizationId', 'required');
                  return [4, this.find(r, i, { bypassCache: !0 })];
                case 1:
                  return (
                    (t = e.sent()), (n = Object.assign({}, t, o)), [2, this.fullUpdate(r, n, i)]
                  );
              }
            });
          });
        }),
        (Gl.prototype.find = function (r, o, i) {
          return (
            void 0 === i && (i = {}),
            vu(this, void 0, void 0, function () {
              var t, n;
              return yu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!o) throw new ne('organizationId', 'required');
                    if (
                      ((i = ee.a.defaults(i, { bypassCache: !1, ignoreNotFound: !1 })),
                      this.host.requireUser(),
                      (r = this._resolveModelId(r)),
                      !i.bypassCache && (t = this.get(r, o)))
                    )
                      return [2, t];
                    e.label = 1;
                  case 1:
                    return e.trys.push([1, 3, , 4]), [4, this.host.api.metadata.find(r, o)];
                  case 2:
                    return (t = e.sent()), this.__injectMetadata(r, o, t), [2, t];
                  case 3:
                    if (!(n = e.sent()).response || 404 !== n.response.status)
                      return [2, Promise.reject(n)];
                    if (!i.ignoreNotFound) throw new G('metadata', r);
                    return [3, 4];
                  case 4:
                    return [2];
                }
              });
            })
          );
        }),
        (Gl.prototype.findMulti = function (i, s, a) {
          return (
            void 0 === a && (a = {}),
            vu(this, void 0, void 0, function () {
              var t,
                n,
                r,
                o = this;
              return yu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!s) throw new ne('organizationId', 'required');
                    return (
                      this.host.requireUser(),
                      (i = ee.a.uniq(Na(i).map(this._resolveModelId))),
                      (t = ee.a.chunk(i, 20)),
                      (n = t.map(function (e) {
                        return o.__findMultiPaged(e, s, a);
                      })),
                      [4, Promise.all(n)]
                    );
                  case 1:
                    return (
                      (r = e.sent()),
                      [
                        2,
                        ee.a.assign.apply(
                          ee.a,
                          (function () {
                            for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                              e += arguments[t].length;
                            var r = Array(e),
                              o = 0;
                            for (t = 0; t < n; t++)
                              for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++)
                                r[o] = i[s];
                            return r;
                          })([{}], r)
                        ),
                      ]
                    );
                }
              });
            })
          );
        }),
        (Gl.prototype.__findMultiPaged = function (h, p, e) {
          return (
            void 0 === e && (e = {}),
            vu(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a, u, c, l, d;
              return yu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [
                      4,
                      this.host.api.entities.findMulti({
                        users: [],
                        metadata: h,
                        organizationId: p,
                      }),
                    ];
                  case 1:
                    for (t = e.sent().metadata, n = {}, r = 0, o = t; r < o.length; r++)
                      for (i = o[r], s = 0, a = Object.entries(i); s < a.length; s++)
                        (u = a[s]),
                          (c = u[0]),
                          (l = u[1]) && ((d = this.__injectMetadata(c, p, l)), (n[c] = d));
                    return [2, n];
                }
              });
            })
          );
        }),
        (Gl.prototype.get = function (e, t) {
          var n = 'metadata:' + e + ':' + t;
          return this.host.models.Metadata.get(n) || null;
        }),
        (Gl.prototype.__injectMetadata = function (e, t, n) {
          var r = 'metadata:' + e + ':' + t;
          return this.host.models.Metadata.inject({
            id: r,
            data: n,
            entityId: e,
            organizationId: t,
          });
        }),
        fu([Object(Rs.decorator)()], Gl.prototype, 'find', null),
        fu([Object(Rs.decorator)()], Gl.prototype, 'findMulti', null),
        Gl),
      wl =
        ((Uu = function (e, t) {
          return (Uu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Uu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Il = { account: 'user', group: 'group' },
      Ol = new Set(Object.keys(Il)),
      Tl =
        (wl(Fl, (xu = Ua)),
        (Fl.prototype.mounted = function () {
          (this._fetched = !1), (this._muteEntriesByConversationHandle = {});
        }),
        (Fl.prototype.dispose = function () {
          (this._fetched = !1), (this._muteEntriesByConversationHandle = null);
        }),
        (Fl.prototype.findAll = function () {
          return gu(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a;
            return mu(this, function (e) {
              switch (e.label) {
                case 0:
                  return this._fetched ? [3, 2] : [4, this.host.api.mute.findAll()];
                case 1:
                  for (t = e.sent(), n = 0, r = t; n < r.length; n++)
                    (o = r[n]),
                      Ol.has(o.sender_type) &&
                        ((i = this._parseMuteEntry(o)),
                        (s = i.conversationId),
                        (a = i.entry),
                        this._addEntry(s, a));
                  (this._fetched = !0), (e.label = 2);
                case 2:
                  return [2, Object.values(this._muteEntriesByConversationHandle)];
              }
            });
          });
        }),
        (Fl.prototype._removeAllEntries = function () {
          if (this.config.condensedReplays)
            for (var e = 0, t = this.host.conversations.getAll(); e < t.length; e++) {
              var n = t[e];
              n.muted && this._removeEntry(n.id);
            }
          else
            for (
              var r = 0, o = Object.keys(this._muteEntriesByConversationHandle);
              r < o.length;
              r++
            ) {
              var i = o[r];
              this._removeEntry(i);
            }
        }),
        (Fl.prototype._getByConversationHandle = function (e) {
          var t = this._muteEntriesByConversationHandle[e];
          return t
            ? t.expiresAt < Date.now()
              ? (delete this._muteEntriesByConversationHandle[e], null)
              : t
            : null;
        }),
        (Fl.prototype.unmuteAll = function () {
          return gu(this, void 0, void 0, function () {
            return mu(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.api.mute.unmuteAll()];
                case 1:
                  return e.sent(), this._removeAllEntries(), [2];
              }
            });
          });
        }),
        (Fl.prototype.muteConversation = function (i, s) {
          return gu(this, void 0, void 0, function () {
            var t, n, r, o;
            return mu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this.__validateDurationInMinutes(s),
                    (i = this._resolveModelId(i)),
                    !(t = this._resolveEntity(i, 'conversation')))
                  )
                    throw new Error('conversation ' + i + ' not found');
                  return (
                    (i = t.id),
                    (n = t.counterPartyId),
                    (r = t.counterPartyType),
                    (o = t.organizationId),
                    'user' !== r
                      ? [3, 2]
                      : [4, this.host.api.mute.muteUser(n, s, o, { recipientOrganizationId: o })]
                  );
                case 1:
                  return (
                    e.sent(), this._addEntry(i, { durationInMinutes: s, organizationId: o }), [3, 4]
                  );
                case 2:
                  return 'group' !== r ? [3, 4] : [4, this.host.api.mute.muteGroup(n, s, o)];
                case 3:
                  e.sent(),
                    this._addEntry(i, { durationInMinutes: s, organizationId: o }),
                    (e.label = 4);
                case 4:
                  return [2];
              }
            });
          });
        }),
        (Fl.prototype.unmuteConversation = function (i) {
          return gu(this, void 0, void 0, function () {
            var t, n, r, o;
            return mu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this._resolveEntity(i, 'conversation')))
                    throw new Error('conversation ' + i + ' not found');
                  return (
                    (i = t.id),
                    (n = t.counterPartyId),
                    (r = t.counterPartyType),
                    (o = t.organizationId),
                    'user' !== r
                      ? [3, 2]
                      : [4, this.host.api.mute.unmuteUser(n, o, { recipientOrganizationId: o })]
                  );
                case 1:
                  return e.sent(), this._removeEntry(i), [3, 4];
                case 2:
                  return 'group' !== r ? [3, 4] : [4, this.host.api.mute.unmuteGroup(n, o)];
                case 3:
                  e.sent(), this._removeEntry(i), (e.label = 4);
                case 4:
                  return [2];
              }
            });
          });
        }),
        (Fl.prototype.reactToMuteEvent = function (e) {
          var t = e.data;
          if ((t = Ta(t)).token === this.host.currentUser.id) {
            var n = t.action;
            if ('clear' !== n) {
              var r = this._parseMuteEntry(t),
                o = r.conversationId,
                i = r.entry;
              'add' === n ? this._addEntry(o, i) : this._removeEntry(o);
            } else this._removeAllEntries();
          }
        }),
        (Fl.prototype.getById = function (e) {
          return e.startsWith('mute:') || (e = 'mute:' + e), this.host.models.Mute.get(e);
        }),
        (Fl.prototype.__validateDurationInMinutes = function (e) {
          (e < 0 || 525600 < e || e % 1 != 0) &&
            za.raise(
              'durationInMinutes',
              'invalid',
              'should be a positive integer from 1 to 525600 (1 year)'
            );
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([Object(Rs.decorator)()], Fl.prototype, 'findAll', null),
        Fl),
      El =
        (((Nu = function (e, t) {
          return (Nu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Nu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        })(Bl, (ku = Ua)),
        (Bl.prototype.emit = function (e) {
          this.EVENTS[e.type]
            ? this.EVENTS[e.type].call(this, e)
            : this.logger.info('unhandled event: ' + e.type, e.data);
        }),
        Bl),
      Rl =
        ((zu = function (e, t) {
          return (zu =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          zu(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Al = function () {
        return (Al =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Cl =
        (Rl(Dl, (Mu = Ua)),
        (Dl.prototype.mounted = function () {
          this.events.mounted(),
            this.events.on('connected', this._emitConnected),
            this.events.on('disconnected', this._emitDisconnected),
            this.events.on('event', this._emitEvent);
        }),
        (Dl.prototype.dispose = function () {
          this.events.removeListener('connected', this._emitConnected),
            this.events.removeListener('disconnected', this._emitDisconnected),
            this.events.removeListener('event', this._emitEvent),
            this.events.dispose();
        }),
        (Dl.prototype.signIn = function () {
          return _u(this, void 0, void 0, function () {
            var t, n, r;
            return bu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this.host.getAuth()) || !t.key || !t.secret) throw new Y();
                  return (
                    this.emit('signingIn'),
                    this.events.isSignedIn
                      ? [3, 2]
                      : [4, this.host.api.notifications.signIn(t.key, t.secret)]
                  );
                case 1:
                  (n = e.sent()), this.events.setAuth(n), (e.label = 2);
                case 2:
                  return (r = this.events.getAuth()), this.emit('signedIn', r), [2, r];
              }
            });
          });
        }),
        (Dl.prototype.signOut = function (e) {
          var t = (void 0 === e ? {} : e).fromServer,
            o = void 0 !== t && t;
          return _u(this, void 0, void 0, function () {
            var t, n, r;
            return bu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = this.events.getAuth())) return [2, !1];
                  this.emit('signingOut', { fromServer: o }), (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 3, , 4]),
                    [4, this.host.api.notifications.signOut(t.key, t.secret)]
                  );
                case 2:
                  return e.sent(), (n = !0), [3, 4];
                case 3:
                  return (
                    (r = e.sent()),
                    this.httpClient.isUnauthorizedError(r)
                      ? ((n = !0), [3, 4])
                      : [2, Promise.reject(r)]
                  );
                case 4:
                  return (
                    n && this.events.removeAuth(),
                    this.emit('signedOut', { fromServer: o, signedOut: n }),
                    [2, n]
                  );
              }
            });
          });
        }),
        Object.defineProperty(Dl.prototype, 'isSignedIn', {
          get: function () {
            return this.events.isSignedIn;
          },
          enumerable: !1,
          configurable: !0,
        }),
        (Dl.prototype.authenticate = function (t, n) {
          return _u(this, void 0, void 0, function () {
            return bu(this, function (e) {
              return this.events.setAuth({ key: t, secret: n }), [2];
            });
          });
        }),
        (Dl.prototype.connect = function () {
          return this.events.connect();
        }),
        (Dl.prototype.disconnect = function (e) {
          var t = (void 0 === e ? {} : e).source;
          return this.events.disconnect({ source: t });
        }),
        (Dl.prototype.reconnect = function () {
          return this.events.reconnect();
        }),
        Object.defineProperty(Dl.prototype, 'hasConnection', {
          get: function () {
            return this.events.hasConnection;
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(Dl.prototype, 'isConnected', {
          get: function () {
            return this.events.isConnected;
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(Dl.prototype, 'isOpen', {
          get: function () {
            return this.events.isOpen;
          },
          enumerable: !1,
          configurable: !0,
        }),
        (Dl.prototype.reactToMessageEvent = function (e) {
          var t = e.data;
          t = Ta(t);
          var n = this.host.models.Message.createInstance(Al(Al({}, t), { id: q.a.v4() }));
          this.emit('unread:change', n.unreadMessageCount), this.emit('message', n);
        }),
        (Dl.prototype.reactToMessageStatusEvent = function (e) {
          this.emit('unread:change', e.unread_message_count);
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })(
          [
            Object(Rs.decorator)({
              serializeArguments: function (e) {
                return '';
              },
            }),
          ],
          Dl.prototype,
          'signOut',
          null
        ),
        Dl),
      Sl = d(12),
      Pl = d.n(Sl),
      jl =
        ((ju = function (e, t) {
          return (ju =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          ju(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Ml = function () {
        return (Ml =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      zl =
        (jl(ql, (Pu = Ua)),
        (ql.prototype.mounted = function () {
          (this._deferConversationChanges = !1),
            (this._lastMyRoles = []),
            this.host.models.Conversation.on('afterInject', this._onChangeConversation),
            this.host.models.Conversation.on('afterEject', this._onChangeConversation),
            this.host.models.User.on('afterInject', this._onChangeUser);
        }),
        (ql.prototype.dispose = function () {
          (this._deferConversationChanges = !1),
            (this._lastMyRoles = []),
            this.host.models.Conversation.removeListener('afterInject', this._onChangeConversation),
            this.host.models.Conversation.removeListener('afterEject', this._onChangeConversation),
            this.host.models.User.removeListener('afterInject', this._onChangeUser),
            Rs.decorator.clear(this._findAll);
        }),
        (ql.prototype.create = function (r) {
          return (
            void 0 === r &&
              (r = {
                allowPublicGroups: void 0,
                autologoutTime: void 0,
                deleteOnRead: void 0,
                groupLifespan: void 0,
                lifecycleCallback: void 0,
                name: void 0,
                pinLock: void 0,
                settingsRestricted: void 0,
                ttl: void 0,
                welcomeEmailSettings: void 0,
              }),
            Iu(this, void 0, void 0, function () {
              var n = this;
              return Ou(this, function (e) {
                return (
                  this.host.requireUser(),
                  [
                    2,
                    this.httpClient.post('/v2/organization', { data: r }).then(function (e) {
                      var t = e.getHeader('TT-X-Organization-Key');
                      return n.host.models.Organization.inject({ id: t, name: r.name });
                    }),
                  ]
                );
              });
            })
          );
        }),
        (ql.prototype.update = function (r) {
          return (
            void 0 === r &&
              (r = {
                allowPublicGroups: void 0,
                autologoutTime: void 0,
                autoSendWelcomeEmail: void 0,
                deleteOnRead: void 0,
                groupLifespan: void 0,
                id: void 0,
                lifecycleCallback: void 0,
                name: void 0,
                pinLock: void 0,
                settingsRestricted: void 0,
                ttl: void 0,
                welcomeEmailLogo: void 0,
                welcomeEmailSettings: void 0,
              }),
            Iu(this, void 0, void 0, function () {
              var t,
                n = this;
              return Ou(this, function (e) {
                return (
                  this.host.requireUser(),
                  (t = In.underscoreObject({
                    allowPublicGroups: r.allowPublicGroups,
                    autologoutTime: r.autologoutTime,
                    autoSendWelcomeEmail: r.autoSendWelcomeEmail,
                    dor: r.deleteOnRead,
                    groupLifespan: r.groupLifespan,
                    lifecycleCallback: r.lifecycleCallback,
                    name: r.name,
                    pinLock: r.pinLock,
                    settingsRestricted: r.settingsRestricted,
                    ttl: r.ttl,
                    welcomeEmailLogo: r.welcomeEmailLogo,
                    welcomeEmailSettings: r.welcomeEmailSettings,
                  })),
                  [
                    2,
                    this.httpClient
                      .post('/v2/organization/:id', { urlParams: { id: r.id }, data: t })
                      .then(function (e) {
                        return n.host.models.Organization.inject(Ml({ id: r.id }, t));
                      }),
                  ]
                );
              });
            })
          );
        }),
        (ql.prototype.findAll = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.filter,
            r = void 0 === n ? { onlyApproved: !1 } : n,
            o = t.findRoles,
            i = void 0 === o || o;
          return Iu(this, void 0, void 0, function () {
            var t,
              n = this;
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.host.requireUser(), [4, this._findAll()];
                case 1:
                  return (t = e.sent()), i ? [4, this.host.userRoles.findAll()] : [3, 3];
                case 2:
                  e.sent(), (e.label = 3);
                case 3:
                  return (
                    r.onlyApproved && (t = ee.a.filter(t, { pending: !1 })),
                    (t = ee.a.sortBy(t, function (e) {
                      return e.name.toLowerCase();
                    })).forEach(function (e) {
                      return n.__reloadConversations(e);
                    }),
                    [2, t]
                  );
              }
            });
          });
        }),
        (ql.prototype.refreshAll = function () {
          return Iu(this, void 0, void 0, function () {
            var t;
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return Rs.decorator.clear(this._findAll), [4, this._findAll()];
                case 1:
                  return (t = e.sent()), [4, this.host.userRoles.refreshAll()];
                case 2:
                  return e.sent(), [2, t];
              }
            });
          });
        }),
        (ql.prototype._findAll = function () {
          return Iu(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.api.organizations.findAllOfUser(this.host.currentUserId)];
                case 1:
                  for (t = e.sent(), n = [], r = 0, o = t; r < o.length; r++)
                    (i = o[r]),
                      (s = this.host.models.Organization.inject(i)),
                      this.host.models.Organization.removePlaceholder({ entity: s, attrs: i }),
                      n.push(s);
                  return [2, n];
              }
            });
          });
        }),
        (ql.prototype.find = function (r, o) {
          return (
            void 0 === o && (o = {}),
            Iu(this, void 0, void 0, function () {
              var t, n;
              return Ou(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = ee.a.defaults(o, { bypassCache: !1, ignoreNotFound: !1 })),
                      this.host.requireUser(),
                      o.bypassCache || !(t = this.host.models.Organization.get(r)) || t.$placeholder
                        ? [4, this.host.api.organizations.find(this.host.currentUserId, r)]
                        : [2, t]
                    );
                  case 1:
                    return (n = e.sent()), [4, this.host.userRoles.findAll({ organizationId: r })];
                  case 2:
                    if ((e.sent(), n))
                      (t = this.host.models.Organization.inject(n)), this.__reloadConversations(t);
                    else if (!o.ignoreNotFound) throw new G(this.host.models.Organization.name, r);
                    return [2, t];
                }
              });
            })
          );
        }),
        (ql.prototype._getAllowedSenders = function (e) {
          var t = e.id,
            n = [],
            r = this.host.currentUser;
          if (r) {
            for (var o = 0, i = r.roles; o < i.length; o++) {
              var s = i[o];
              s.organizationId === t && n.push(s);
            }
            n.push(r);
          }
          return n;
        }),
        (ql.prototype.getPendingEulas = function () {
          return Iu(this, void 0, void 0, function () {
            var t, n;
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this._findAll()];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = t
                      .filter(function (e) {
                        return e.eulaEnabled && !e.isEulaAccepted;
                      })
                      .reduce(function (e, t) {
                        var n = t.id,
                          r = t.eulaUrl;
                        return e[r] ? e[r].push(n) : (e[r] = [n]), e;
                      }, {})),
                    [
                      2,
                      Object.entries(n).map(function (e) {
                        return { url: e[0], organizationIds: e[1] };
                      }),
                    ]
                  );
              }
            });
          });
        }),
        (ql.prototype.findEulaContent = function (t) {
          return Iu(this, void 0, void 0, function () {
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = t.replace('http://', 'https://')),
                    [
                      4,
                      this.httpClient.get(t, {
                        withCredentials: !1,
                        withHeaders: !1,
                        resFormat: 'text',
                      }),
                    ]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (ql.prototype.getSettingValue = function (e, t) {
          e = this._resolveModelId(e);
          var n = this.getById(e);
          return n ? n.getSettingValue(t) : null;
        }),
        (ql.prototype.getAll = function () {
          return this.host.models.Organization.getAll();
        }),
        (ql.prototype.getById = function (e) {
          return this.host.models.Organization.get(e);
        }),
        (ql.prototype.getMultiById = function (e) {
          return this.host.models.Organization.getMulti(e);
        }),
        (ql.prototype.__reloadConversations = function (e) {
          if (e) {
            for (
              var t = 0, n = 0, r = 0, o = 0, i = 0, s = 0, a = 0, u = 0, c = e.conversations;
              u < c.length;
              u++
            ) {
              var l = c[u],
                d = l.highestSortNumber,
                h = l.unreadCount,
                p = l.unreadPriorityCount,
                f = l.lastIncomingMessageSortNumber,
                v = l.shouldDisplay,
                y = l.metadata;
              v &&
                ((t = Math.max(t, d)),
                y && 'patient_messaging' === y.feature_service
                  ? ((n += h), (i += p), (o += h), (a += p))
                  : ((r += h), (s += p)),
                !this.config.condensedReplays &&
                  f &&
                  (!e.lastIncomingMessageSortNumber || e.lastIncomingMessageSortNumber < f) &&
                  (e.lastIncomingMessageSortNumber = f));
            }
            (e.highestSortNumber = t),
              (e.unreadCount = r + n),
              (e.unreadPriorityCount = s + i),
              (e.networks.provider.unreadCount = r),
              (e.networks.provider.unreadPriorityCount = s),
              (e.networks.patient.unreadCount = n),
              (e.networks.patient.unreadPriorityCount = i),
              (e.networks.virtualWaitingRoom.unreadCount = o),
              (e.networks.virtualWaitingRoom.unreadPriorityCount = a),
              this.host.models.Organization.inject(e),
              e.emit('change');
          }
        }),
        (ql.prototype.reactToOrganizationPreferencesEvent = function (e) {
          this.emit('preferences:change', In.camelizeObject(e));
        }),
        wu([Object(Rs.decorator)()], ql.prototype, 'findAll', null),
        wu([Object(Rs.decorator)()], ql.prototype, 'refreshAll', null),
        wu([Object(Rs.decorator)({ memoize: !0 })], ql.prototype, '_findAll', null),
        wu([Object(Rs.decorator)()], ql.prototype, 'find', null),
        ql),
      kl =
        ((Su = function (e, t) {
          return (Su =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Su(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Nl = function () {
        return (Nl =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      xl = ['patient', 'user'],
      Ul =
        (kl(Ll, (Cu = Ua)),
        (Ll.prototype.create = function (e) {
          var n = e.contacts,
            r = e.dob,
            o = e.firstName,
            i = e.lastName,
            s = e.mrn,
            a = e.organizationId,
            u = e.phoneNumber,
            c = e.gender;
          return Tu(this, void 0, void 0, function () {
            var t;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!s) throw new ne('mrn', 'required');
                  if (!o) throw new ne('firstName', 'required');
                  if (!i) throw new ne('lastName', 'required');
                  if (!u) throw new ne('phoneNumber', 'required');
                  if (!mo(u)) throw new ne('phoneNumber', 'not a valid format');
                  if (!r) throw new ne('dob', 'required');
                  if (!/^(19|20)\d\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$/.test(r))
                    throw new ne('dob', 'not a valid format of YYYY-MM-DD');
                  if (!c) throw new ne('gender', 'required');
                  if (!a) throw new ne('organizationId', 'required');
                  return (
                    n &&
                      n.length &&
                      (function (e) {
                        if (2 < e.length) throw new ne('contacts count', 'larger than 2');
                        for (var t = 0; t < e.length; t++) {
                          var n = e[t],
                            r = n.firstName,
                            o = n.lastName,
                            i = n.phoneNumber,
                            s = n.relation;
                          if (!r) throw new ne('contact firstName', 'required');
                          if (!o) throw new ne('contact lastName', 'required');
                          if (!i) throw new ne('contact phoneNumber', 'required');
                          if (!s) throw new ne('contact relation', 'required');
                        }
                        if (2 === e.length && Object(N.isEqual)(e[0], e[1]))
                          throw new ne('contacts being unique', 'required');
                      })(n),
                    [
                      4,
                      this.host.api.patients.create({
                        contacts: (function (e) {
                          return (
                            void 0 === e && (e = []),
                            e.map(function (e) {
                              var t = e.phoneNumber,
                                n = (function (e, t) {
                                  var n = {};
                                  for (var r in e)
                                    Object.prototype.hasOwnProperty.call(e, r) &&
                                      t.indexOf(r) < 0 &&
                                      (n[r] = e[r]);
                                  if (
                                    null != e &&
                                    'function' == typeof Object.getOwnPropertySymbols
                                  ) {
                                    var o = 0;
                                    for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
                                      t.indexOf(r[o]) < 0 &&
                                        Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
                                        (n[r[o]] = e[r[o]]);
                                  }
                                  return n;
                                })(e, ['phoneNumber']);
                              return Nl(Nl({}, n), { phoneNumber: wo(t) });
                            })
                          );
                        })(n),
                        dob: r,
                        firstName: o,
                        gender: c,
                        lastName: i,
                        mrn: s,
                        organizationId: a,
                        phoneNumber: wo(u),
                      }),
                    ]
                  );
                case 1:
                  return (t = e.sent()), [2, this.host.models.User.inject(t.entity)];
              }
            });
          });
        }),
        (Ll.prototype.update = function (e) {
          var n = e.currentEditVersion,
            r = e.dob,
            o = e.firstName,
            i = e.patientId,
            s = e.lastName,
            a = e.organizationId,
            u = e.phoneNumber,
            c = e.gender;
          return Tu(this, void 0, void 0, function () {
            var t;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('currentEditVersion', 'required');
                  if (!a) throw new ne('organizationId', 'required');
                  if (!i) throw new ne('patientId', 'required');
                  return [
                    4,
                    this.host.api.patients.update({
                      dob: r,
                      editVersion: nd(n),
                      firstName: o,
                      gender: c,
                      patientId: i,
                      lastName: s,
                      organizationId: a,
                      phoneNumber: wo(u),
                    }),
                  ];
                case 1:
                  return (t = e.sent()), [2, this.host.models.User.inject(t.entity)];
              }
            });
          });
        }),
        (Ll.prototype.delete = function (n, r) {
          return Tu(this, void 0, void 0, function () {
            var t;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('organizationId', 'required');
                  return (
                    (t = this.host.models.Patient.get(n)) && this.host.models.Patient.eject(t),
                    [4, this.host.api.patients.delete(n, r)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Ll.prototype.createContact = function (e) {
          var n = e.firstName,
            r = e.lastName,
            o = e.organizationId,
            i = e.patientId,
            s = e.phoneNumber,
            a = e.relation;
          return Tu(this, void 0, void 0, function () {
            var t;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!i) throw new ne('patientId', 'required');
                  if (!n) throw new ne('firstName', 'required');
                  if (!r) throw new ne('lastName', 'required');
                  if (!s) throw new ne('phoneNumber', 'required');
                  if (!mo(s)) throw new ne('phoneNumber', 'not a valid format');
                  if (!a) throw new ne('relation', 'required');
                  if (!o) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.patients.createContact({
                      firstName: n,
                      lastName: r,
                      organizationId: o,
                      patientId: i,
                      phoneNumber: wo(s),
                      relation: a,
                    }),
                  ];
                case 1:
                  return (t = e.sent()), [2, this.host.models.User.inject(t.entity)];
              }
            });
          });
        }),
        (Ll.prototype.updateContact = function (e) {
          var n = e.contactId,
            r = e.currentEditVersion,
            o = e.firstName,
            i = e.lastName,
            s = e.organizationId,
            a = e.patientId,
            u = e.phoneNumber,
            c = e.relation;
          return Tu(this, void 0, void 0, function () {
            var t;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('currentEditVersion', 'required');
                  if (!s) throw new ne('organizationId', 'required');
                  if (!a) throw new ne('patientId', 'required');
                  if (!n) throw new ne('contactId', 'required');
                  if (!o) throw new ne('firstName', 'required');
                  if (!i) throw new ne('lastName', 'required');
                  if (!u) throw new ne('phoneNumber', 'required');
                  if (!mo(u)) throw new ne('phoneNumber', 'not a valid format');
                  if (!c) throw new ne('relation', 'required');
                  return [
                    4,
                    this.host.api.patients.updateContact({
                      contactId: n,
                      editVersion: nd(r),
                      firstName: o,
                      lastName: i,
                      organizationId: s,
                      patientId: a,
                      phoneNumber: wo(u),
                      relation: c,
                    }),
                  ];
                case 1:
                  return (t = e.sent()), [2, this.host.models.User.inject(t.entity)];
              }
            });
          });
        }),
        (Ll.prototype.deleteContact = function (e) {
          var n = e.contactId,
            r = e.organizationId,
            o = e.patientId;
          return Tu(this, void 0, void 0, function () {
            var t;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('contactId', 'required');
                  if (!r) throw new ne('organizationId', 'required');
                  if (!o) throw new ne('patientId', 'required');
                  return [
                    4,
                    this.host.api.patients.deleteContact({
                      contactId: n,
                      patientId: o,
                      organizationId: r,
                    }),
                  ];
                case 1:
                  return (
                    e.sent(),
                    (t = this.host.models.PatientContact.get('patientContact:' + n)) &&
                      this.host.models.PatientContact.eject(t),
                    [2]
                  );
              }
            });
          });
        }),
        (Ll.prototype.login = function (e) {
          var a = e.accessToken,
            u = e.dateOfBirth,
            c = e.linkToken,
            l = e.sessions;
          return Tu(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return Eu(this, function (e) {
              switch (e.label) {
                case 0:
                  return this.host.emit('signingIn'), [4, this.host.api.patients.login(c, a, u, l)];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = t.api_key),
                    (r = t.api_secret),
                    (o = t.group_id),
                    (i = t.organization_id),
                    this.host.configure({
                      events: Nl(Nl({}, this.host.config.events), { singleConversation: o }),
                    }),
                    this.host._setAuth({ key: n, secret: r }),
                    this.host.setDefaultOrganization(i),
                    [4, this.host.users.findMe({ ignoreNotFound: !0 })]
                  );
                case 2:
                  return (
                    (s = e.sent()),
                    this.host._setCurrentUser(s),
                    this.host.emit('signedIn', s, this.host.getAuth()),
                    this.host.messages._fetchAttachmentTokens(),
                    [2, t]
                  );
              }
            });
          });
        }),
        (Ll.prototype.loginCheck = function (e) {
          var t = e.linkToken,
            n = e.sessions;
          return Tu(this, void 0, void 0, function () {
            return Eu(this, function (e) {
              return [2, this.host.api.patients.loginCheck(t, n)];
            });
          });
        }),
        (Ll.prototype.requestAccessToken = function (t) {
          return Tu(this, void 0, void 0, function () {
            return Eu(this, function (e) {
              return [2, this.host.api.patients.requestAccessToken(t)];
            });
          });
        }),
        (Ll.prototype.csvUpload = function (t, n) {
          return Tu(this, void 0, void 0, function () {
            return Eu(this, function (e) {
              return [2, this.host.api.patients.csvUpload(t, n)];
            });
          });
        }),
        (Ll.prototype.getWhiteLabel = function (t) {
          return Tu(this, void 0, void 0, function () {
            return Eu(this, function (e) {
              return [2, this.host.api.patients.getWhiteLabel(t)];
            });
          });
        }),
        (Ll.prototype.setWhiteLabel = function (t, n) {
          return Tu(this, void 0, void 0, function () {
            return Eu(this, function (e) {
              return [2, this.host.api.patients.setWhiteLabel(t, n)];
            });
          });
        }),
        (Ll.prototype._createPatientGroupMetadata = function (e) {
          var t = e.displayName,
            n = e.patient,
            r = e.id;
          return {
            feature_service: 'patient_messaging',
            is_patient_contact: 'false',
            patient_dob: n.dob,
            patient_gender: n.gender,
            patient_id: r,
            patient_mrn: n.mrn,
            patient_name: t,
            phone_number: n.phoneNumber,
            sms_opted_out: n.smsOptedOut,
          };
        }),
        (Ll.prototype._createPatientContactGroupMetadata = function (e) {
          var t = e.patient,
            n = e.patientContact,
            r = e.id,
            o = t.dob,
            i = t.gender,
            s = t.mrn,
            a = t.user,
            u = n.phoneNumber,
            c = n.relation,
            l = n.smsOptedOut;
          return {
            feature_service: 'patient_messaging',
            is_patient_contact: 'true',
            patient_contact_id: r,
            patient_dob: o,
            patient_gender: i,
            patient_id: a.id,
            patient_mrn: s,
            patient_name: a.displayName,
            phone_number: u,
            relation_name: c,
            sms_opted_out: l,
          };
        }),
        (Ll.prototype.getAll = function () {
          return this.host.models.Patient.getAll();
        }),
        (Ll.prototype.getById = function (e) {
          return (e = this.__resolvePatientId(e)), this.host.models.Patient.get('patient:' + e);
        }),
        Ll);
    function Ll() {
      var t = (null !== Cu && Cu.apply(this, arguments)) || this;
      return (
        (t.__resolvePatientId = function (e) {
          if ('string' != typeof e) {
            if (!xl.includes(e.$entityType)) return e;
            e = t._resolveModelId(e);
          }
          return e.replace('patient:', '');
        }),
        t
      );
    }
    function ql() {
      var l = (null !== Pu && Pu.apply(this, arguments)) || this;
      return (
        (l._onChangeConversation = function (e, t) {
          var n = t.organization;
          n &&
            (l.host.currentlyServingOfflineMessages ||
              l._deferConversationChanges ||
              l.__reloadConversations(n));
        }),
        (l._onChangeUser = function (e, t) {
          for (
            var n = t.id, r = l.host.models.Organization.getAll(), o = 0, i = r;
            o < i.length;
            o++
          )
            (c = i[o]).autoForwardReceiverId === n &&
              c.autoForwardReceiver !== t &&
              l.host.models.Organization.inject(c);
          if (
            t === l.host.currentUser &&
            !l.host.currentlyServingOfflineMessages &&
            !l._deferConversationChanges
          ) {
            var s = l.host.currentUser.roles;
            if (!Pl()(s, l._lastMyRoles)) {
              l._lastMyRoles = (function () {
                for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
                var r = Array(e),
                  o = 0;
                for (t = 0; t < n; t++)
                  for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++) r[o] = i[s];
                return r;
              })(s);
              for (var a = 0, u = r; a < u.length; a++) {
                var c = u[a];
                Pl()(c.allowedSenders, l._getAllowedSenders(c)) ||
                  l.host.models.Organization.inject(c);
              }
            }
          }
        }),
        (l.getPreferences = function (t) {
          return Iu(l, void 0, void 0, function () {
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!t) throw new ne('organizationId', 'required');
                  return [4, this.host.api.organizations.getPreferences(t)];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (l.editPreferences = function (e) {
          var t = e.quickReplies,
            n = void 0 === t ? [] : t,
            r = e.organizationId;
          return Iu(l, void 0, void 0, function () {
            return Ou(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('quickReplies', 'required');
                  if (!r) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.organizations.editPreferences({
                      organizationId: r,
                      quickReplies: n,
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        l
      );
    }
    function Dl(e, t) {
      var n = Mu.call(this, e, t) || this;
      return (
        (n._emitConnected = function () {
          n.emit('connected');
        }),
        (n._emitDisconnected = function (e) {
          n.emit('disconnected', e);
        }),
        (n._emitEvent = function (e) {
          n.emit('event', e);
        }),
        (n.events = new ol(e, Al(Al({}, t), { endpointType: 'simpleNotifications' }))),
        n
      );
    }
    function Bl(e, t) {
      var n = ku.call(this, e, t) || this;
      n.EVENTS = {
        'message|group_message': function (e) {
          this.host.notifications.reactToMessageEvent(e);
        },
        'message:status|group:message:status': function (e) {
          this.host.notifications.reactToMessageStatusEvent(e);
        },
        remote_wipe: function (e) {
          this.host.notifications.disconnect({ source: 'Notifications remote_wipe' }),
            this.host.notifications.signOut({ fromServer: !0 });
        },
        'sse:heartbeat': function () {
          return null;
        },
      };
      for (var r = 0, o = Object.entries(n.EVENTS); r < o.length; r++) {
        var i = o[r],
          s = i[0],
          a = i[1];
        if (s.includes('|')) {
          for (var u = 0, c = s.split('|'); u < c.length; u++) {
            var l = c[u];
            n.EVENTS[l] = a;
          }
          delete n.EVENTS[s];
        }
      }
      return n;
    }
    function Fl() {
      var c = (null !== xu && xu.apply(this, arguments)) || this;
      return (
        (c._parseMuteEntry = function (e) {
          var t,
            n = +e.mute_duration,
            r = e.mute_start,
            o = e.caller_organization || e.organization_id;
          if (((r = r && 1e3 * +r), c.config.condensedReplays)) t = e.conversation_id;
          else {
            var i = Il[e.sender_type],
              s = e.sender_token;
            t = c.host.conversations.getConversationKey(i, s, o);
          }
          return {
            conversationId: t,
            entry: { durationInMinutes: n, organizationId: o, startedAt: r },
          };
        }),
        (c._addEntry = function (e, t) {
          var n = t.durationInMinutes,
            r = t.organizationId,
            o = t.startedAt,
            i = void 0 === o ? Date.now() : o,
            s = +i + 60 * n * 1e3;
          if (!(s < Date.now())) {
            var a = c.host.models.Mute.inject({
              id: 'mute:' + e,
              conversationId: e,
              durationInMinutes: n,
              expiresAt: s,
              organizationId: r,
              startedAt: i,
            });
            if (c.config.condensedReplays) {
              var u = c.host.conversations.getById(e);
              if (!u) return a;
              (u.muted = a), c.host.models.Conversation.inject(u);
            } else (c._muteEntriesByConversationHandle[e] = a), c.host.models.Conversation.touch(e);
            return a;
          }
        }),
        (c._removeEntry = function (e) {
          c.config.condensedReplays || delete c._muteEntriesByConversationHandle[e];
          var t = c.host.conversations.getById(e);
          t &&
            t.muted &&
            (c.host.models.Mute.eject(t.muted),
            (t.muted = null),
            c.host.models.Conversation.inject(t));
        }),
        c
      );
    }
    function Gl() {
      var e = (null !== Lu && Lu.apply(this, arguments)) || this;
      return (
        (e.__parseMessageMetadata = function (e) {
          var t = e.mimetype,
            n = e.payload,
            r = t.indexOf(';');
          if ((-1 < r && (t = t.slice(0, r)), 'application/json' !== t || 'string' != typeof n))
            return e;
          var o = void 0;
          try {
            o = JSON.parse(n);
          } catch (t) {
            return console.warn('Invalid metadata payload', e), null;
          }
          return _l(_l({}, e), { payload: o });
        }),
        e
      );
    }
    function Vl() {
      return (null !== Du && Du.apply(this, arguments)) || this;
    }
    function Kl() {
      var a = (null !== Fu && Fu.apply(this, arguments)) || this;
      return (
        (a.DELETE_ON_READ_MS = 6e4),
        (a.__retrieveSentMessage = function (h, e) {
          var p = e.instance;
          return au(a, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!(t = h.message_id))
                    throw new Error('Missing message_id from /message response');
                  return h.sort_number ? [3, 5] : [4, this.find(t, { instance: p, replace: !0 })];
                case 1:
                  return (n = e.sent())
                    ? [3, 4]
                    : [
                        4,
                        new Promise(function (e) {
                          return setTimeout(e, 1e3);
                        }),
                      ];
                case 2:
                  return e.sent(), [4, this.find(t, { instance: p, replace: !0 })];
                case 3:
                  (n = e.sent()), (e.label = 4);
                case 4:
                  return n && (p = n), [3, 8];
                case 5:
                  return (
                    void 0 === h.is_forwarded && (h.is_forwarded = !1),
                    (r = h.status || 'New'),
                    this.__setDefaultAttributes(h, { instance: p }),
                    ((p = this.host.models.Message.replaceExisting(h, {
                      instance: p,
                    })).$synced = void 0),
                    (o = p.counterPartyType),
                    (i = p.createdAt),
                    (s = p.group),
                    (a = p.recipientId),
                    (c = (u = s || {}).groupType),
                    (l = u.p2pRecipient),
                    (d = void 0),
                    c === si.ROLE_P2P && l
                      ? (d = 'role' === l.$entityType ? l.botUserId : l.id)
                      : 'user' === o && (d = a),
                    d
                      ? (this.__injectMessageStatus(p, { accountId: d, createdAt: i, status: r }),
                        [3, 8])
                      : [3, 6]
                  );
                case 6:
                  return c !== si.GROUP ? [3, 8] : [4, this.findRecipientStatus(p, { queue: !1 })];
                case 7:
                  e.sent(), (e.label = 8);
                case 8:
                  return [2, p];
              }
            });
          });
        }),
        (a.__generateAttachmentDescriptor = function (e) {
          var t = 'local:' + q.a.v4();
          'string' == typeof e ||
            e instanceof Buffer ||
            za.raise('attachment', 'invalid', 'attachment (string or Buffer) is invalid');
          var n,
            r = void 0,
            o = void 0,
            i = d(19),
            s = d(18),
            a = d(55),
            u = d(26);
          if ('string' == typeof e)
            (r = i.statSync(e).size), (o = a.lookup(e)), (n = s.basename(e));
          else {
            var c = u(e);
            c && ((n = 'attachment.' + c.ext), (o = c.mime)), (r = e.byteLength);
          }
          return {
            id: t,
            localPath: 'string' == typeof e ? e : null,
            localFile: e instanceof Buffer ? e : null,
            name: n,
            size: r,
            contentType: o,
            isLocal: !0,
          };
        }),
        (a.__retryApiSend = function (v) {
          return au(a, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p, f;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = v._originalBody),
                    (n = v.attachments),
                    (r = v.conversationId),
                    (o = v.counterPartyId),
                    (i = v.deleteOnRead),
                    (s = v.id),
                    (a = v.metadata),
                    (u = v.priority),
                    (c = v.recipientOrganizationId),
                    (l = v.senderOrganizationId),
                    (d = v.shouldEscalate),
                    (h = v.ttl),
                    (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 4, , 5]),
                    [
                      4,
                      this.host.api.messages.send({
                        attachment: ee.a.get(n, '0.localFile'),
                        body: t,
                        conversationId: r,
                        counterPartyId: o,
                        deleteOnRead: i,
                        escalate: d,
                        localId: s,
                        metadata: a,
                        priority: ai.toServer(u),
                        recipientOrganizationId: c,
                        senderOrganizationId: l,
                        ttl: h,
                      }),
                    ]
                  );
                case 2:
                  return (
                    (p = e.sent()),
                    this.host.config.condensedReplays && p.last_message && (p = p.last_message),
                    [4, this.__retrieveSentMessage(p, { instance: v })]
                  );
                case 3:
                  return (v = e.sent()), this.host.emit('message:sent', v), [3, 5];
                case 4:
                  return (
                    (f = e.sent()),
                    this.logger.warn('error while sending message', f),
                    (v.senderStatus = di.FAILED),
                    this.host.models.Message.inject(v),
                    [3, 5]
                  );
                case 5:
                  return [2, v];
              }
            });
          });
        }),
        (a.__retryApiForward = function (h) {
          return au(a, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  (t = h.conversationId),
                    (n = h.counterPartyId),
                    (r = h.id),
                    (o = h.metadata),
                    (i = h.originalMessageId),
                    (s = h.priority),
                    (a = h.recipientOrganizationId),
                    (u = h.senderOrganizationId),
                    (e.label = 1);
                case 1:
                  return (
                    e.trys.push([1, 4, , 5]),
                    [
                      4,
                      this.host.api.messages.forward(i, n, {
                        conversationId: t,
                        localId: r,
                        metadata: o,
                        priority: ai.toServer(s),
                        recipientOrganizationId: a,
                        senderOrganizationId: u,
                      }),
                    ]
                  );
                case 2:
                  return (
                    (c = e.sent()),
                    (l = c.message_id),
                    [4, this.find(l, { instance: h, replace: !0 })]
                  );
                case 3:
                  return (h = e.sent()), this.host.emit('message:sent', h), [3, 5];
                case 4:
                  return (
                    (d = e.sent()),
                    this.logger.error('error while forwarding message', d),
                    (h.senderStatus = di.FAILED),
                    this.host.models.Message.inject(h),
                    [3, 5]
                  );
                case 5:
                  return [2, h];
              }
            });
          });
        }),
        (a._resolveMessage = function (e) {
          return a.host.models.Message.is(e)
            ? e
            : 'string' == typeof e
            ? a.host.models.Message.get(e)
            : null;
        }),
        (a._looksLikeDistributionListMessage = function (e) {
          var t = e.body;
          if (!t) return !1;
          var n = t.match(/^\[(.+?)\]: /);
          return !!n && n[1];
        }),
        (a.__setDefaultAttributes = function (e, t) {
          var n = t.instance,
            r = {
              is_forwarded: n.isForwarded,
              attachments: n.attachments,
              conversationId: n.conversationId,
              counterParty: n.counterParty,
              senderStatus: di.SENT,
              shouldEscalate: !1,
            };
          return (
            n.isForwarded &&
              ((r.originalForwardedMessageCreatedAt = n.originalForwardedMessageCreatedAt),
              (r.originalMessageId = n.originalMessageId),
              n.originalSender && (r.originalSender = n.originalSender)),
            ee.a.defaults(e, r),
            e
          );
        }),
        (a.__flushSetMessageStatusesQueue = function () {
          if (
            0 <
            a._queuedSetMessageStatuses.deliveredIds.length +
              a._queuedSetMessageStatuses.readIds.length
          ) {
            var e = a._queuedSetMessageStatuses;
            (a._queuedSetMessageStatuses = { deliveredIds: [], readIds: [] }),
              a.__setMessagesStatus(e);
          }
        }),
        (a._onTick = function () {
          a._deleteExpiredMessages(),
            a._deleteExpiredMutes(),
            a.config.condensedReplays && a._clearOptimisticMarkAsReadState();
        }),
        (a._deleteExpiredMessages = function (e) {
          void 0 === e && (e = Date.now()), e.getTime && (e = e.getTime());
          for (var t = 0, n = a.host.organizations.getAll(); t < n.length; t++)
            for (var r = n[t].__expirableMessages, o = !1; !o && 0 < r.length; ) {
              var i = r[0];
              i.expiresAt < e ? a.host.models.Message.eject(i) : (o = !0);
            }
        }),
        (a._deleteExpiredMutes = function (e) {
          void 0 === e && (e = Date.now()), e.getTime && (e = e.getTime());
          for (var t = 0, n = a.host.organizations.getAll(); t < n.length; t++)
            for (var r = n[t].__expirableMutes, o = !1; !o && 0 < r.length; ) {
              var i = r[0];
              if (i.expiresAt < e) {
                a.host.models.Mute.eject(i);
                var s = a.host.models.Conversation.get(i.conversationId);
                if (!s) continue;
                (s.muted = null), a.host.models.Conversation.inject(s);
              } else o = !0;
            }
        }),
        (a._onChangeMessageStatus = function (e, t) {
          var n = t.messageId,
            r = a.host.models.Message.get(n);
          r && a.host.models.Message.inject(r);
        }),
        (a._fetchAttachmentTokens = function (i) {
          return (
            void 0 === i && (i = 20),
            a._fetchingAttachmentTokens ||
              (a._fetchingAttachmentTokens = new Promise(function (o) {
                return au(a, void 0, void 0, function () {
                  var t, n, r;
                  return uu(this, function (e) {
                    switch (e.label) {
                      case 0:
                        return (
                          e.trys.push([0, 2, , 3]),
                          [4, this.host.api.messages.createAttachmentTokens(i)]
                        );
                      case 1:
                        return (
                          (t = e.sent().attachment_tokens),
                          (r = this._attachmentTokens).push.apply(r, t),
                          [3, 3]
                        );
                      case 2:
                        return (
                          (n = e.sent()),
                          this.logger.error('error while requesting attachment tokens', n),
                          [3, 3]
                        );
                      case 3:
                        return (this._fetchingAttachmentTokens = null), o(), [2];
                    }
                  });
                });
              })),
            a._fetchingAttachmentTokens
          );
        }),
        (a._useAttachmentToken = function (n, r) {
          return (
            void 0 === n && (n = 20),
            void 0 === r && (r = 0),
            au(a, void 0, void 0, function () {
              var t;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (3 < r)
                      throw new Error('Attachment tokens can not be fetched at this time.');
                    return this._attachmentTokens.length < n
                      ? [4, this._fetchAttachmentTokens(n)]
                      : [3, 2];
                  case 1:
                    e.sent(), (e.label = 2);
                  case 2:
                    return (t = this._attachmentTokens.shift())
                      ? [3, 4]
                      : [4, this._useAttachmentToken(n, ++r)];
                  case 3:
                    return [2, e.sent()];
                  case 4:
                    return [2, t];
                }
              });
            })
          );
        }),
        (a.getAttachmentUrlWithToken = function (o, i, s) {
          return (
            void 0 === s && (s = !1),
            au(a, void 0, void 0, function () {
              var t, n, r;
              return uu(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (t = this._resolveMessage(o)), [4, this.findAttachment(t.serverId, i)];
                  case 1:
                    return (n = e.sent()), [4, this._useAttachmentToken()];
                  case 2:
                    return (
                      (r = e.sent()),
                      [
                        2,
                        '' +
                          (s ? this.host.config.baseUrl : '') +
                          this.__getAttachmentPath(t.serverId, n.id) +
                          '?token=' +
                          r,
                      ]
                    );
                }
              });
            })
          );
        }),
        (a.openAttachmentWithToken = function (o, i) {
          return au(a, void 0, void 0, function () {
            var t, n, r;
            return uu(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = i.toString()),
                    (n = this._resolveMessage(o)),
                    [4, this.findAttachment(o, t)]
                  );
                case 1:
                  if (!e.sent()) throw new G('MessageAttachment', n.serverId + ':' + t);
                  return [4, this.getAttachmentUrlWithToken(n.serverId, t)];
                case 2:
                  return (r = e.sent()), window.open(this.host.config.baseUrl + r, '_blank'), [2];
              }
            });
          });
        }),
        a
      );
    }
    function Hl() {
      var f = (null !== Vu && Vu.apply(this, arguments)) || this;
      return (
        (f._setP2PEntities = function (e) {
          var t = e.createdByRole,
            n = e.createdByUser,
            r = e.groupType,
            o = e.targetUser,
            i = e.targetRole,
            s = f.host.currentUser;
          if (s && r === si.ROLE_P2P) {
            var a = s.roles,
              u = [],
              c = [];
            t ? c.push(t) : n && n !== s && u.push(n), i ? c.push(i) : o && o !== s && u.push(o);
            var l = null,
              d = null;
            1 === c.length
              ? (d =
                  n === s || o === s
                    ? a.includes(c[0])
                      ? ((l = s), c[0])
                      : ((l = c[0]), s)
                    : ((l = u[0]), c[0]))
              : 2 === c.length &&
                (a.includes(c[0])
                  ? ((l = c[1]), (d = c[0]))
                  : a.includes(c[1]) && ((l = c[0]), (d = c[1]))),
              (e.p2pRecipient = l),
              (e.p2pSender = d);
          }
        }),
        (f._onChangeConversation = function (e, t) {
          var n = t.counterPartyId;
          if ('group' === t.counterPartyType) {
            var r = f.host.models.Group.get(n);
            r && (r.conversation || f.host.models.Group.inject(r));
          }
        }),
        (f._onRemoveConversation = function (e, t) {
          var n = t.counterPartyId;
          if ('group' === t.counterPartyType) {
            var r = f.host.models.Group.get(n);
            r && r.conversation && f.host.models.Group.inject(r);
          }
        }),
        (f._onChangeGroup = function (e, t) {
          var n = t.id,
            r = t.memberIds,
            o = f._groupMemberIds[n];
          if (o)
            for (var i = 0, s = o; i < s.length; i++) {
              var a = s[i],
                u = (d = f._userGroups[a]) ? d.indexOf(t) : -1;
              -1 < u && r && !r.includes(a) && d.splice(u, 1);
            }
          if (r)
            for (var c = 0, l = (f._groupMemberIds[n] = r); c < l.length; c++) {
              var d;
              (a = l[c]),
                (d = f._userGroups[a] || []).includes(t) || d.push(t),
                (f._userGroups[a] = d);
            }
        }),
        (f._onRemoveGroup = function (e, t) {
          var n = t.id,
            r = t.memberIds;
          if ((delete f._groupMemberIds[n], r))
            for (var o = 0, i = r; o < i.length; o++) {
              var s = i[o],
                a = f._userGroups[s],
                u = a ? a.indexOf(t) : -1;
              -1 < u && a.splice(u, 1);
            }
        }),
        (f._onChangeMetadata = function (e, t) {
          var n = t.entityId,
            r = f.host.models.Group.get(n);
          r && f.host.models.Group.inject(r);
        }),
        (f._onChangeUser = function (e, t) {
          var n = t.botRole,
            r = t.id,
            o = t.isRoleBot,
            i = f._userGroups[r],
            s = f._userState[r],
            a = s && (s.botRole !== n || s.isRoleBot !== o);
          if (((s && !a) || (f._userState[r] = { botRole: n, isRoleBot: o }), i))
            for (var u = 0, c = i; u < c.length; u++) {
              var l = c[u],
                d = l.conversation,
                h = l.groupType,
                p = l.members;
              (h !== si.ROLE_P2P && !a && p && p.includes(t)) ||
                (f.host.models.Group.inject(l), d && f.host.models.Conversation.inject(d));
            }
        }),
        (f._onRemoveUser = function (e, t) {
          var n = t.id,
            r = f._userGroups[n];
          if (r && 0 < r.length)
            for (var o = 0, i = r; o < i.length; o++) {
              var s = i[o],
                a = s.members;
              a && a.includes(t) && f.host.models.Group.inject(s);
            }
          delete f._userGroups[n], delete f._userState[n];
        }),
        f
      );
    }
    function $l() {
      return (null !== Hu && Hu.apply(this, arguments)) || this;
    }
    function Wl(e, t) {
      var a = Wu.call(this, e, t) || this;
      (a.onNetworkStatusChanged = function (e) {
        var t = e.networkStatus,
          n = e.previousStatus;
        if (
          (a.__allEvents.push({
            networkStatusChange: { previousStatus: n, networkStatus: t, timestamp: new Date() },
          }),
          t === Os.CONNECTING)
        ) {
          if (a._reconnectIfHeartbeatIntervalPassed() && a.eventSource) return;
          (a._connectionRetryCount = 1), a._disconnectAndRetry();
        } else
          t === Os.OFFLINE &&
            ((a._connectionRetryCount = 0),
            a.disconnect({ unwatchNetwork: !1, source: 'Network went offline' }));
      }),
        (a._closeAllConnections = function () {
          return Ya(a, void 0, void 0, function () {
            var t, n, r;
            return Ja(this, function (e) {
              switch (e.label) {
                case 0:
                  if (this.eventSource)
                    throw new Error('Existing connections must be closed first');
                  if ('simpleNotifications' !== this.endpointType) return [3, 2];
                  if (((t = this._auth), (n = t.key), (r = t.secret), !n || !r)) throw new Y();
                  return [4, this.host.api.notifications.closeAllConnections(n, r)];
                case 1:
                  return e.sent(), [3, 4];
                case 2:
                  return [4, this.host.api.events.closeAllConnections()];
                case 3:
                  e.sent(), (e.label = 4);
                case 4:
                  return [2];
              }
            });
          });
        }),
        (a._processImmediateEvent = function (t, n) {
          return Ya(a, void 0, void 0, function () {
            return Ja(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (this._eventQueue = [n]),
                    (this._eventQueueDeferred = !1),
                    this._autoAck ? [4, this.ack([t])] : [3, 2]
                  );
                case 1:
                  e.sent(), (e.label = 2);
                case 2:
                  return this.processEventQueue(), [2];
              }
            });
          });
        }),
        (a._scheduleEventQueue = function (e) {
          var t = (void 0 === e ? {} : e).immediate,
            n = void 0 !== t && t;
          if (
            (a.allowManualRequestBatch &&
              a.config.manuallyRequestEventQueueBatch &&
              (a._eventQueueIsManual = !0),
            n && (clearTimeout(a._eventQueueTimeout), (a._eventQueueTimeout = null)),
            null === a._eventQueueTimeout)
          ) {
            var r = a.config.eventCollectionInterval;
            if (n || null === r)
              a._eventQueueIsManual
                ? a._emitBatch({ immediate: n })
                : a.processEventQueue(a._eventQueue.length);
            else {
              var o = a._eventQueueIsManual ? a._emitBatch : a.processEventQueue;
              a._eventQueueTimeout = setTimeout(o, r);
            }
          }
        }),
        (a._emitBatch = function (e) {
          var t = (void 0 === e ? {} : e).immediate,
            n = void 0 !== t && t;
          (a._eventQueueTimeout = null),
            a.emit('batch:available', { maxEventBatch: a._eventQueue.length, immediate: n });
        }),
        (a.deferEventQueue = function () {
          (a._eventQueueDeferred = !0),
            a._eventQueueTimeout &&
              (clearTimeout(a._eventQueueTimeout), (a._eventQueueTimeout = null));
        }),
        (a.resumeEventQueue = function () {
          (a._eventQueueDeferred = !1),
            a._eventQueueTimeout &&
              (clearTimeout(a._eventQueueTimeout), (a._eventQueueTimeout = null)),
            0 < a._eventQueue.length && a._scheduleEventQueue();
        }),
        (a.processEventQueue = function (e) {
          var t, n, r;
          if (
            (void 0 === e && (e = a.config.maxEventBatch),
            a._eventQueueIsManual || (a._eventQueueTimeout = null),
            !a._eventQueueDeferred && 0 !== a._eventQueue.length)
          )
            try {
              for (var o = a._eventQueue.splice(0, e), i = 0, s = o; i < s.length; i++)
                (t = s[i]), (n = !1), (r = JSON.parse(t)), (n = !0), a._handleEvent(r);
              0 < a._eventQueue.length
                ? a._scheduleEventQueue()
                : a._reconnectWhenQueuesAreEmpty &&
                  0 === a._queuedAcks.length &&
                  0 === a._pendingAckConnections &&
                  a._scheduleConnectRetry();
            } catch (e) {
              n
                ? (a.logger.error('error while processing SSE payload', e, e.stack, { data: r }),
                  a.disconnect({ isRecoverable: !1, source: 'Error processing SSE payload' }))
                : (a.logger.error('error parsing SSE payload: <' + t + '>'),
                  a._disconnectAndRetry());
            }
        }),
        (a._flushQueuedAcks = function () {
          return Ya(a, void 0, void 0, function () {
            var t, n;
            return Ja(this, function (e) {
              switch (e.label) {
                case 0:
                  return 0 === this._queuedAcks.length
                    ? [2]
                    : this._pendingAckConnections >= this.config.flushAckMaxConnections
                    ? (this._throttled_flushQueuedAcks(), [2])
                    : ((t = this._queuedAcks.splice(0, this.config.flushAckMaxEvents)),
                      (n = this.ack(t)),
                      0 < this._queuedAcks.length
                        ? (this._throttled_flushQueuedAcks(), [3, 5])
                        : [3, 1]);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, n];
                case 2:
                case 3:
                  return e.sent(), [3, 4];
                case 4:
                  this._reconnectWhenQueuesAreEmpty &&
                    0 === this._eventQueue.length &&
                    0 === this._pendingAckConnections &&
                    this._scheduleConnectRetry(),
                    (e.label = 5);
                case 5:
                  return [2];
              }
            });
          });
        }),
        (a._onVisibilityChange = function (e, t) {
          t = t.toUpperCase();
          var n = a._visibilityState;
          (a._visibilityState = t),
            a.isConnected &&
              (a.__allEvents.push({
                visibilityChange: { previousState: n, state: t, timestamp: new Date() },
              }),
              t === Ii.HIDDEN
                ? (a.host.configure({ eventCollectionInterval: null }),
                  a._setHeartbeatTimeout(a.config.eventsHeartbeatIntervalInvisible))
                : t === Ii.VISIBLE &&
                  (a.host.configure({ eventCollectionInterval: Vo.eventCollectionInterval }),
                  a._setHeartbeatTimeout(a.config.eventsHeartbeatIntervalVisible))),
            n === Ii.HIDDEN &&
              t === Ii.VISIBLE &&
              a.httpClient.networkStatus === Os.CONNECTING &&
              a._reconnectIfHeartbeatIntervalPassed(),
            a.emit('visibilityChange', e, t);
        }),
        (a._reconnectIfHeartbeatIntervalPassed = function () {
          return (
            null !== a._lastHeartbeatTime &&
            Date.now() - a._lastHeartbeatTime >= a._heartbeatInterval &&
            ((a._lastHeartbeatTime = null), a.reconnect(), !0)
          );
        }),
        a.endpointType || (a.endpointType = 'events');
      for (var n = 0, r = Object.entries(rl[a.endpointType]); n < r.length; n++) {
        var o = r[n],
          i = o[0],
          s = o[1];
        'url' !== i && (a[i] = s);
      }
      return a;
    }
    function Xl(e, t, n) {
      (this.id = e), (this.type = t), (this.data = n);
    }
    function Ql(e, t) {
      var n = Qu.call(this, e, t) || this;
      n.EVENTS = {
        bang: function (e) {
          this.host.groups.reactToBangEvent(e);
        },
        client_advisory: function (e) {
          switch (e.data.advisory.name) {
            case 'replay_start':
              this.host.reactToAdvisoryEvent('replayStart', {
                replayMessageCount: e.data.advisory.replay_message_count,
              });
              break;
            case 'replay_stop':
              this.host.reactToAdvisoryEvent('replayStop');
          }
        },
        escalations: function (e) {
          this.host.escalations.reactToEscalationsEvent(e);
        },
        friends: function (e) {
          this.host.conversations.reactToFriendsEvent(e);
        },
        'message|group_message': function (e) {
          this.host.conversations.reactToMessageEvent(e);
        },
        'message:status|group:message:status': function (e) {
          this.host.messages.reactToMessageStatusEvent(e);
        },
        user_preferences: function (e) {
          this.host.users.reactToUserPreferencesEvent(e);
        },
        org_preferences: function (e) {
          this.host.organizations.reactToOrganizationPreferencesEvent(e);
        },
        presence: function (e) {
          this.host.presence.reactToPresenceEvent(e);
        },
        update: function (e) {
          this.host.conversations.reactToUpdateEvent(e);
        },
        'update:tag': function (e) {
          this.host.roleTags.reactToUpdateEvent(e);
        },
        'update:team_request': function (e) {
          this.host.conversations.reactToUpdateTeamRequestEvent(e);
        },
        'account:settings': function (n) {
          var r = this;
          n.data.services.forEach(function (e) {
            switch (e.xmlns) {
              case 'tigertext:iq:update:account':
                var t = e.account || n.data.token;
                r.host.users.refresh(t);
                break;
              case 'tigertext:iq:update:org_settings':
                r.host.organizations.refreshAll();
                break;
              default:
                r.logger.warn('unhandled account:settings service type ' + e.xmlns);
            }
          });
        },
        'message:is_typing': function (e) {
          this.host.typingStatus.reactToIsTypingEvent(e);
        },
        'processing:start': function (e) {
          this.host.conversations.reactToProcessingStart(e);
        },
        'processing:stop': function (e) {
          this.host.conversations.reactToProcessingStop(e);
        },
        remote_wipe: function (e) {
          return (function (e, s, a, u) {
            return new (a = a || Promise)(function (n, t) {
              function r(e) {
                try {
                  i(u.next(e));
                } catch (e) {
                  t(e);
                }
              }
              function o(e) {
                try {
                  i(u.throw(e));
                } catch (e) {
                  t(e);
                }
              }
              function i(e) {
                var t;
                e.done
                  ? n(e.value)
                  : ((t = e.value) instanceof a
                      ? t
                      : new a(function (e) {
                          e(t);
                        })
                    ).then(r, o);
              }
              i((u = u.apply(e, s || [])).next());
            });
          })(this, void 0, void 0, function () {
            return (function (n, r) {
              var o,
                i,
                s,
                e,
                a = {
                  label: 0,
                  sent: function () {
                    if (1 & s[0]) throw s[1];
                    return s[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (e = { next: t(0), throw: t(1), return: t(2) }),
                'function' == typeof Symbol &&
                  (e[Symbol.iterator] = function () {
                    return this;
                  }),
                e
              );
              function t(t) {
                return function (e) {
                  return (function (t) {
                    if (o) throw new TypeError('Generator is already executing.');
                    for (; a; )
                      try {
                        if (
                          ((o = 1),
                          i &&
                            (s =
                              2 & t[0]
                                ? i.return
                                : t[0]
                                ? i.throw || ((s = i.return) && s.call(i), 0)
                                : i.next) &&
                            !(s = s.call(i, t[1])).done)
                        )
                          return s;
                        switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                          case 0:
                          case 1:
                            s = t;
                            break;
                          case 4:
                            return a.label++, { value: t[1], done: !1 };
                          case 5:
                            a.label++, (i = t[1]), (t = [0]);
                            continue;
                          case 7:
                            (t = a.ops.pop()), a.trys.pop();
                            continue;
                          default:
                            if (
                              !(
                                (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                                (6 !== t[0] && 2 !== t[0])
                              )
                            ) {
                              a = 0;
                              continue;
                            }
                            if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                              a.label = t[1];
                              break;
                            }
                            if (6 === t[0] && a.label < s[1]) {
                              (a.label = s[1]), (s = t);
                              break;
                            }
                            if (s && a.label < s[2]) {
                              (a.label = s[2]), a.ops.push(t);
                              break;
                            }
                            s[2] && a.ops.pop(), a.trys.pop();
                            continue;
                        }
                        t = r.call(n, a);
                      } catch (e) {
                        (t = [6, e]), (i = 0);
                      } finally {
                        o = s = 0;
                      }
                    if (5 & t[0]) throw t[1];
                    return { value: t[0] ? t[1] : void 0, done: !0 };
                  })([t, e]);
                };
              }
            })(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.notifications.disconnect({ source: 'remote_wipe event' }),
                    [4, this.host.notifications.signOut({ fromServer: !0 })]
                  );
                case 1:
                  return e.sent(), this.host.signOut({ fromServer: !0 }), [2];
              }
            });
          });
        },
        validated: function (e) {
          this.logger.warn('validated not implemented');
        },
        'msg:metadata_update': function (e) {
          this.logger.warn('msg:metadata_update not implemented');
        },
        conversation_mute: function (e) {
          this.host.mute.reactToMuteEvent(e);
        },
        reconnect: function (e) {
          this.host.events.reconnect();
        },
        'vwr:joinablecall': function (e) {
          this.host.virtualWaitingRooms.reactToJoinableCallSSE(e);
        },
        'voip:incoming|voip:ended|voip:answered|voip:state': function (e) {
          this.host.calls.reactToVoipSSE(e);
        },
        'push:credentials': function () {
          return null;
        },
        'sse:heartbeat': function () {
          return null;
        },
        'sse:keepalive': function () {
          return null;
        },
      };
      for (var r = 0, o = Object.entries(n.EVENTS); r < o.length; r++) {
        var i = o[r],
          s = i[0],
          a = i[1];
        if (s.includes('|')) {
          for (var u = 0, c = s.split('|'); u < c.length; u++) {
            var l = c[u];
            n.EVENTS[l] = a;
          }
          delete n.EVENTS[s];
        }
      }
      return n;
    }
    function Yl() {
      return (null !== Ju && Ju.apply(this, arguments)) || this;
    }
    function Jl() {
      return (null !== ec && ec.apply(this, arguments)) || this;
    }
    function Zl() {
      return (null !== nc && nc.apply(this, arguments)) || this;
    }
    function ed() {
      var R = (null !== oc && oc.apply(this, arguments)) || this;
      return (
        (R.__injectCounterParty = function (e) {
          var t = e.conversationId,
            n = e.entityAttrs,
            r = e.entityType,
            o = e.groupType,
            i = e.hasCurrentUser,
            s = void 0 !== i && i,
            a = e.isPlaceholder,
            u = void 0 !== a && a,
            c = e.organizationId,
            l = n.id,
            d = n.metadata;
          if (
            ((l = l || n.token),
            !r && n.type && (r = R.host.modelNameByEntityType(n.type)),
            t && (n.conversationId = t),
            c && (n.organizationId = c),
            'group' !== r || o || (o = R.host.groups.__extractGroupTypeFromAttrs(n)),
            d && l && c && R.host.metadata.__injectMetadata(l, c, d),
            'group' === r)
          ) {
            if (d) {
              if (d.created_by) {
                var h = R.__injectCreatedByEntity(d, c),
                  p = h.role,
                  f = void 0 === p ? null : p,
                  v = h.user,
                  y = void 0 === v ? null : v;
                (f || y) && ((n.createdByRole = f), (n.createdByUser = y));
              } else
                n.created_by &&
                  ((y = R.host.models.User.injectPlaceholder({ id: n.created_by })),
                  (n.createdByUser = y));
              if (d.target_id) {
                var g = R.__injectTargetEntity(d, c),
                  m = g.role,
                  _ = ((f = void 0 === m ? null : m), g.user);
                (y = void 0 === _ ? null : _), (f || y) && ((n.targetRole = f), (n.targetUser = y));
              }
              if ('role_assignment' === d.meta_type) {
                var b = n.display_name || n.name;
                R.host.roles.__injectRoleAssignmentEntity(b, d, c);
              }
            }
            o === si.FORUM && s && (n.hasCurrentUser = !0);
          } else if ('user' === r) {
            var w = n.dnd_auto_forward_receiver;
            w && 'undefined' !== w && R.host.models.User.injectPlaceholder({ id: w });
          } else if ('distributionList' === r)
            n.created_by &&
              R.host.injectPlaceholderModel(
                { displayName: n.created_by_display_name, id: n.created_by },
                'user'
              ),
              n.updated_by &&
                R.host.injectPlaceholderModel(
                  { displayName: n.updated_by_display_name, id: n.updated_by },
                  'user'
                );
          else if ('messageTemplate' === r)
            n.created_by &&
              R.host.injectPlaceholderModel(
                { displayName: n.created_by_display_name, id: n.created_by },
                'user'
              ),
              n.updated_by &&
                R.host.injectPlaceholderModel(
                  { displayName: n.updated_by_display_name, id: n.updated_by },
                  'user'
                );
          else if ('scheduledMessage' === r) {
            if (
              (n.event_id &&
                ((n.scheduled_message_id = n.token), (n.token = n.event_id), (l = n.event_id)),
              n.recipient)
            )
              if ('account' === n.recipient_type) {
                for (
                  var I = {},
                    O = 0,
                    T = [
                      'feature_service',
                      'is_patient_contact',
                      'patient_display_name',
                      'patient_dob',
                      'patient_gender',
                      'patient_id',
                      'patient_mrn',
                      'phone_number',
                      'relation_name',
                    ];
                  O < T.length;
                  O++
                ) {
                  var E = T[O];
                  I[E] = n[E];
                }
                I.patient_id || I.is_patient_contact || (I.patient_id = n.recipient),
                  R.host.metadata.__injectMetadata(n.recipient, c, I),
                  R.host.injectPlaceholderModel(
                    Oc(Oc({}, I), { displayName: n.recipient_display_name, id: n.recipient }),
                    'user'
                  );
              } else
                ('distribution_list' !== n.recipient_type && 'list' !== n.recipient_type) ||
                  R.host.injectPlaceholderModel(
                    {
                      id: n.recipient,
                      name: n.recipient_display_name,
                      totalMembers: n.total_members,
                    },
                    'distributionList'
                  );
            n.sender_token &&
              R.host.injectPlaceholderModel(
                { displayName: n.sender_display_name, id: n.sender_token },
                'user'
              ),
              n.template_id &&
                R.host.injectPlaceholderModel(
                  { title: n.template_label, id: n.template_id },
                  'messageTemplate'
                ),
              n.updated_by &&
                R.host.injectPlaceholderModel(
                  { displayName: n.updated_by_display_name, id: n.updated_by },
                  'user'
                );
          }
          return l ? (u ? R.host.injectPlaceholderModel(n, r) : R.host.injectModel(n, r)) : null;
        }),
        (R.__injectCreatedByEntity = function (e, t) {
          var n = {};
          if (void 0 !== e.created_by_tag_id)
            n.role = R.host.roles.__injectRoleFromMetadata({
              metadata: {
                token: e.created_by,
                display_name: e.created_by_display_name,
                tag_color: e.created_by_tag_color,
                tag_id: e.created_by_tag_id,
                tag_name: e.created_by_tag_name,
              },
              organizationId: t,
              replaceExisting: !1,
            });
          else {
            var r = R.host.models.User.get(e.created_by);
            if (r) n.user = r;
            else {
              var o = { id: e.created_by };
              'created_by_display_name' in e && (o.displayName = e.created_by_display_name),
                (n.user = R.host.models.User.injectPlaceholder(o));
            }
          }
          return n;
        }),
        (R.__injectTargetEntity = function (e, t) {
          var n = {};
          if (void 0 !== e.target_tag_id)
            n.role = R.host.roles.__injectRoleFromMetadata({
              metadata: {
                display_name: e.target_display_name,
                tag_color: e.target_tag_color,
                tag_id: e.target_tag_id,
                tag_name: e.target_tag_name,
                token: e.target_id,
              },
              organizationId: t,
              replaceExisting: !1,
            });
          else {
            var r = R.host.models.User.get(e.target_id);
            if (r) n.user = r;
            else {
              var o = { id: e.target_id };
              'target_display_name' in e && (o.displayName = e.target_display_name),
                (n.user = R.host.models.User.injectPlaceholder(o));
            }
          }
          return n;
        }),
        (R.__removeFriend = function (e) {
          var t,
            n = e.attrs,
            r = e.entityType,
            o = e.id,
            i = e.organizationId,
            s = e.conversation || R.get(r, o, i),
            a = 'group' === r ? R.host.models.Group.get(o) : null,
            u = !(!a || a.groupType !== si.FORUM);
          if (
            ((t =
              'user' === r || R.config.condensedReplays
                ? s && s.content.slice()
                : s && s.messages.slice()),
            u && ((n.hasCurrentUser = !1), (n.members = null), R.host.models.Group.inject(n)),
            (R.config.keepConversationsForAllForums && u) ||
              (s && R.__ejectConversation(s.id),
              a && R.config.condensedReplays && R.host.models.Group.eject(a)),
            Array.isArray(t))
          )
            for (var c = 0, l = t; c < l.length; c++) {
              var d = l[c];
              R.host.ejectModel(d, d.$entityType);
            }
        }),
        (R._sanitizeGroupAttrs = function (e) {
          var t = e.members;
          R.host.groups.__extractGroupTypeFromAttrs(e) === si.FORUM &&
            t &&
            0 === t.length &&
            delete e.members;
        }),
        (R._onSendingMessage = function (e) {
          var t;
          if (
            (t = R.config.condensedReplays
              ? e.conversation
              : R.ensureConversation(e.counterPartyType, e.counterPartyId, e.senderOrganizationId, {
                  ensureEntities: {
                    counterParty: 'full',
                    organization: 'placeholder',
                    messageCounterParties: 'full',
                    groupMembers: 'full',
                    touchOnRelatedEntityLoad: !0,
                  },
                }))
          ) {
            var n = !1;
            R.host.config.condensedReplays &&
              e &&
              e.sortNumber &&
              (void 0 === t.highestSortNumber || t.highestSortNumber < e.sortNumber) &&
              ((t.highestSortNumber = e.sortNumber), (n = !0)),
              void 0 === t.highestSortNumber &&
                ((t.highestSortNumber = R.host.messages.__getNextSortNumber(t.organizationId)),
                (n = !0)),
              n && R.host.models.Conversation.inject(t),
              R.__addConversationCounterPartyToServerRosterIfShould(t);
          }
        }),
        (R._onSentMessage = function (e) {
          var t = !1,
            n = R.ensureConversation(e.counterPartyType, e.counterPartyId, e.senderOrganizationId);
          n &&
            (R.host.config.condensedReplays &&
              (e &&
              e.sortNumber &&
              (void 0 === n.highestSortNumber || n.highestSortNumber < e.sortNumber)
                ? ((n.highestSortNumber = e.sortNumber), (t = !0))
                : void 0 === n.highestSortNumber &&
                  ((n.highestSortNumber = R.host.messages.__getNextSortNumber(n.organizationId)),
                  (t = !0))),
            t && R.host.models.Conversation.inject(n),
            n.emit('message', e));
        }),
        (R._onChangeMessage = function (e, t) {
          t.conversation && R.__queueReload(t.conversation);
        }),
        (R._onRemoveMessage = function (e, t) {
          var n = t.conversation;
          if (n) {
            if (R.config.condensedReplays) {
              var r = n.firstExpiringUnreadMessage,
                o = n.id,
                i = n.lastMessage,
                s = n.timeline;
              if (!(n = R.getById(o))) return;
              var a = i === t,
                u = r === t,
                c = 1 === s.length && a;
              (a || u) && R.find(n.id), c && (n.lastMessage = null);
            }
            R.__queueReload(n);
          }
        }),
        (R._onRemoveGroup = function (e, t) {
          var n = t.conversationId
            ? t.conversationId
            : R.getConversationKey('group', t.id, t.organizationId);
          R.__ejectConversation(n);
        }),
        (R._onRemoveTeam = function (e, t) {
          var n = R.getConversationKey('team', t.id, t.organizationId);
          R.__ejectConversation(n);
        }),
        (R._onChangeGroup = function (e, t) {
          t.conversationId && R.host.models.Conversation.touch(t.conversationId);
        }),
        (R._onChangeOrganization = function (e, t) {
          var n = t.conversations,
            r = R.__escalationEnabledOrganizations.indexOf(t),
            o = -1 < r;
          if (
            o !== t.canEscalateMessages &&
            (o
              ? R.__escalationEnabledOrganizations.splice(r, 1)
              : R.__escalationEnabledOrganizations.push(t),
            n)
          )
            for (var i = 0, s = n; i < s.length; i++) {
              var a = s[i];
              R.__queueReload(a);
            }
        }),
        (R.__flushConversationsToReload = function () {
          if (
            !R.host.currentlyServingOfflineMessages &&
            0 < R.__queuedConversationsToReload.length
          ) {
            var e = [];
            R.host.organizations._deferConversationChanges = !0;
            for (var t = 0, n = R.__queuedConversationsToReload; t < n.length; t++) {
              var r = n[t],
                o = r.organizationId;
              R.__reloadConversation(r), e.includes(o) || e.push(o);
            }
            R.host.organizations._deferConversationChanges = !1;
            for (var i = 0, s = e; i < s.length; i++) {
              o = s[i];
              var a = R.host.organizations.getById(o);
              a && R.host.organizations.__reloadConversations(a);
            }
            R.__queuedConversationsToReload.length = 0;
          }
        }),
        R
      );
    }
    function td() {
      return (null !== sc && sc.apply(this, arguments)) || this;
    }
    function nd(e) {
      if (null == e) throw new ne('version', 'of type string or number');
      return 'string' == typeof e ? parseInt(e) + 1 : e + 1;
    }
    function rd(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function od(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function id(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function sd(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function ad(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ud(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function cd(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ld(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function dd(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function hd(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function pd(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function fd(n, e) {
      if ((void 0 === n && (n = ''), void 0 === e && (e = {}), !n || ee.a.isEmpty(e.cloudfront)))
        return n;
      var t = e.cloudfront,
        r = ee.a.findKey(t, function (e, t) {
          return -1 !== n.indexOf(t);
        }),
        o = t[r] ? r + '.' + e.cloudfrontDomain : '',
        i = t[r] ? e.assetDomain + '/' + t[r] : '',
        s = o && i ? n.replace(o, i) : n;
      return s.replace('http://', 'https://');
    }
    var vd,
      yd,
      gd,
      md,
      _d,
      bd,
      wd,
      Id,
      Od,
      Td,
      Ed =
        (((Td = function (e, t) {
          return (Td =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Td(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        })(Xd, (Od = Ua)),
        (Xd.prototype.mounted = function () {
          this._data = {};
        }),
        (Xd.prototype.dispose = function () {
          this._data = null;
        }),
        (Xd.prototype.reactToPresenceEvent = function (e) {
          var t = e.data;
          this.set(t.from, mi.resolve(t.type));
        }),
        (Xd.prototype.set = function (e, t) {
          if (this._data[e] !== t) {
            this._data[e] = t;
            var n = this.host.models.User.inject({ id: e, presence: t });
            this.emit('change', { presence: t, user: n, userId: e });
          }
        }),
        (Xd.prototype.get = function (e) {
          return e === this.host.currentUserId ? mi.AVAILABLE : this._data[e] || mi.UNKNOWN;
        }),
        Xd),
      Rd =
        ((Id = function (e, t) {
          return (Id =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Id(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Ad =
        (Rd(Wd, (wd = Ua)),
        (Wd.prototype.mounted = function () {
          this.host.models.Organization.on('afterInject', this._onChangeOrganization),
            this.host.models.Organization.on('afterEject', this._onChangeOrganization);
        }),
        (Wd.prototype.dispose = function () {
          this.host.models.Organization.removeListener('afterInject', this._onChangeOrganization),
            this.host.models.Organization.removeListener('afterEject', this._onChangeOrganization);
        }),
        (Wd.prototype.findAll = function () {
          return od(this, void 0, void 0, function () {
            return id(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.organizations.findAll()];
                case 1:
                  return e.sent(), [2, this.getAll()];
              }
            });
          });
        }),
        (Wd.prototype.refreshAll = function () {
          return od(this, void 0, void 0, function () {
            return id(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.organizations.refreshAll()];
                case 1:
                  return e.sent(), [2, this.getAll()];
              }
            });
          });
        }),
        (Wd.prototype.getAll = function () {
          return this.host.models.Product.getAll();
        }),
        (Wd.prototype.getById = function (e) {
          return this.host.models.Product.get(e);
        }),
        rd([Object(Rs.decorator)()], Wd.prototype, 'findAll', null),
        rd([Object(Rs.decorator)()], Wd.prototype, 'refreshAll', null),
        Wd),
      Cd =
        ((bd = function (e, t) {
          return (bd =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          bd(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Sd = function () {
        return (Sd =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Pd = ['role', 'user'],
      jd =
        (Cd($d, (_d = Ua)),
        ($d.prototype.mounted = function () {
          (this._previouslyInRoles = {}),
            (this._roleConversations = {}),
            (this._roleP2PConversations = {}),
            this.host.models.Conversation.on('afterInject', this._onChangeConversation),
            this.host.models.Conversation.on('afterEject', this._onRemoveConversation);
        }),
        ($d.prototype.dispose = function () {
          (this._previouslyInRoles = {}),
            (this._roleConversations = {}),
            (this._roleP2PConversations = {}),
            this.host.models.Conversation.removeListener('afterInject', this._onChangeConversation),
            this.host.models.Conversation.removeListener('afterEject', this._onRemoveConversation);
        }),
        ($d.prototype.createP2PGroup = function (e) {
          var I = e.metadata,
            O = e.name,
            T = e.organizationId,
            E = e.recipientId,
            t = e.replayHistory,
            R = void 0 === t || t,
            n = e.senderId,
            A = void 0 === n ? this.host.currentUserId : n;
          return ad(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              d,
              h,
              p,
              f,
              v,
              y,
              g,
              m,
              _,
              b,
              w = this;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !E)) throw new ne('recipientId', 'required');
                  if (!T) throw new ne('organizationId', 'required');
                  for (t = this.host.currentUserId, n = [], r = 0, o = [A, E]; r < o.length; r++)
                    (i = o[r]),
                      (i = this.host.roles.__resolveRoleId(i)),
                      (i = this._resolveModelIdWithTypes(i, 'user')),
                      n.includes(i) || n.push(i);
                  if (2 !== n.length) throw new ne('recipientId', 'same user as senderId');
                  return [
                    4,
                    Promise.all(
                      n.map(function (e) {
                        return w.host.users.find(e, { organizationId: T });
                      })
                    ),
                  ];
                case 1:
                  return (
                    (s = e.sent()),
                    (O =
                      O ||
                      s
                        .map(function (e) {
                          return e.isRoleBot ? e.displayName : e.firstName;
                        })
                        .filter(Boolean)
                        .join(', ') ||
                      'Group'),
                    [
                      4,
                      this.host.api.roles.createP2PGroup({
                        createdByUserId: A,
                        memberIds: n,
                        name: O,
                        organizationId: T,
                        replayHistory: R,
                      }),
                    ]
                  );
                case 2:
                  for (
                    a = e.sent(),
                      this.config.condensedReplays
                        ? ((c = a.entity || a), (u = a.conversation_id))
                        : (c = a),
                      l = 0,
                      d = s;
                    l < d.length;
                    l++
                  )
                    if (((h = d[l]), (p = h.botRole), h.isRoleBot && p && (f = p.memberIds)))
                      for (v = 0, y = f; v < y.length; v++) (g = y[v]), n.includes(g) || n.push(g);
                  return (
                    (m = c.id || c.token),
                    (b =
                      (_ = this.host.models.Group.get(m)) && _.memberIds
                        ? _.memberIds
                        : (c.members = n)),
                    (_ = this.host.conversations.__injectCounterParty({
                      conversationId: u,
                      entityAttrs: c,
                      entityType: 'group',
                      groupType: si.ROLE_P2P,
                      hasCurrentUser: b.includes(t),
                      isPlaceholder: !0,
                      organizationId: T,
                    })),
                    I ? [4, this.host.metadata.update(_.id, I, T)] : [3, 4]
                  );
                case 3:
                  e.sent(), (e.label = 4);
                case 4:
                  return [2, _];
              }
            });
          });
        }),
        ($d.prototype.findAll = function () {
          return ad(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o = this;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return 0 !== (t = this.host.models.Organization.getAll()).length
                    ? [3, 2]
                    : [4, this.host.organizations.findAll()];
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  return 0 ===
                    (t = t.filter(function (e) {
                      return e.rolesEnabled;
                    })).length
                    ? [2, []]
                    : [
                        4,
                        this.host.search.query({
                          types: ['user'],
                          organizationIds: t.map(function (e) {
                            return e.id;
                          }),
                          query: { displayName: '', featureService: 'role' },
                          followContinuations: !0,
                        }),
                      ];
                case 3:
                  return (
                    (n = e.sent().results),
                    (r = n.map(function (e) {
                      return e.entity;
                    })),
                    t.map(function (e) {
                      var t = e.id;
                      return o.host.models.Organization.touch(t);
                    }),
                    [2, r]
                  );
              }
            });
          });
        }),
        ($d.prototype.findByOrganizationId = function (o) {
          return ad(this, void 0, void 0, function () {
            var t, n, r;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return (o = this._resolveModelId(o)), [4, this.host.organizations.find(o)];
                case 1:
                  return (t = e.sent()).rolesEnabled
                    ? [
                        4,
                        this.host.search.query({
                          types: ['user'],
                          organizationIds: t.id,
                          query: { displayName: '', featureService: 'role' },
                          followContinuations: !0,
                        }),
                      ]
                    : [2, []];
                case 2:
                  return (
                    (n = e.sent().results),
                    (r = n.map(function (e) {
                      return e.entity;
                    })),
                    this.host.models.Organization.touch(o),
                    [2, r]
                  );
              }
            });
          });
        }),
        ($d.prototype.find = function (o, i, s) {
          return (
            void 0 === s && (s = {}),
            ad(this, void 0, void 0, function () {
              var t, n, r;
              return ud(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      this.host.requireUser(),
                      (s = ee.a.defaults(s, { bypassCache: !1, ignoreNotFound: !1 })),
                      (o = this.__resolveRoleId(o)),
                      (i = this._resolveModelId(i)),
                      !s.bypassCache && (t = this.getById(o))
                        ? [2, t]
                        : [4, this.host.api.roles.find(o, i)]
                    );
                  case 1:
                    if ((n = e.sent()))
                      return (
                        (r = this.__injectSearchResult({
                          entity: { id: o, displayName: n.display_name },
                          metadata: n,
                          organizationId: i,
                        })),
                        this.host.models.Organization.touch(i),
                        [2, r]
                      );
                    if (s.ignoreNotFound) return [2];
                    throw new G(this.host.models.Role.name, o);
                }
              });
            })
          );
        }),
        ($d.prototype.saveRole = function (t, n) {
          return ad(this, void 0, void 0, function () {
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (n = this._resolveModelId(n)),
                    (t = this.__resolveRoleId(t)),
                    [4, this.host.api.roles.saveRole(t, this.host.currentUserId, n)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        ($d.prototype.removeSavedRole = function (t, n) {
          return ad(this, void 0, void 0, function () {
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (n = this._resolveModelId(n)),
                    (t = this.__resolveRoleId(t)),
                    [4, this.host.api.roles.removeSavedRole(t, this.host.currentUserId, n)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        ($d.prototype.findSavedRoles = function (o, i) {
          return (
            void 0 === i && (i = {}),
            ad(this, void 0, void 0, function () {
              var t,
                n,
                r = this;
              return ud(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (i = ee.a.defaults(i, { ignoreNotFound: !1 })),
                      this.host.requireUser(),
                      (o = this._resolveModelId(o)),
                      [4, this.host.api.roles.findSavedRoles(this.host.currentUserId, o)]
                    );
                  case 1:
                    if ((t = e.sent()))
                      return (
                        (n = t
                          .map(function (e) {
                            return r.__injectSearchResult({
                              entity: { id: e.token, displayName: e.display_name },
                              metadata: e,
                              organizationId: o,
                            });
                          })
                          .filter(Boolean)),
                        this.host.models.Organization.touch(o),
                        [2, n]
                      );
                    if (i.ignoreNotFound) return [2];
                    throw new G('saved roles', o);
                }
              });
            })
          );
        }),
        ($d.prototype.reactToUpdateEventCR = function (e) {
          var t,
            n = e.entity,
            r = n.display_name,
            o = n.metadata,
            i = n.organizationId;
          return (
            (t = 'group' === n.type ? o.id : n.id),
            (o = Sd(Sd({}, o), { display_name: r, token: this.__resolveRoleId(t) })),
            this.__injectRoleFromMetadata({ metadata: o, organizationId: i })
          );
        }),
        ($d.prototype.reactToUpdateEvent = function (e) {
          var t,
            n = e.data,
            r = n.display_name,
            o = n.metadata,
            i = n.organization_key;
          return (
            (t = 'tigertext:entity:group' === n.type ? o.id : n.token),
            (o = Sd(Sd({}, o), { display_name: r, token: this.__resolveRoleId(t) })),
            this.__injectRoleFromMetadata({ metadata: o, organizationId: i })
          );
        }),
        ($d.prototype.__injectRoleFromMetadata = function (e) {
          var t = e.metadata,
            n = void 0 === t ? {} : t,
            r = e.organizationId,
            o = e.replaceExisting,
            i = void 0 === o || o,
            s = n.escalation_policy,
            a = n.token;
          if (!a) return null;
          var u = 'role:' + a;
          if (!i) {
            var c = this.host.models.Role.get(u);
            if (c) return c;
          }
          var l = this.host.models.Organization.get(r);
          this.host.metadata.__injectMetadata(a, r, Sd({ feature_service: 'role' }, n)),
            this.host.models.User.injectPlaceholder({
              id: a,
              organizationId: r,
              displayName: n.display_name,
            });
          var d = { botUserId: a, displayName: n.display_name, id: u, organizationId: r };
          if ((n.description && (d.description = n.description), s && s.escalation_path)) {
            var h = JSON.parse(JSON.stringify(s));
            (h.id = 'escalationPolicy:' + a), (h.targetId = a);
            var p = this.host.models.EscalationPolicy.inject(h);
            d.escalationPolicyId = p.id;
          } else d.escalationPolicyId = null;
          if ((n.room_assignment_id && (d.assignmentGroupId = n.room_assignment_id), n.owners))
            if ('string' == typeof n.owners)
              (d.memberIds = n.owners.split(',')),
                this.host.models.User.injectPlaceholder({ id: n.owners });
            else {
              d.memberIds = n.owners.map(function (e) {
                return e.token;
              });
              for (var f = 0, v = n.owners; f < v.length; f++) {
                var y = v[f];
                this.host.models.User.injectPlaceholder(y);
              }
            }
          return (
            n.tag_id
              ? ((d.roleTagId = r + ':' + n.tag_id),
                this.host.models.RoleTag.inject(
                  Sd(Sd({}, ee.a.pick(n, 'tag_id', 'tag_color', 'tag_name')), {
                    id: d.roleTagId,
                    organizationId: r,
                  })
                ))
              : l && (d.roleTagId = null),
            this.host.models.Role.inject(d)
          );
        }),
        ($d.prototype.__parseRoleFromMetadata = function (e) {
          var t = e.metadata,
            n = void 0 === t ? {} : t,
            r = e.organizationId,
            o = n.token;
          if (!o) return null;
          var i = {
              $entityType: 'role',
              botUserId: o,
              displayName: n.display_name,
              id: 'role:' + o,
              organizationId: r,
            },
            s = null;
          return (
            n.tag_id &&
              (s = {
                id: r + ':' + n.tag_id,
                organizationId: r,
                color: n.tag_color,
                tagId: n.tag_id,
                name: n.tag_name,
                displayName: n.tag_name,
              }).color &&
              (s.color = s.color.replace('0x', '#')),
            (i.roleTag = s),
            i
          );
        }),
        ($d.prototype.getAll = function () {
          return this.host.models.Role.getAll();
        }),
        ($d.prototype.getById = function (e) {
          return (e = this.__resolveRoleId(e)), this.host.models.Role.get('role:' + e);
        }),
        ($d.prototype.refresh = function (u) {
          return ad(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return 0 === (t = Object.keys(this._roleConversations)).length
                    ? [2]
                    : [4, this.host.entities.findMulti(t, u)];
                case 1:
                  for (n = e.sent(), r = 0, o = n; r < o.length; r++)
                    (i = o[r]),
                      (s = i.entity),
                      (a = i.metadata),
                      s &&
                        a &&
                        (a.owners || (a.owners = []),
                        this.__injectSearchResult({
                          entity: { id: s.token, displayName: s.display_name },
                          metadata: a,
                          organizationId: u,
                        }));
                  return [2];
              }
            });
          });
        }),
        ($d.prototype.reactToFriendsEventCR = function (a) {
          return ad(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = a.action),
                    (n = a.attrs),
                    (r = n.id),
                    (o = n.metadata),
                    (i = void 0 === o ? {} : o),
                    (s = n.organizationId),
                    (n.action = t),
                    (n.token = r),
                    [4, this.__reactToRoleChange(i.id, s, i.triggered_id, n)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        ($d.prototype.reactToFriendsEvent = function (s) {
          return ad(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = s.data.friend),
                    (n = t.metadata),
                    (r = void 0 === n ? {} : n),
                    (o = t.organization_id),
                    (i = (function (e, t) {
                      var n = {};
                      for (var r in e)
                        Object.prototype.hasOwnProperty.call(e, r) &&
                          t.indexOf(r) < 0 &&
                          (n[r] = e[r]);
                      if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
                        var o = 0;
                        for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
                          t.indexOf(r[o]) < 0 &&
                            Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
                            (n[r[o]] = e[r[o]]);
                      }
                      return n;
                    })(t, ['metadata', 'organization_id'])),
                    [4, this.__reactToRoleChange(r.id, o, r.triggered_id, i)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        ($d.prototype.__reactToRoleChange = function (f, v, y, g) {
          return ad(this, void 0, void 0, function () {
            var t, n, r, o, i, s, a, u, c, l, d, h, p;
            return ud(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((v = this._resolveModelId(v)),
                    (f = this.__resolveRoleId(f)),
                    (y = this._resolveModelId(y)),
                    (t = this.host.currentUser),
                    (n = g.action),
                    (r = g.token),
                    (o = function () {
                      return t.roles.some(function (e) {
                        return e.botUserId === f;
                      });
                    }),
                    (i = this._previouslyInRoles[f] || o()),
                    (s = g.event_status),
                    'del' === n)
                  ) {
                    if (s && 'end' !== s) return (this._previouslyInRoles[f] = i), [2];
                    delete this._previouslyInRoles[f];
                  }
                  return (
                    (a = this.getById(f)),
                    [
                      4,
                      Promise.all([
                        this.find(f, v, { bypassCache: !0, ignoreNotFound: !0 }),
                        this.host.users.find(y, { organizationId: v, ignoreNotFound: !0 }),
                      ]),
                    ]
                  );
                case 1:
                  return (
                    (u = e.sent()),
                    (c = u[0]),
                    (l = u[1]),
                    (a || c) &&
                      ((d = 'del' === n && a && !c) &&
                        ((c = a),
                        (h = 'role:' + f),
                        this.host.models.Role.inject({ id: h, memberIds: [] }),
                        this.host.models.Role.eject(c)),
                      (p = o()) && !i
                        ? this.emit('change', {
                            type: 'OPT_IN',
                            role: c,
                            target: t,
                            triggeredBy: l,
                          })
                        : !p &&
                          i &&
                          (this.host.models.Group.eject(r),
                          this.host.models.User.touch(this.host.currentUserId),
                          this.emit('change', {
                            type: 'OPT_OUT',
                            isRoleDeleted: d,
                            role: c,
                            target: t,
                            triggeredBy: l,
                          }))),
                    [2]
                  );
              }
            });
          });
        }),
        sd([Object(Rs.decorator)()], $d.prototype, 'findAll', null),
        sd([Object(Rs.decorator)()], $d.prototype, 'findByOrganizationId', null),
        sd([Object(Rs.decorator)()], $d.prototype, 'find', null),
        sd([Object(Rs.decorator)()], $d.prototype, 'saveRole', null),
        sd([Object(Rs.decorator)()], $d.prototype, 'removeSavedRole', null),
        sd([Object(Rs.decorator)()], $d.prototype, 'findSavedRoles', null),
        sd([Object(Rs.decorator)()], $d.prototype, 'refresh', null),
        sd([Object(Rs.decorator)()], $d.prototype, '__reactToRoleChange', null),
        $d),
      Md =
        ((md = function (e, t) {
          return (md =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          md(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      zd = function () {
        return (zd =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      kd =
        (Md(Hd, (gd = Ua)),
        (Hd.prototype.findAll = function (o) {
          return (
            void 0 === o && (o = {}),
            cd(this, void 0, void 0, function () {
              var t,
                n,
                r = this;
              return ld(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = ee.a.defaults(o, { ignoreNotFound: !0, bypassCache: !1 })),
                      0 !== (t = this.host.models.Organization.getAll()).length
                        ? [3, 2]
                        : [4, this.host.organizations.findAll()]
                    );
                  case 1:
                    (t = e.sent()), (e.label = 2);
                  case 2:
                    return [
                      4,
                      Promise.all(
                        t.map(function (e) {
                          return r.findAllForOrganization(e.id, o);
                        })
                      ),
                    ];
                  case 3:
                    return (n = e.sent()), [2, ee.a.flatten(n)];
                }
              });
            })
          );
        }),
        (Hd.prototype.findAllForOrganization = function (i, s) {
          return (
            void 0 === s && (s = {}),
            cd(this, void 0, void 0, function () {
              var t,
                n,
                r,
                o = this;
              return ld(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (s = ee.a.defaults(s, { ignoreNotFound: !0, bypassCache: !1 })),
                      (i = this._resolveModelId(i)),
                      (t = this._resolveEntity(i)).rolesEnabled && t.canAdminRoles
                        ? [4, this.host.api.roleTags.findAll(i)]
                        : [2, []]
                    );
                  case 1:
                    if ((n = e.sent()))
                      return (
                        (r = n.map(function (e) {
                          var t = i + ':' + e.tag_id;
                          return o.host.models.RoleTag.inject(
                            zd(zd({}, e), { id: t, organizationId: i })
                          );
                        })),
                        this.host.models.Organization.touch(i),
                        [2, r]
                      );
                    if (s.ignoreNotFound) return [2, []];
                    throw new G('roleTags', i);
                }
              });
            })
          );
        }),
        (Hd.prototype.reactToUpdateEventCR = function (e) {
          var t = e.data,
            n = (t = Ta(t)).entity,
            r = t.organization_id,
            o = n.color,
            i = n.display_name,
            s = n.id || n.token,
            a = o.color_id,
            u = o.color_value;
          return this.host.models.RoleTag.inject({
            color: a,
            colorValue: u,
            id: r + ':' + s,
            name: i,
            organizationId: r,
            tagId: s,
          });
        }),
        (Hd.prototype.reactToUpdateEvent = function (e) {
          var t = e.data;
          if (!this.config.condensedReplays || !t.entity) {
            var n = (t = Ta(t)).color,
              r = t.display_name,
              o = t.organization_key,
              i = t.token,
              s = n.color_id,
              a = n.color_value;
            return this.host.models.RoleTag.inject({
              color: s,
              colorValue: a,
              id: o + ':' + i,
              name: r,
              organizationId: o,
              tagId: i,
            });
          }
          this.reactToUpdateEventCR({ data: t });
        }),
        (Hd.prototype.getAll = function () {
          return this.host.models.RoleTag.getAll();
        }),
        (Hd.prototype.getById = function (e) {
          return this.host.models.RoleTag.get(e);
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([Object(Rs.decorator)()], Hd.prototype, 'findAllForOrganization', null),
        Hd),
      Nd =
        ((yd = function (e, t) {
          return (yd =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          yd(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      xd = function () {
        return (xd =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Ud =
        (Nd(Kd, (vd = Ua)),
        (Kd.prototype.batchDelete = function (e) {
          var n = e.ids,
            r = e.organizationId;
          return hd(this, void 0, void 0, function () {
            var t = this;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!Array.isArray(n)) throw new ne('ids', 'required', 'ids must be an array');
                  if (!r) throw new ne('organizationId', 'required');
                  return [
                    4,
                    this.host.api.scheduledMessages.batch({
                      ids: n,
                      operation: 'destroy',
                      organizationId: r,
                    }),
                  ];
                case 1:
                  return (
                    e.sent(),
                    [
                      2,
                      n.map(function (e) {
                        return t.host.models.ScheduledMessage.inject({ $deleted: !0, id: e });
                      }),
                    ]
                  );
              }
            });
          });
        }),
        (Kd.prototype.create = function (e) {
          var n = e.attachment,
            r = e.body,
            o = e.endDate,
            t = e.network,
            i = void 0 === t ? 'patient' : t,
            s = e.noReply,
            a = void 0 !== s && s,
            u = e.organizationId,
            c = e.recipients,
            l = e.repeating,
            d = e.sendNow,
            h = void 0 !== d && d,
            p = e.startDate,
            f = e.startTime,
            v = e.templateId,
            y = e.timezoneName;
          return hd(this, void 0, void 0, function () {
            var t = this;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    (this._validate({
                      body: r,
                      endDate: o,
                      organizationId: u,
                      recipients: c,
                      repeating: l,
                      sendNow: h,
                      shouldCheckId: !1,
                      startDate: p,
                      startTime: f,
                    }),
                    !1 === ['patient'].includes(i))
                  )
                    throw new ne('network', 'invalid', 'network must be "patient"');
                  return [
                    4,
                    this.host.api.scheduledMessages.create({
                      attachment: n,
                      body: r,
                      end_date: o,
                      network: i,
                      no_reply: a,
                      organizationId: u,
                      recipients: c,
                      repeating: l,
                      send_now: h,
                      start_date: p,
                      start_time: f,
                      template_id: v,
                      timezone_name: y,
                    }),
                  ];
                case 1:
                  return [
                    2,
                    e.sent().map(function (e) {
                      return (
                        (e.sender_id = t.host.currentUserId),
                        t.host.conversations.__injectCounterParty({
                          entityAttrs: e,
                          entityType: 'scheduledMessage',
                          organizationId: u,
                        })
                      );
                    }),
                  ];
              }
            });
          });
        }),
        (Kd.prototype.delete = function (t, n) {
          return hd(this, void 0, void 0, function () {
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({ id: t, organizationId: n, shouldCheckInvalid: !1 }),
                    [4, this.host.api.scheduledMessages.delete(t, n)]
                  );
                case 1:
                  return (
                    e.sent(), [2, this.host.models.ScheduledMessage.inject({ $deleted: !0, id: t })]
                  );
              }
            });
          });
        }),
        (Kd.prototype.downloadScheduledMessageFile = function (e) {
          var n = e.scheduleId,
            r = e.fileName,
            o = e.organizationId;
          return hd(this, void 0, void 0, function () {
            var t;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.api.scheduledMessages.downloadScheduledMessageFile({
                      scheduleId: n,
                      fileName: r,
                      organizationId: o,
                    }),
                  ];
                case 1:
                  return [
                    4,
                    wa({ attachmentContentType: (t = e.sent()).type, blob: t, fileName: r }),
                  ];
                case 2:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (Kd.prototype.fetchHits = function (s, a) {
          return hd(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i = this;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (t = ['history', 'queue'].map(function (e) {
                      return i.search({ category: e, feed: s, organizationId: a, pageSize: 0 });
                    })),
                    [4, Promise.all(t)]
                  );
                case 1:
                  return (
                    (n = e.sent()),
                    (r = n[0]),
                    (o = n[1]),
                    [2, { history: r.metadata.totalHits, queue: o.metadata.totalHits }]
                  );
              }
            });
          });
        }),
        (Kd.prototype.find = function (e) {
          var n = e.id,
            r = e.organizationId,
            o = e.category;
          return hd(this, void 0, void 0, function () {
            var t;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({ id: n, organizationId: r, shouldCheckInvalid: !1 }),
                    [
                      4,
                      this.host.api.scheduledMessages.find({
                        id: n,
                        organizationId: r,
                        isHistoryCategory: 'history' === o,
                      }),
                    ]
                  );
                case 1:
                  return (t = e.sent()), [2, this.host.models.ScheduledMessage.inject(t)];
              }
            });
          });
        }),
        (Kd.prototype.findCoarseTimezone = function (o, i) {
          return hd(this, void 0, void 0, function () {
            var t, n, r;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.api.scheduledMessages.findCoarseTimezone(o, i)];
                case 1:
                  return (t = e.sent()), (n = t.abbr), (r = t.name), [2, { abbr: n, name: r }];
              }
            });
          });
        }),
        (Kd.prototype.getAll = function () {
          return this.host.models.ScheduledMessage.getAll();
        }),
        (Kd.prototype.getById = function (e) {
          return this.host.models.ScheduledMessage.get(e);
        }),
        (Kd.prototype.search = function (e) {
          var o = e.category,
            i = e.continuation,
            s = e.feed,
            t = e.network,
            a = void 0 === t ? 'patient' : t,
            u = e.organizationId,
            c = e.pageSize,
            l = e.range,
            n = e.sortBy,
            d = void 0 === n ? 'scheduled_time' : n,
            r = e.sortOrder,
            h = void 0 === r ? 'asc' : r;
          return hd(this, void 0, void 0, function () {
            var t, n, r;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.search.query({
                      query: xd(xd({}, l ? { range: l } : null), { schedule_message_category: o }),
                      continuation: i,
                      feedLevel: s,
                      network: a,
                      organizationId: u,
                      pageSize: c,
                      returnFields: [],
                      sort: ((r = {}), (r[d] = h), r),
                      types: ['scheduledMessage'],
                    }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = this._processSearchResults(t.results)),
                    [2, { metadata: t.metadata, results: n }]
                  );
              }
            });
          });
        }),
        (Kd.prototype.update = function (e) {
          var n = e.attachment,
            r = e.body,
            o = e.endDate,
            i = e.id,
            s = e.organizationId,
            a = e.repeating,
            u = e.startDate,
            c = e.startTime,
            l = e.templateId,
            d = e.timezoneName;
          return hd(this, void 0, void 0, function () {
            var t;
            return pd(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this._validate({
                      body: r,
                      endDate: o,
                      id: i,
                      organizationId: s,
                      repeating: a,
                      startDate: u,
                      startTime: c,
                    }),
                    [
                      4,
                      this.host.api.scheduledMessages.update({
                        attachment: n,
                        body: r,
                        end_date: o,
                        id: i,
                        organizationId: s,
                        repeating: a,
                        start_date: u,
                        start_time: c,
                        template_id: l,
                        timezone_name: d,
                      }),
                    ]
                  );
                case 1:
                  return (t = e.sent()), [2, this.host.models.ScheduledMessage.inject(t)];
              }
            });
          });
        }),
        (Kd.prototype._processSearchResults = function (e) {
          return e
            .map(function (e) {
              return e.entity;
            })
            .filter(function (e) {
              return !e.$deleted;
            });
        }),
        (Kd.prototype._validate = function (e) {
          var t = e.body,
            n = e.endDate,
            r = e.id,
            o = e.organizationId,
            i = e.recipients,
            s = e.repeating,
            a = e.sendNow,
            u = e.shouldCheckId,
            c = void 0 === u || u,
            l = e.shouldCheckInvalid,
            d = void 0 === l || l,
            h = e.startDate,
            p = e.startTime;
          if (c && !r) throw new ne('id', 'required');
          if (!o) throw new ne('organizationId', 'required');
          if (d) {
            if (!t || 0 === t.trim().length)
              throw new ne('body', 'invalid', 'body must be at least 1 character');
            if (!(c || (Array.isArray(i) && 0 < i.length && i.length <= 5)))
              throw new ne(
                'recipients',
                'invalid',
                'recipients must be an array of ids between 1 and 5 elements'
              );
            if (!a) {
              var f = Date.parse(h + 'T' + p);
              if (isNaN(f))
                throw new ne(
                  'startDate',
                  'invalid',
                  'start date and time must be the correct format'
                );
              if (s) {
                if (!1 === ['daily', 'weekly', 'biweekly', 'monthly'].includes(s))
                  throw new ne(
                    'repeating',
                    'invalid',
                    'repeating must be either "daily", "weekly", "biweekly", or "monthly"'
                  );
                var v = Date.parse('' + n);
                if (isNaN(v))
                  throw new ne('endDate', 'invalid', 'endDate must be the correct format');
              }
            }
          }
        }),
        dd([Object(Rs.decorator)()], Kd.prototype, 'downloadScheduledMessageFile', null),
        dd([Object(Rs.decorator)()], Kd.prototype, 'fetchHits', null),
        dd([Object(Rs.decorator)()], Kd.prototype, 'find', null),
        dd([Object(Rs.decorator)()], Kd.prototype, 'findCoarseTimezone', null),
        dd([Object(Rs.decorator)()], Kd.prototype, 'search', null),
        Kd),
      Ld =
        ((Vd.is = function (e) {
          return e instanceof this;
        }),
        Vd),
      qd = function () {
        return (qd =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Dd = function (e, s, a, u) {
        return new (a = a || Promise)(function (n, t) {
          function r(e) {
            try {
              i(u.next(e));
            } catch (e) {
              t(e);
            }
          }
          function o(e) {
            try {
              i(u.throw(e));
            } catch (e) {
              t(e);
            }
          }
          function i(e) {
            var t;
            e.done
              ? n(e.value)
              : ((t = e.value) instanceof a
                  ? t
                  : new a(function (e) {
                      e(t);
                    })
                ).then(r, o);
          }
          i((u = u.apply(e, s || [])).next());
        });
      },
      Bd = function (n, r) {
        var o,
          i,
          s,
          e,
          a = {
            label: 0,
            sent: function () {
              if (1 & s[0]) throw s[1];
              return s[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (e = { next: t(0), throw: t(1), return: t(2) }),
          'function' == typeof Symbol &&
            (e[Symbol.iterator] = function () {
              return this;
            }),
          e
        );
        function t(t) {
          return function (e) {
            return (function (t) {
              if (o) throw new TypeError('Generator is already executing.');
              for (; a; )
                try {
                  if (
                    ((o = 1),
                    i &&
                      (s =
                        2 & t[0]
                          ? i.return
                          : t[0]
                          ? i.throw || ((s = i.return) && s.call(i), 0)
                          : i.next) &&
                      !(s = s.call(i, t[1])).done)
                  )
                    return s;
                  switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                    case 0:
                    case 1:
                      s = t;
                      break;
                    case 4:
                      return a.label++, { value: t[1], done: !1 };
                    case 5:
                      a.label++, (i = t[1]), (t = [0]);
                      continue;
                    case 7:
                      (t = a.ops.pop()), a.trys.pop();
                      continue;
                    default:
                      if (
                        !(
                          (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                          (6 !== t[0] && 2 !== t[0])
                        )
                      ) {
                        a = 0;
                        continue;
                      }
                      if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                        a.label = t[1];
                        break;
                      }
                      if (6 === t[0] && a.label < s[1]) {
                        (a.label = s[1]), (s = t);
                        break;
                      }
                      if (s && a.label < s[2]) {
                        (a.label = s[2]), a.ops.push(t);
                        break;
                      }
                      s[2] && a.ops.pop(), a.trys.pop();
                      continue;
                  }
                  t = r.call(n, a);
                } catch (e) {
                  (t = [6, e]), (i = 0);
                } finally {
                  o = s = 0;
                }
              if (5 & t[0]) throw t[1];
              return { value: t[0] ? t[1] : void 0, done: !0 };
            })([t, e]);
          };
        }
      },
      Fd = {},
      Gd = function (e) {
        return e.$entityType + ':' + e.id;
      };
    function Vd(e, t, n, r) {
      (this.id = 'searchResult:' + t + ':' + e.id),
        (this.entity = e),
        (this.entityId = e.id),
        (this.entityType = e.$entityType),
        (this.metadata = r),
        (this.organizationId = t),
        (this.conversationId = n);
    }
    function Kd() {
      return (null !== vd && vd.apply(this, arguments)) || this;
    }
    function Hd() {
      return (null !== gd && gd.apply(this, arguments)) || this;
    }
    function $d() {
      var h = (null !== _d && _d.apply(this, arguments)) || this;
      return (
        (h.__injectSearchResult = function (e) {
          var t = e.entity,
            n = e.metadata,
            r = void 0 === n ? {} : n,
            o = e.organizationId;
          return (
            (r = Sd(Sd({}, r), { display_name: t.displayName, token: h.__resolveRoleId(t.id) })),
            h.__injectRoleFromMetadata({ metadata: r, organizationId: o })
          );
        }),
        (h.__injectRoleAssignmentEntity = function (e, t, n) {
          return h.__injectRoleFromMetadata({
            metadata: {
              display_name: e,
              meta_type: t.meta_type,
              owners: t.owner_id,
              tag_color: t.tag_color,
              tag_id: t.tag_id,
              tag_name: t.tag_name,
              token: t.id,
            },
            organizationId: n,
            replaceExisting: !1,
          });
        }),
        (h.__resolveRoleId = function (e) {
          if ('string' != typeof e) {
            if (!Pd.includes(e.$entityType)) return e;
            e = h._resolveModelId(e);
          }
          return e.replace('role:', '');
        }),
        (h._onChangeConversation = function (e, t) {
          var n = t.counterParty,
            r = t.counterPartyType,
            o = n && n.members && 0 < n.members.length;
          if ('group' === r && o)
            for (var i = 0, s = n.members; i < s.length; i++) {
              var a = s[i];
              if (a.isRoleBot) {
                var u = h._roleConversations[a.id] || [];
                if (
                  (u.includes(t) || u.push(t),
                  (h._roleConversations[a.id] = u),
                  'ROLE_P2P' === n.groupType)
                ) {
                  var c = h._roleP2PConversations[a.id] || [];
                  c.includes(t) || c.push(t), (h._roleP2PConversations[a.id] = c);
                }
              }
            }
        }),
        (h._onRemoveConversation = function (e, t) {
          var n = t.counterParty,
            r = t.counterPartyType,
            o = n && n.members && 0 < n.members.length;
          if ('group' === r && o)
            for (var i = 0, s = n.memberIds; i < s.length; i++) {
              var a = s[i],
                u = h._roleConversations[a],
                c = u ? u.indexOf(t) : -1;
              if (
                (-1 < c && u.splice(c, 1),
                u && 0 === u.length && delete h._roleConversations[a],
                'ROLE_P2P' === n.groupType)
              ) {
                var l = h._roleP2PConversations[a],
                  d = l ? l.indexOf(t) : -1;
                -1 < d && l.splice(d, 1), l && 0 === l.length && delete h._roleP2PConversations[a];
              }
            }
        }),
        h
      );
    }
    function Wd() {
      var _ = (null !== wd && wd.apply(this, arguments)) || this;
      return (
        (_._addProcessingEvent = function (e) {
          var t = _.host.models.Product.getAll()[0];
          if (t) {
            var n = e.actionType,
              r = e.entity;
            n === _i.ROLE_OPT_IN && t.rolesOptingIn.push(r.id),
              t.activeProcessingEvents.push(e),
              _.host.models.Product.inject(t),
              _.emit('processing:start', e);
          }
        }),
        (_._removeProcessingEvent = function (e) {
          var t = _.host.models.Product.getAll()[0];
          if (t) {
            for (
              var n = t.activeProcessingEvents,
                r = t.rolesOptingIn,
                o = e.actionType,
                i = e.entity,
                s = n.length - 1;
              0 <= s;
              s--
            ) {
              var a = n[s];
              if (
                o === a.actionType &&
                i.id === a.entity.id &&
                (n.splice(s, 1),
                o === _i.ROLE_OPT_IN && r.includes(i.id) && r.splice(r.indexOf(i.id), 1),
                o !== _i.MESSAGE_REPLAY)
              )
                break;
            }
            _.host.models.Product.inject(t), _.emit('processing:stop', e);
          }
        }),
        (_._onChangeOrganization = function (e, t) {
          var n = _.host.models.Product.getAll()[0];
          if (n) {
            var r = _.host.models.Organization.getAll();
            if (0 !== r.length) {
              for (
                var o = { organizations: r }, i = 0, s = 0, a = 0, u = 0, c = 0, l = 0, d = r;
                l < d.length;
                l++
              ) {
                var h = d[l];
                h.$placeholder ||
                  ((i += h.conversations.length),
                  (s += h.unreadCount),
                  (a += h.unreadPriorityCount),
                  h.networks.virtualWaitingRoom &&
                    ((u += h.networks.patient.unreadCount),
                    (c += h.networks.patient.unreadPriorityCount)));
              }
              (o.conversationCount = i),
                (o.unreadCount = s),
                (o.unreadPriorityCount = a),
                (o.unreadVWRCount = u),
                (o.unreadVWRPriorityCount = c);
              for (var p = !1, f = 0, v = Object.entries(o); f < v.length; f++) {
                var y = v[f],
                  g = y[0],
                  m = y[1];
                Pl()(n[g], m) || ((n[g] = m), (p = !0));
              }
              p && _.host.models.Product.inject(n);
            }
          }
        }),
        _
      );
    }
    function Xd() {
      return (null !== Od && Od.apply(this, arguments)) || this;
    }
    function Qd(u, c, l) {
      return Dd(this, void 0, void 0, function () {
        var t, n, r, o, i, s, a;
        return Bd(this, function (e) {
          switch (e.label) {
            case 0:
              if (!l.placeholderEntityAllowLoading) return [2];
              Object.defineProperty(c, '$$loading', { value: !0, configurable: !0 }), (e.label = 1);
            case 1:
              return e.trys.push([1, 3, , 4]), [4, l.finder(c.id)];
            case 2:
              return e.sent(), [3, 4];
            case 3:
              return ((n = e.sent()).code !== G.CODE && n.code !== X.CODE) || (t = !0), [3, 4];
            case 4:
              if ((delete c.$$loading, t)) {
                for (r = 0, o = Object.entries(l.notFoundAttributes); r < o.length; r++)
                  (i = o[r]), (s = i[0]), (a = i[1]), Ea(c, s) && (c[s] = a);
                Object.defineProperty(c, '$notFound', { value: !0, configurable: !0 }),
                  u.inject(c),
                  l.onNotFound && l.onNotFound(),
                  l.onLoad && l.onLoad(null),
                  l.onFinish && l.onFinish(null);
              } else delete c.$placeholder, delete c.$notFound, u.inject(c), l.onSuccess && l.onSuccess(c), l.onLoad && l.onLoad(c), l.onFinish && l.onFinish(c);
              return [2];
          }
        });
      });
    }
    function Yd(e, t, n) {
      var r = Gd(t);
      if (!Fd[r])
        return n.placeholderEntityDelayBeforeRefreshing
          ? (Object.defineProperty(t, '$$loadingScheduled', { value: !0, configurable: !0 }),
            void (Fd[r] = setTimeout(function () {
              return (function (t, n, r) {
                return Dd(this, void 0, void 0, function () {
                  return Bd(this, function (e) {
                    try {
                      return (
                        delete n.$$loadingScheduled,
                        delete Fd[Gd(n)],
                        n.$placeholder ? [2, Qd(t, n, r)] : [2]
                      );
                    } catch (e) {
                      console.error(e);
                    }
                    return [2];
                  });
                });
              })(e, t, n);
            }, n.placeholderEntityDelayBeforeRefreshing)))
          : Qd(e, t, n).catch(console.error);
    }
    function Jd(o, e) {
      var n = e.finder,
        r = e.defaultPlaceholderAttrs,
        i = e.defaultNotFoundAttrs,
        s = e.placeholderEntityDelayBeforeRefreshing,
        a = e.placeholderEntityAllowLoading,
        u = e.shouldEnsure;
      (o.ensureEntity = function (e, t) {
        return (
          void 0 === t && (t = {}),
          'function' == typeof s && (s = s()),
          'function' == typeof a && (a = a()),
          (function (e, t, n, r) {
            var o;
            void 0 === r && (r = {});
            var i = e.get(t);
            if (i)
              i.$placeholder
                ? i.$$loading || i.$notFound || r.onlyPlaceholder || Yd(e, i, r)
                : (r.onExists && r.onExists(i), r.onFinish && r.onFinish(i));
            else {
              if (
                ((n = qd((((o = {})[e.idAttribute] = t), o), n)),
                r.onMissing && r.onMissing(),
                (i = e.createInstance(n)),
                Object.defineProperty(i, '$placeholder', { value: !0, configurable: !0 }),
                e.inject(i),
                r.onlyPlaceholder)
              )
                return i;
              Yd(e, i, r);
            }
          })(
            o,
            e,
            qd(qd({}, r), t.attrs),
            qd(
              {
                finder: n,
                notFoundAttributes: i,
                placeholderEntityDelayBeforeRefreshing: s,
                placeholderEntityAllowLoading: a,
              },
              t
            )
          )
        );
      }),
        (o.waitForEnsuredEntity = function (n, r) {
          return (
            void 0 === r && (r = {}),
            new Promise(function (e, t) {
              o.ensureEntity(n, qd(qd({}, r), { onFinish: e }));
            })
          );
        }),
        (o.shouldEnsure = function (e, t, n) {
          return (
            void 0 === n && (n = {}),
            'string' == typeof e && (e = o.get(e)),
            !e || !(!u || !u(e, t, n)) || !(!e.$placeholder || e.$$loading || t)
          );
        });
    }
    function Zd(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function eh(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function th(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function nh(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function rh(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function oh(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function ih(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function sh(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function ah(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function uh(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function ch(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function lh(e, t, n, r) {
      var o,
        i = arguments.length,
        s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
      if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
        s = Reflect.decorate(e, t, n, r);
      else
        for (var a = e.length - 1; 0 <= a; a--)
          (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
      return 3 < i && s && Object.defineProperty(t, n, s), s;
    }
    function dh(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function hh(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    function ph(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function fh(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var vh,
      yh,
      gh,
      mh,
      _h,
      bh,
      wh,
      Ih,
      Oh,
      Th,
      Eh,
      Rh,
      Ah = function () {
        return (Ah =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Ch = ['autoForwardReceiverIds', 'conversationId', 'department', 'title'],
      Sh = function (e, t) {
        var u = t.host,
          n = e.defineModel('user', {
            replaceKeys: {
              avatar: 'avatarUrl',
              blockedPersonal: 'contactsMessagingBlockedByOrganizationIds',
              organizationKey: 'organizationId',
              organizationToken: 'organizationId',
              timeToLive: 'messagesTTL',
            },
            defaultValues: {
              botRole: null,
              contactsMessagingBlockedByOrganizationIds: [],
              isPatient: !1,
              isPatientContact: !1,
              organizationIds: [],
              presence: mi.UNKNOWN,
              profileByOrganizationId: {},
              removedFromOrg: !1,
              roles: [],
            },
            skipCamelizationForKeys: ['metadata'],
            parseAttrs: function (e) {
              var t = e.organizationId;
              if (
                (e.dndAutoForwardReceivers
                  ? (e.autoForwardReceiverIds = e.dndAutoForwardReceivers.map(function (e) {
                      return e.token;
                    }))
                  : '' === e.dndAutoForwardReceiver || 'undefined' === e.dndAutoForwardReceiver
                  ? (e.autoForwardReceiverIds = [])
                  : void 0 !== e.dndAutoForwardReceiver &&
                    (e.autoForwardReceiverIds = [e.dndAutoForwardReceiver]),
                delete e.dndAutoForwardReceiver,
                delete e.dndAutoForwardReceivers,
                t)
              ) {
                delete e.organizationId,
                  e.organizationIds || (e.organizationIds = []),
                  e.organizationIds.includes(t) || e.organizationIds.push(t);
                var n = Ah(Ah({}, ee.a.pick(e, Ch)), { userId: e.id, organizationId: t });
                delete e.autoForwardReceiverIds,
                  delete e.conversationId,
                  e.profileByOrganizationId || (e.profileByOrganizationId = {}),
                  (e.profileByOrganizationId[t] = n);
              }
              if ('patientId' in e && !e.patientId.startsWith('patient:')) {
                var r = 'patient:' + e.patientId,
                  o = e.patientId;
                (e.isPatient = !e.isPatientContact),
                  (e.patientId = r),
                  (e.patientBroadcastListDetails = {
                    addedByDisplayName: e.addedByDisplayName,
                    addedOn: e.addedOn,
                  });
                var i = { id: r, dob: e.patientDob, gender: e.patientGender, mrn: e.patientMrn };
                if (e.isPatient) i.userId = e.id;
                else if (e.isPatientContact) {
                  var s = 'patientContact:' + e.id;
                  (e.patientContactId = s),
                    u.models.User.injectPlaceholder({
                      id: o,
                      displayName: e.patientDisplayName,
                      patientId: r,
                    }),
                    u.models.PatientContact.injectPlaceholder({
                      id: s,
                      relation: e.relationName,
                      userId: e.id,
                      patientId: r,
                    }),
                    (i.userId = o);
                }
                u.models.Patient.injectPlaceholder(i),
                  delete e.addedByDisplayName,
                  delete e.addedOn,
                  delete e.patientDisplayName,
                  delete e.patientDob,
                  delete e.patientGender,
                  delete e.patientMrn,
                  delete e.relationName;
              }
              if ('metadata' in e) {
                if (
                  'feature_service' in e.metadata &&
                  'patient_messaging' === e.metadata.feature_service
                ) {
                  var a = (i = e.metadata).is_patient_contact;
                  ('string' == typeof a && 'true' === a) || ('boolean' == typeof a && a)
                    ? ((e.patientContactId = 'patientContact:' + e.id),
                      (e.isPatientContact = !0),
                      u.users._injectPatientContactEntity(e, t))
                    : ((e.patientId = 'patient:' + e.id),
                      (e.isPatient = !0),
                      u.users._injectPatientEntity(i, e.id, t));
                }
                'feature_service' in e.metadata &&
                  'role' === e.metadata.feature_service &&
                  t &&
                  u.roles.__injectRoleFromMetadata({
                    metadata: Ah(Ah({}, e.metadata), { display_name: e.display_name, token: e.id }),
                    organizationId: t,
                  }),
                  delete e.metadata;
              }
              return (
                e.avatarUrl && (e.avatarUrl = fd(e.avatarUrl, u.config)),
                !e.displayName && e.name && (e.displayName = e.name),
                e.displayName && mo(e.displayName) && (e.displayName = _o(e.displayName)),
                e
              );
            },
            beforeInject: function (e, t) {
              if (
                t &&
                (e.organizationIds &&
                  (e.organizationIds = ee.a.union(t.organizationIds, e.organizationIds)),
                e.profileByOrganizationId)
              ) {
                var n = {};
                if (t.profileByOrganizationId)
                  for (
                    var r = 0, o = Object.entries(t.profileByOrganizationId);
                    r < o.length;
                    r++
                  ) {
                    var i = o[r],
                      s = i[0],
                      a = i[1];
                    (n[s] = {}), Object.assign(n[s], a);
                  }
                for (var u = 0, c = Object.entries(e.profileByOrganizationId); u < c.length; u++) {
                  var l = c[u];
                  (s = l[0]), (a = l[1]), n[s] || (n[s] = {}), Object.assign(n[s], a);
                }
                e.profileByOrganizationId = n;
              }
            },
            afterAssignment: function (e) {
              var t = e.profileByOrganizationId;
              (e.contactsMessagingBlocked = 0 < e.contactsMessagingBlockedByOrganizationIds.length),
                (e.isRoleBot = e.metadata.some(function (e) {
                  return 'role' === e.data.feature_service;
                })),
                (e.shouldDisplay = !e.metadata.some(function (e) {
                  return 'true' === e.data.invisible;
                }));
              for (var n = 0, r = Object.values(t); n < r.length; n++) {
                var o = r[n];
                e.dnd || (o.autoForwardReceiverIds = []),
                  u.users._setMembersOnEntity(o, 'autoForwardReceiverIds', 'autoForwardReceivers');
              }
              e.removedFromOrg &&
                (!e.displayName || e.$$loading || e.$$loadingScheduled || e.$notFound) &&
                (e.displayName = 'Removed User');
            },
            relations: {
              belongsTo: {
                patient: { type: 'patient', foreignKey: 'patientId' },
                patientContact: { type: 'patientContact', foreignKey: 'patientContactId' },
              },
              hasMany: { metadata: { type: 'metadata', foreignKey: 'entityId' } },
            },
          });
        return (
          Jd(n, {
            finder: function () {
              for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              return (e = u.users).find.apply(e, t);
            },
            placeholderEntityDelayBeforeRefreshing: function () {
              return u.config.placeholderEntityDelayBeforeRefreshing;
            },
            placeholderEntityAllowLoading: function () {
              return u.config.placeholderEntityAllowLoading;
            },
            defaultPlaceholderAttrs: { displayName: 'Loading...' },
            defaultNotFoundAttrs: { displayName: '<User Not Found>' },
          }),
          n
        );
      },
      Ph =
        ((Rh = function (e, t) {
          return (Rh =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Rh(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      jh = function () {
        return (jh =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Mh = [
        'avatar',
        'conversation_id',
        'department',
        'description',
        'display_name',
        'dnd_auto_forward_receiver',
        'dnd',
        'first_name',
        'group_token',
        'is_public',
        'last_login_time',
        'last_name',
        'members',
        'name',
        'network',
        'num_members',
        'organization_key',
        'pagers',
        'status',
        'title',
        'token',
        'total_members',
      ],
      zh = {
        distributionList: bi.toServer(bi.DISTRIBUTION_LIST),
        distributionListMember: bi.toServer(bi.DISTRIBUTION_LIST_MEMBER),
        forum: bi.toServer(bi.FORUM),
        group: bi.toServer(bi.GROUP),
        messageTemplate: bi.toServer(bi.MESSAGE_TEMPLATE),
        organization: bi.toServer(bi.ORGANIZATION),
        patient_account: bi.toServer(bi.PATIENT),
        patientDistributionList: bi.toServer(bi.PATIENT_DISTRIBUTION_LIST),
        scheduledMessage: bi.toServer(bi.SCHEDULED_MESSAGE),
        tag: bi.toServer(bi.TAG),
        team: bi.toServer(bi.TEAM),
        user: bi.toServer(bi.USER),
      },
      kh = Object.values(zh),
      Nh =
        (Ph(bp, (Eh = Ua)),
        (bp.prototype.query = function (Z) {
          return Zd(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o,
              i,
              s,
              a,
              u,
              c,
              l,
              d,
              h,
              p,
              f,
              v,
              y,
              g,
              m,
              _,
              b,
              w,
              I,
              O,
              T,
              E,
              R,
              A,
              C,
              S,
              P,
              j,
              M,
              z,
              k,
              N,
              x,
              U,
              L,
              q,
              D,
              B,
              F,
              G,
              V,
              K,
              H,
              $,
              W,
              X,
              Q,
              Y,
              J;
            return eh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (
                    ((t = Z.continuation),
                    (n = void 0 === t ? null : t),
                    (r = Z.enabledCapabilities),
                    (o = void 0 === r ? [] : r),
                    (i = Z.excludeEmptyLists),
                    (s = void 0 !== i && i),
                    (a = Z.excludeIds),
                    (u = void 0 === a ? [] : a),
                    (c = Z.excludeSelf),
                    (l = void 0 !== c && c),
                    (d = Z.followContinuations),
                    (h = void 0 !== d && d),
                    (p = Z.includeDisabled),
                    (f = void 0 !== p && p),
                    (v = Z.network),
                    (y = void 0 === v ? 'provider' : v),
                    (g = Z.organizationId),
                    (m = void 0 === g ? null : g),
                    (_ = Z.organizationIds),
                    (b = void 0 === _ ? [] : _),
                    (w = Z.pageSize),
                    (I = Z.query),
                    (O = void 0 === I ? {} : I),
                    (T = Z.resultsFormat),
                    (E = void 0 === T ? 'entities' : T),
                    (R = Z.returnFields),
                    (A = void 0 === R ? Mh : R),
                    (C = Z.sort),
                    (S = void 0 === C ? [] : C),
                    (P = Z.types),
                    0 === (j = void 0 === P ? [] : P).length)
                  )
                    throw new ne('types', 'required', 'no types specified');
                  if (
                    ((j = ee.a.uniq(
                      j.map(function (e) {
                        return bi.isValid(e) ? bi.toServer(e) : zh[e];
                      })
                    )),
                    0 < (M = ee.a.difference(j, kh)).length)
                  )
                    throw new ne('types', 'invalid', 'invalid types: ' + M.join(', '));
                  if ((m && (b = [m]), 0 === b.length))
                    throw new ne(
                      'organizationIds',
                      'invalid',
                      'search must be done in a context of an organization'
                    );
                  if (1 === b.length && (z = this.host.models.Organization.get(m)) && z.isContacts)
                    return (
                      (k = this._queryLocalOrganization({ organization: z, query: O, types: j })),
                      (X = k.results),
                      (N = k.metadata),
                      [2, { results: X, metadata: N }]
                    );
                  if (
                    ('ids' === E && (E = 'tokens'),
                    (u = Na(u)),
                    (x = {
                      directory: b,
                      include_disabled: f,
                      render_metadata: !0,
                      results_format: E,
                      return_fields: A,
                      type: j,
                    }),
                    o.length && (x.enabled_capabilities = o),
                    S && S.length
                      ? (x.sort = S.map(function (e) {
                          return In.underscoreKey(e);
                        }))
                      : 'object' == typeof S && (x.sort = S),
                    x.type.includes('schedule_message') &&
                      Z.feedLevel &&
                      (x.feed_level = Z.feedLevel),
                    isNaN(parseInt(w)) || (x.page_size = w),
                    (U = {}),
                    O && 0 < Object.keys(O).length)
                  ) {
                    for (L = 0, q = Object.entries(O); L < q.length; L++)
                      (D = q[L]),
                        (B = D[0]),
                        (F = D[1]),
                        B.includes(',') &&
                          ((G = B.split(',').map(In.underscoreKey).join(',')),
                          (U[G] = F),
                          delete O[B]);
                    (U = jh(jh({}, U), In.underscoreObject(O))), (x.bool = { must: U });
                  }
                  return (
                    s &&
                      (j.includes('distribution_list') ||
                        j.includes('patient_distribution_list')) &&
                      (x.bool = Object.assign({}, x.bool, { must_not: { total_members: '0' } })),
                    (V = [
                      {
                        continuation: n,
                        excludeIds: u,
                        excludeSelf: l,
                        followContinuations: h,
                        network: y,
                        params: x,
                      },
                    ]),
                    [4, Promise.all(V.map(this._query))]
                  );
                case 1:
                  for (K = e.sent(), H = [], $ = 0, W = K; $ < W.length; $++)
                    for (X = W[$].results, Q = 0, Y = X; Q < Y.length; Q++) (J = Y[Q]), H.push(J);
                  return [2, { results: (H = ee.a.uniqBy(H, 'entity')), metadata: K[0].metadata }];
              }
            });
          });
        }),
        (bp.prototype._queryLocalOrganization = function (e) {
          var t = e.organization,
            n = e.query,
            r = e.types,
            o = t.id,
            i = this._searchLocalOrganization({ organization: t, query: n, types: r }),
            s = { firstHit: 1, totalHits: i.length },
            a = Object.keys(n);
          if (0 === i.length && 0 < a.length) {
            var u = a.find(function (e) {
                return e.includes('displayName');
              }),
              c = u ? n[u] : n[a[0]];
            if (Fn()(c) || mo(c)) {
              var l = Fn()(c) ? c : Io(c),
                d = this.host.models.User.createInstance({
                  displayName: mo(c) ? _o(c) : c,
                  id: l,
                  messageAnyoneRecipient: !0,
                  organizationId: o,
                });
              return { results: [new Ld(d, o, s)], metadata: s };
            }
          }
          return { results: i, metadata: s };
        }),
        (function (e, t, n, r) {
          var o,
            i = arguments.length,
            s = i < 3 ? t : null === r ? (r = Object.getOwnPropertyDescriptor(t, n)) : r;
          if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate)
            s = Reflect.decorate(e, t, n, r);
          else
            for (var a = e.length - 1; 0 <= a; a--)
              (o = e[a]) && (s = (i < 3 ? o(s) : 3 < i ? o(t, n, s) : o(t, n)) || s);
          3 < i && s && Object.defineProperty(t, n, s);
        })([Object(Rs.decorator)()], bp.prototype, 'query', null),
        bp),
      xh =
        ((Th = function (e, t) {
          return (Th =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Th(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Uh =
        (xh(_p, (Oh = Ua)),
        (_p.prototype.mounted = function () {
          this._fetched = !1;
        }),
        (_p.prototype.dispose = function () {
          this._fetched = !1;
        }),
        (_p.prototype.find = function (o, e) {
          var t = void 0 === e ? {} : e,
            i = t.organizationId,
            n = t.bypassCache,
            s = void 0 !== n && n;
          return nh(this, void 0, void 0, function () {
            var t, n, r;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !o)) throw new ne('id', 'required');
                  if (!i) throw new ne('organizationId', 'required');
                  return s || !(t = this.host.models.Team.get(o)) || t.$placeholder
                    ? [4, this.host.api.teams.find(o, { organizationId: i })]
                    : [2, t];
                case 1:
                  return (n = e.sent()), (r = n.team), [2, (t = this.host.models.Team.inject(r))];
              }
            });
          });
        }),
        (_p.prototype.refresh = function (t, e) {
          var n = (void 0 === e ? {} : e).organizationId;
          return nh(this, void 0, void 0, function () {
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.find(t, { organizationId: n, bypassCache: !0 })];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (_p.prototype.findAll = function (e) {
          var t = (void 0 === e ? {} : e).bypassCache,
            o = void 0 !== t && t;
          return nh(this, void 0, void 0, function () {
            var t, n, r;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  return !o && this._fetched
                    ? [2, this.getAll()]
                    : 0 !== (t = this.host.models.Organization.getAll()).length
                    ? [3, 2]
                    : [4, this.host.organizations.findAll()];
                case 1:
                  (t = e.sent()), (e.label = 2);
                case 2:
                  return [
                    4,
                    this.host.search.query({
                      types: ['team'],
                      organizationIds: t.map(function (e) {
                        return e.id;
                      }),
                      query: { displayName: '' },
                      followContinuations: !0,
                    }),
                  ];
                case 3:
                  return (
                    (n = e.sent().results),
                    (r = n.map(function (e) {
                      return e.entity;
                    })),
                    (this._fetched = !0),
                    [2, r]
                  );
              }
            });
          });
        }),
        (_p.prototype.findByOrganizationId = function (n) {
          return nh(this, void 0, void 0, function () {
            var t;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (n = this._resolveModelId(n)), [4, this.host.organizations.find(n)];
                case 1:
                  return (
                    (t = e.sent()),
                    [
                      4,
                      this.host.search.query({
                        types: ['team'],
                        organizationIds: t.id,
                        query: { displayName: '' },
                        followContinuations: !0,
                      }),
                    ]
                  );
                case 2:
                  return [
                    2,
                    e.sent().results.map(function (e) {
                      return e.entity;
                    }),
                  ];
              }
            });
          });
        }),
        (_p.prototype.refreshAll = function () {
          return nh(this, void 0, void 0, function () {
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.findAll({ bypassCache: !0 })];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (_p.prototype.getAll = function () {
          return this.host.models.Team.getAll();
        }),
        (_p.prototype.create = function (e) {
          var i = e.avatar,
            t = e.canMembersLeave,
            s = void 0 === t || t,
            n = e.canRequestToJoin,
            a = void 0 === n || n,
            u = e.description,
            c = e.displayName,
            r = e.memberIds,
            l = void 0 === r ? [] : r,
            d = e.organizationId;
          return nh(this, void 0, void 0, function () {
            var t,
              n,
              r,
              o = this;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !d)) throw new ne('organizationId', 'required');
                  if (l.length < 2) throw new ne('memberIds', 'required to have 2 or more IDs');
                  return [
                    4,
                    Promise.all(
                      l
                        .map(this.host.roles.__resolveRoleId)
                        .filter(Boolean)
                        .map(function (e) {
                          return o._resolveModelIdWithTypes(e, 'user');
                        })
                        .map(function (e) {
                          return o.host.users.find(e, { organizationId: d });
                        })
                    ),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    (n = gc.a.call(t)),
                    (l = n.map(function (e) {
                      return o._resolveModelIdWithTypes(e, 'user');
                    })),
                    [
                      4,
                      this.host.api.teams.create({
                        avatar: i,
                        canMembersLeave: s,
                        canRequestToJoin: a,
                        description: u,
                        displayName: c,
                        memberIds: l,
                        organizationId: d,
                      }),
                    ]
                  );
                case 2:
                  return (r = e.sent()), [2, this.host.models.Team.inject(r.team)];
              }
            });
          });
        }),
        (_p.prototype.update = function (e) {
          var n = e.avatar,
            t = e.canMembersLeave,
            r = void 0 === t || t,
            o = e.canRequestToJoin,
            i = void 0 === o || o,
            s = e.description,
            a = e.displayName,
            u = e.id,
            c = e.memberIds,
            l = void 0 === c ? [] : c,
            d = e.organizationId;
          return nh(this, void 0, void 0, function () {
            var t;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if ((this.host.requireUser(), !u)) throw new ne('id', 'required');
                  if (!d) throw new ne('organizationId', 'required');
                  if (l.length < 2) throw new ne('memberIds', 'required to have 2 or more IDs');
                  return (
                    (l = l.map(this.host.roles.__resolveRoleId)),
                    [
                      4,
                      this.host.api.teams.update({
                        avatar: n,
                        canMembersLeave: r,
                        canRequestToJoin: i,
                        description: s,
                        displayName: a,
                        id: u,
                        memberIds: l,
                        organizationId: d,
                      }),
                    ]
                  );
                case 1:
                  return (t = e.sent()), [2, this.host.models.Team.inject(t.team)];
              }
            });
          });
        }),
        (_p.prototype.delete = function (r, e) {
          var o = e.organizationId;
          return nh(this, void 0, void 0, function () {
            var t, n;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!o) throw new ne('organizationId', 'required');
                  if (!r) throw new ne('teamId', 'required');
                  return [4, this.host.api.teams.delete(r, { organizationId: o })];
                case 1:
                  return (
                    204 === (t = e.sent()) &&
                      (n = this.host.models.Team.get(r)) &&
                      this.host.models.Team.eject(n),
                    [2, t]
                  );
              }
            });
          });
        }),
        (_p.prototype.requestToJoin = function (n, e) {
          var r = e.requestedById,
            o = e.organizationId;
          return nh(this, void 0, void 0, function () {
            var t;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!o) throw new ne('organizationId', 'required');
                  if (!n) throw new ne('teamId', 'required');
                  if (!r) throw new ne('requestedById', 'required');
                  return [
                    4,
                    this.host.api.teams.requestToJoin(n, { requestedById: r, organizationId: o }),
                  ];
                case 1:
                  return (
                    204 === (t = e.sent()) &&
                      this.host.models.Team.inject({ id: n, hasCurrentUserPending: !0 }),
                    [2, t]
                  );
              }
            });
          });
        }),
        (_p.prototype.acceptJoinRequest = function (t, e) {
          var n = e.teamId,
            r = e.organizationId,
            o = e.handledAsId;
          return nh(this, void 0, void 0, function () {
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('organizationId', 'required');
                  if (!n) throw new ne('teamId', 'required');
                  if (!t) throw new ne('requestId', 'required');
                  if (!o) throw new ne('handledAsId', 'required');
                  return [
                    4,
                    this.host.api.teams.updateJoinRequest(t, {
                      teamId: n,
                      organizationId: r,
                      handledAsId: o,
                      status: 'accepted',
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (_p.prototype.declineJoinRequest = function (t, e) {
          var n = e.teamId,
            r = e.organizationId,
            o = e.handledAsId;
          return nh(this, void 0, void 0, function () {
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('organizationId', 'required');
                  if (!n) throw new ne('teamId', 'required');
                  if (!t) throw new ne('requestId', 'required');
                  if (!o) throw new ne('handledAsId', 'required');
                  return [
                    4,
                    this.host.api.teams.updateJoinRequest(t, {
                      teamId: n,
                      organizationId: r,
                      handledAsId: o,
                      status: 'declined',
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (_p.prototype.leave = function (n, e) {
          var r = (void 0 === e ? {} : e).organizationId;
          return nh(this, void 0, void 0, function () {
            var t;
            return rh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('teamId', 'required');
                  if (!r) throw new ne('organizationId', 'required');
                  return [4, this.host.api.teams.leave(n, { organizationId: r })];
                case 1:
                  return 204 === (t = e.sent()) && this.refresh(n, { organizationId: r }), [2, t];
              }
            });
          });
        }),
        (_p.prototype._setHasUserPending = function (e) {
          if (e.pendingRequestUserIds)
            for (var t = 0, n = e.pendingRequestUserIds; t < n.length; t++)
              if (n[t] === this.host.currentUserId) return void (e.hasCurrentUserPending = !0);
        }),
        (_p.prototype.__injectTeamRequest = function (e) {
          if (!e.id) return null;
          var t;
          if (
            (e.created_by && e.created_by.token && (t = this.host.models.User.inject(e.created_by)),
            e.team && e.team.id)
          ) {
            var n = e.status,
              r = Object.assign({}, e.team);
            t &&
              t.id === this.host.currentUserId &&
              ('accepted' === n
                ? ((r.hasCurrentUserBeenDeclined = !1), (r.hasCurrentUserPending = !1))
                : 'declined' === n &&
                  ((r.hasCurrentUserBeenDeclined = !0), (r.hasCurrentUserPending = !1))),
              this.host.models.Team.inject(r);
          }
          return this.host.models.TeamRequest.inject(e);
        }),
        (_p.prototype.resetDeclinedUserOnTeam = function (e) {
          this.host.models.Team.inject({ id: e, hasCurrentUserBeenDeclined: !1 });
        }),
        th([Object(Rs.decorator)()], _p.prototype, 'find', null),
        th([Object(Rs.decorator)()], _p.prototype, 'refresh', null),
        th([Object(Rs.decorator)()], _p.prototype, 'findAll', null),
        th([Object(Rs.decorator)()], _p.prototype, 'findByOrganizationId', null),
        th([Object(Rs.decorator)()], _p.prototype, 'refreshAll', null),
        _p),
      Lh = d(13),
      qh = d.n(Lh),
      Dh =
        ((Ih = function (e, t) {
          return (Ih =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          Ih(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Bh = wi.GLOBAL,
      Fh =
        (Dh(mp, (wh = Ua)),
        (mp.prototype.mounted = function () {
          (this._lastStartTypingAPICalls = {}),
            (this._lastStopTypingAPICalls = {}),
            (this._typers = {}),
            (this._currentUserTyping = {}),
            this.host.on('message:sending', this._onMessageSending);
        }),
        (mp.prototype.dispose = function () {
          vc.a
            .call(dc.a.call(vc.a.call(qh.a.call(this._typers), ee.a.values)), 'timer')
            .forEach(function (e) {
              return null !== e && clearTimeout(e);
            }),
            vc.a.call(qh.a.call(this._currentUserTyping), 'timer').forEach(function (e) {
              return null !== e && clearTimeout(e);
            }),
            (this._lastStartTypingAPICalls = null),
            (this._lastStopTypingAPICalls = null),
            (this._typers = null),
            this.host.removeListener('message:sending', this._onMessageSending);
        }),
        (mp.prototype.reactToIsTypingEvent = function (e) {
          var t,
            n = this,
            r = e.data;
          if (
            (this.host.requireUser(),
            (t = r.proxy_token ? r.proxy_token : r.sender_token) !== this.host.currentUserId)
          ) {
            var o = r.group_token,
              i = r.org_token,
              s = o || i || null,
              a = o ? wi.GROUP : i ? wi.ORGANIZATION : Bh,
              u = 'typing' === r.status;
            this.host.models.User.ensureEntity(t, { onlyPlaceholder: !1 }),
              a === Bh
                ? ee.a.get(this.host, 'currentUser.organizationIds', []).forEach(function (e) {
                    n._setTypingStatusOfUser(e, wi.ORGANIZATION, t, u);
                  })
                : this._setTypingStatusOfUser(s, a, t, u);
          }
        }),
        (mp.prototype.startTyping = function (o, e) {
          var t = void 0 === e ? {} : e,
            i = t.autoStopAfterTimeout,
            s = t.senderId,
            a = t.organizationId;
          return ih(this, void 0, void 0, function () {
            var t,
              n,
              r = this;
            return sh(this, function (e) {
              switch (e.label) {
                case 0:
                  return void 0 === o
                    ? [2]
                    : ((o = this._resolveModelId(o)),
                      (s = this._resolveModelId(s)),
                      this.host.requireUser(),
                      [4, this._sendStartTyping(o, s, a)]);
                case 1:
                  return (
                    e.sent(),
                    (t = this._currentUserTyping[o])
                      ? (clearTimeout(this._currentUserTyping[o].timer), (t.timer = null))
                      : ((t = {}), (this._currentUserTyping[o] = t)),
                    (n = 'number' == typeof i ? i : this.host.config.clearTypingStatusTimeout),
                    (t.timer = setTimeout(function () {
                      r.logger.info('auto stop typing for current user', o),
                        r.stopTyping(o, { senderId: s });
                    }, n)),
                    [2]
                  );
              }
            });
          });
        }),
        (mp.prototype._sendStartTyping = function (a, u, c) {
          return ih(this, void 0, void 0, function () {
            var t, n, r, o, i, s;
            return sh(this, function (e) {
              switch (e.label) {
                case 0:
                  return this._lastStartTypingAPICalls[a]
                    ? ((t = this._lastStartTypingAPICalls[a]),
                      (n = t.expiresAt),
                      (r = t.retVal),
                      (o = t.lastSenderId),
                      u === o ? [3, 2] : [4, this.stopTyping(a, { senderId: o })])
                    : [3, 3];
                case 1:
                  e.sent(), (e.label = 2);
                case 2:
                  if (wc()().isBefore(n)) return [2, r];
                  e.label = 3;
                case 3:
                  return [4, this.host.api.typingStatus.startTyping(a, u, c)];
                case 4:
                  return (
                    (i = e.sent()),
                    (s = wc()().add(this.config.clearTypingStatusThrottleDelay, 'ms')),
                    (this._lastStartTypingAPICalls[a] = {
                      expiresAt: s,
                      retVal: i,
                      lastSenderId: u,
                    }),
                    [2, i]
                  );
              }
            });
          });
        }),
        (mp.prototype.stopTyping = function (n, e) {
          var r = (void 0 === e ? {} : e).senderId;
          return ih(this, void 0, void 0, function () {
            var t;
            return sh(this, function (e) {
              switch (e.label) {
                case 0:
                  return void 0 === n
                    ? [2]
                    : ((n = this._resolveModelId(n)),
                      (r = this._resolveModelId(r)),
                      this.host.requireUser(),
                      (t = this._currentUserTyping[n]) &&
                        null !== t.timer &&
                        (clearTimeout(t.timer), (t.timer = null)),
                      [4, this._sendStopTyping(n, r)]);
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (mp.prototype._sendStopTyping = function (s, a) {
          return ih(this, void 0, void 0, function () {
            var t, n, r, o, i;
            return sh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (t = this._lastStopTypingAPICalls[s]) &&
                    ((n = t.expiresAt), (r = t.retVal), wc()().isBefore(n))
                    ? [2, r]
                    : [4, this.host.api.typingStatus.stopTyping(s, a)];
                case 1:
                  return (
                    (o = e.sent()),
                    (i = wc()().add(this.config.clearTypingStatusThrottleDelay, 'ms')),
                    (this._lastStopTypingAPICalls[s] = { expiresAt: i, retVal: o, senderId: a }),
                    [2, o]
                  );
              }
            });
          });
        }),
        (mp.prototype._setTypingStatusOfUser = function (e, t, n, r, o) {
          var i = this;
          void 0 === o && (o = !1), (e = e || wi.GLOBAL);
          var s = this._typers[e];
          if (r) {
            s || ((s = {}), (this._typers[e] = s));
            var a = (u = s[n]) && null !== u.timer;
            if (
              (u ? clearTimeout(u.timer) : ((u = {}), (s[n] = u)),
              (u.timer = setTimeout(function () {
                i.logger.info('auto stop typing for other typer', e, n),
                  i._setTypingStatusOfUser(e, t, n, !1, !0);
              }, this.host.config.clearTypingStatusTimeout)),
              a)
            )
              return;
          } else {
            var u;
            if (!(a = (u = s && s[n]) && null !== u.timer)) return;
            clearTimeout(u.timer), (u.timer = null);
          }
          this.emit('change', {
            userId: n,
            contextId: e,
            contextType: t,
            isTyping: r,
            timedOut: o,
          });
        }),
        (mp.prototype.isUserTyping = function (t, e) {
          var n = this,
            r = (void 0 === e ? {} : e).organizationId;
          return (
            (t = this._resolveModelId(t)),
            r
              ? this._isUserTypingInContext(r, t)
              : ee.a.get(this.host, 'currentUser.organizationIds', []).some(function (e) {
                  return n._isUserTypingInContext(e, t);
                })
          );
        }),
        (mp.prototype.isCurrentUserTyping = function (e) {
          e = this._resolveModelId(e);
          var t = this._currentUserTyping[e];
          return !!t && null !== t.timer;
        }),
        (mp.prototype.isUserTypingInGroup = function (e, t) {
          return (
            (t = this._resolveModelId(t)),
            (e = this._resolveModelId(e)),
            this._isUserTypingInContext(e, t)
          );
        }),
        (mp.prototype._isUserTypingInContext = function (e, t) {
          var n = this._typers[e],
            r = n && n[t];
          return !!r && null !== r.timer;
        }),
        oh([Object(Rs.decorator)()], mp.prototype, '_sendStartTyping', null),
        oh([Object(Rs.decorator)()], mp.prototype, '_sendStopTyping', null),
        mp),
      Gh =
        ((bh = function (e, t) {
          return (bh =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          bh(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Vh = function () {
        return (Vh =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Kh =
        (Gh(gp, (_h = Ua)),
        (gp.prototype.dispose = function () {
          Rs.decorator.clear(this._findAll);
        }),
        (gp.prototype.findAll = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.userId,
            r = void 0 === n ? this.host.currentUserId : n,
            o = t.organizationId;
          return uh(this, void 0, void 0, function () {
            return ch(this, function (e) {
              return this.host.requireUser(), [2, this._findAll(r, o)];
            });
          });
        }),
        (gp.prototype.refreshAll = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.userId,
            r = void 0 === n ? this.host.currentUserId : n,
            o = t.organizationId;
          return uh(this, void 0, void 0, function () {
            return ch(this, function (e) {
              return (
                this.host.requireUser(), Rs.decorator.clear(this._findAll), [2, this._findAll(r, o)]
              );
            });
          });
        }),
        (gp.prototype._findAll = function (l, n) {
          return (
            void 0 === n && (n = this._pickOrganizationId()),
            uh(this, void 0, void 0, function () {
              var t,
                u,
                c = this;
              return ch(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [4, this.host.api.userRoles.findAll(l, n)];
                  case 1:
                    return (
                      (t = e.sent()),
                      (u = { userRoles: [], productRoles: [] }),
                      t.forEach(function (e) {
                        var t = e.organization,
                          n = e.product;
                        if (t) {
                          var r = t.organization_id,
                            o = c.host.organizations.getById(r),
                            i = c.host.models.UserRoles.inject(
                              Vh(
                                {
                                  id: c._getOrganizationKey({ organizationId: r, userId: l }),
                                  userId: l,
                                },
                                t
                              )
                            );
                          o && c.host.models.Organization.touch(o), u.userRoles.push(i);
                        } else if (n) {
                          var s = n.product_id,
                            a = c.host.models.ProductRoles.inject(
                              Vh(
                                { id: c._getProductKey({ productId: s, userId: l }), userId: l },
                                n
                              )
                            );
                          c.host.models.Product.inject({ id: s }), u.productRoles.push(a);
                        }
                      }),
                      [2, u]
                    );
                }
              });
            })
          );
        }),
        (gp.prototype._pickOrganizationId = function () {
          var e = this.host.organizations.getAll();
          return 0 === e.length ? 'placeholder' : e[0].id;
        }),
        (gp.prototype.getAllUserRoles = function () {
          return this.host.models.UserRoles.getAll();
        }),
        (gp.prototype.getByOrganizationId = function (e, t) {
          var n = (void 0 === t ? {} : t).userId,
            r = void 0 === n ? this.host.currentUserId : n,
            o = this._getOrganizationKey({ organizationId: e, userId: r });
          return this.host.models.UserRoles.get(o);
        }),
        (gp.prototype._getOrganizationKey = function (e) {
          var t = e.organizationId,
            n = e.userId;
          return 'userRoles:' + (void 0 === n ? this.host.currentUserId : n) + ':' + t;
        }),
        (gp.prototype.getAllProductRoles = function () {
          return this.host.models.ProductRoles.getAll();
        }),
        (gp.prototype.getByProductId = function (e, t) {
          var n = (void 0 === t ? {} : t).userId,
            r = void 0 === n ? this.host.currentUserId : n,
            o = this._getProductKey({ productId: e, userId: r });
          return this.host.models.ProductRoles.get(o);
        }),
        (gp.prototype._getProductKey = function (e) {
          var t = e.productId,
            n = e.userId;
          return 'productRoles:' + (void 0 === n ? this.host.currentUserId : n) + ':' + t;
        }),
        ah([Object(Rs.decorator)()], gp.prototype, 'findAll', null),
        ah([Object(Rs.decorator)()], gp.prototype, 'refreshAll', null),
        ah(
          [
            Object(Rs.decorator)({
              memoize: !0,
              serializeArguments: function (e) {
                return e[0];
              },
            }),
          ],
          gp.prototype,
          '_findAll',
          null
        ),
        gp),
      Hh =
        ((mh = function (e, t) {
          return (mh =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          mh(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      $h = function () {
        return ($h =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Wh =
        (Hh(yp, (gh = Ua)),
        (yp.prototype.mounted = function () {
          (this._defaultOrganizationId = null),
            (this._roleMemberIds = {}),
            this.host.models.Metadata.on('afterInject', this._onChangeMetadata),
            this.host.models.Metadata.on('afterEject', this._onChangeMetadata),
            this.host.models.Role.on('afterInject', this._onChangeRole),
            this.host.models.Role.on('afterEject', this._onRemoveRole);
        }),
        (yp.prototype.dispose = function () {
          (this._defaultOrganizationId = null),
            (this._roleMemberIds = {}),
            this.host.models.Metadata.removeListener('afterInject', this._onChangeMetadata),
            this.host.models.Metadata.removeListener('afterEject', this._onChangeMetadata),
            this.host.models.Role.removeListener('afterInject', this._onChangeRole),
            this.host.models.Role.removeListener('afterEject', this._onRemoveRole);
        }),
        (yp.prototype.signInWithMagicToken = function (e, t) {
          void 0 === t && (t = {});
          var n = { Authorization: 'magic-token ' + e };
          return this._signInWithHeaders(n, t);
        }),
        (yp.prototype.signInWithApiKeyAndSecret = function (e, t, n) {
          void 0 === n && (n = {});
          var r = this.httpClient.getAuthHeaders({ key: e, secret: t });
          return this._signInWithHeaders(r, n);
        }),
        (yp.prototype.signIn = function (e, t, n) {
          void 0 === n && (n = {}), mo(e) && (e = Io(e));
          var r = { Authorization: this.getSignInAuthHeader(e, t) };
          return this._signInWithHeaders(r, n);
        }),
        (yp.prototype._checkPartnerName = function () {
          if (!this.config.partnerName)
            throw new Error(
              '`partnerName` must be supplied as a config option for `new TigerConnect.Client()`'
            );
        }),
        (yp.prototype._signInWithHeaders = function (r, o) {
          return (
            void 0 === o && (o = {}),
            dh(this, void 0, void 0, function () {
              var t, n;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return this._checkPartnerName(), [4, this.host.api.users.signIn(r, o)];
                  case 1:
                    return (
                      (t = e.sent()),
                      (n = this.host.models.User.inject(t.data.user)),
                      [2, { auth: t.data.auth, user: n }]
                    );
                }
              });
            })
          );
        }),
        (yp.prototype.checkLogin = function (t, n) {
          return (
            void 0 === n && (n = { udid: void 0 }),
            dh(this, void 0, void 0, function () {
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return this._checkPartnerName(), [4, this.host.api.users.checkLogin(t, n)];
                  case 1:
                    return [2, e.sent().data];
                }
              });
            })
          );
        }),
        (yp.prototype.signUp = function (i) {
          return (
            void 0 === i &&
              (i = {
                udid: void 0,
                email: void 0,
                password: void 0,
                countryCode: void 0,
                version: void 0,
              }),
            dh(this, void 0, void 0, function () {
              var t, n, r, o;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [4, this.host.api.users.signUp(i)];
                  case 1:
                    return (
                      (t = e.sent()),
                      (n = this.host.models.User.inject(t.data.user)),
                      (r = t.data.auth),
                      (o = { user: n, auth: r }),
                      this.host.emit('signUp', o),
                      [2, o]
                    );
                }
              });
            })
          );
        }),
        (yp.prototype.signOut = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.fromServer,
            i = void 0 !== n && n,
            r = t.resetClient,
            s = void 0 === r || r;
          return dh(this, void 0, void 0, function () {
            var t, n, r, o;
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!this.host.isSignedIn) return [2, !1];
                  (n = t = !1),
                    this.host.emit('signingOut', { fromServer: i, resetClient: s }),
                    (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this.host.api.users.signOut()];
                case 2:
                  return (r = e.sent()), (t = !0), [3, 4];
                case 3:
                  return (
                    (o = e.sent()),
                    (n = !0),
                    this.httpClient.isUnauthorizedError(o)
                      ? ((t = !0), [3, 4])
                      : [2, Promise.reject(o)]
                  );
                case 4:
                  return (
                    t && (this.host._setCurrentUser(null), this.host._removeAuth()),
                    this.host.emit('signedOut', {
                      externalLogoutUrl: n ? null : r.data.external_logout_url,
                      fromServer: i,
                      resetClient: s && t,
                      signedOut: t,
                    }),
                    [2, t]
                  );
              }
            });
          });
        }),
        (yp.prototype.createQRCode = function () {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.api.qrCode.create()];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (yp.prototype.findOrCreate = function (u, c) {
          return (
            void 0 === c && (c = {}),
            dh(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = c.organizationId),
                      (n = !1),
                      t ? [4, this.host.organizations._findAll()] : [3, 2]
                    );
                  case 1:
                    e.sent(),
                      (r = this.host.models.Organization.get(t)),
                      (n = !!r && r.isContacts),
                      (e.label = 2);
                  case 2:
                    return (o = n && (Fn()(u) || mo(u))) &&
                      u !== this.host.currentUserId &&
                      !this.getById(u)
                      ? [3, 4]
                      : [4, this.find(u, { organizationId: t, ignoreNotFound: !0 })];
                  case 3:
                    (i = e.sent()), (e.label = 4);
                  case 4:
                    return i || !o ? [3, 8] : [4, this.host.api.users.lookup(u)];
                  case 5:
                    return (s = e.sent())
                      ? this.config.condensedReplays
                        ? [3, 7]
                        : [4, this.find(s.token, { organizationId: t })]
                      : [2, null];
                  case 6:
                    return (i = e.sent()), [3, 8];
                  case 7:
                    ((a = s.entity).conversationId = s.conversation_id),
                      (a.organizationId = s.organization_id),
                      (i = this.host.models.User.inject(a)),
                      (e.label = 8);
                  case 8:
                    return [2, i];
                }
              });
            })
          );
        }),
        (yp.prototype.signOutAllDevices = function () {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.host.api.users.wipe(this.host.currentUserId)];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (yp.prototype.findMe = function (i) {
          return (
            void 0 === i && (i = {}),
            dh(this, void 0, void 0, function () {
              var t, n, r, o;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (i = ee.a.defaults(i, { ignoreNotFound: !1 })),
                      this.host.requireUser(),
                      [4, this.host.api.users.findMe()]
                    );
                  case 1:
                    if ((t = e.sent()))
                      return (
                        t.entity &&
                          ((t.entity.organization_token = t.organization_id), (t = t.entity)),
                        (n = t.metadata),
                        (r = t.organization_token),
                        (this._defaultOrganizationId = r),
                        (o = this.host.models.User.inject(t)),
                        n && this.host.metadata.__injectMetadata(o.id, r, n),
                        [2, o]
                      );
                    if (!i.ignoreNotFound) throw new G(this.host.models.User.name, 'me');
                    return [2];
                }
              });
            })
          );
        }),
        (yp.prototype.findDefaultOrganizationId = function () {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return this._defaultOrganizationId ? [3, 2] : [4, this.findMe()];
                case 1:
                  e.sent(), (e.label = 2);
                case 2:
                  return [2, this._defaultOrganizationId];
              }
            });
          });
        }),
        (yp.prototype.findMyProfilesForAllOrganizations = function (e) {
          return (
            void 0 === e && (e = {}),
            dh(this, void 0, void 0, function () {
              var t;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return [4, this.host.organizations.findAll()];
                  case 1:
                    return (
                      (t = e.sent().map(function (e) {
                        return e.id;
                      })),
                      [2, this.findProfileForOrganizations(this.host.currentUserId, t)]
                    );
                }
              });
            })
          );
        }),
        (yp.prototype.find = function (v, y) {
          return (
            void 0 === y && (y = {}),
            dh(this, void 0, void 0, function () {
              var t,
                n,
                r,
                o,
                i,
                s,
                a,
                u,
                c,
                l,
                d,
                h,
                p,
                f = this;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (y = ee.a.defaults(y, { bypassCache: !1, ignoreNotFound: !1 })),
                      this.host.requireUser(),
                      (t = this.host.models.User.get(v)),
                      (r = !0),
                      y.organizationIds ? ((n = y.organizationIds), [3, 4]) : [3, 1]
                    );
                  case 1:
                    return y.organizationId ? ((n = [y.organizationId]), [3, 4]) : [3, 2];
                  case 2:
                    return (
                      (r = !1),
                      (n = t
                        ? (function () {
                            for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                              e += arguments[t].length;
                            var r = Array(e),
                              o = 0;
                            for (t = 0; t < n; t++)
                              for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++)
                                r[o] = i[s];
                            return r;
                          })(t.organizationIds)
                        : []),
                      [4, this.findDefaultOrganizationId()]
                    );
                  case 3:
                    (o = e.sent()), n.includes(o) || n.push(o), (e.label = 4);
                  case 4:
                    for (
                      i = $h($h({}, y), { ignoreNotFound: !0 }), s = [], a = 0, u = n;
                      a < u.length;
                      a++
                    )
                      (c = u[a]), s.push(this.__find(v, c, i));
                    return [4, Promise.all(s)];
                  case 5:
                    return (
                      (l = e.sent()),
                      (d = l
                        .map(function (e) {
                          return e.data;
                        })
                        .find(Boolean)),
                      (h = !!l.find(function (e) {
                        return !e.cached;
                      })),
                      d && d.id && (t = this.host.models.User.get(d.id)),
                      !d || v === d.id || r
                        ? [3, 7]
                        : 0 < (p = ee.a.difference(t.organizationIds, n)).length
                        ? [
                            4,
                            Promise.all(
                              p.map(function (e) {
                                return f.__find(v, e, i);
                              })
                            ),
                          ]
                        : [3, 7]
                    );
                  case 6:
                    e.sent(), (e.label = 7);
                  case 7:
                    if (
                      (this.host.models.User.removePlaceholder({ entity: t, attrs: d }),
                      h && !y.ignoreNotFound && !d)
                    )
                      throw new G(this.host.models.User.name, v);
                    return [2, t];
                }
              });
            })
          );
        }),
        (yp.prototype.__find = function (a, u, c) {
          return (
            void 0 === c && (c = {}),
            dh(this, void 0, void 0, function () {
              var t,
                n,
                r,
                o,
                i,
                s = this;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (c = ee.a.defaults(c, { bypassCache: !1, ignoreNotFound: !1 })),
                      (t = this.host.models.User.get(a)),
                      c.bypassCache
                        ? [3, 2]
                        : t &&
                          !t.$placeholder &&
                          t.profileByOrganizationId &&
                          t.profileByOrganizationId[u]
                        ? [4, this.host.metadata.find(a, u, c)]
                        : [3, 2]
                    );
                  case 1:
                    return e.sent(), this.host.models.User.touch(a), [2, { cached: !0, user: t }];
                  case 2:
                    return [4, this.host.api.users.find(a, { organizationId: u })];
                  case 3:
                    if (
                      ((n = e.sent()) &&
                        (n.entity &&
                          ((n.entity.organization_token = n.organization_id),
                          (n.entity.conversation_id = n.conversation_id),
                          (n = n.entity)),
                        n.token && ((n.id = n.token), delete n.token),
                        (r = n.dnd_auto_forward_receivers),
                        (o = void 0 === r ? [] : r),
                        (i = n.metadata),
                        o.forEach(function (e) {
                          return s.host.models.User.injectPlaceholder(e);
                        }),
                        (n.dnd_auto_forward_receivers = o),
                        (t = this.host.models.User.inject(n)),
                        i &&
                          ('role' === i.feature_service
                            ? this.host.roles.__injectSearchResult({
                                entity: t,
                                metadata: i,
                                organizationId: u,
                              })
                            : this.host.metadata.__injectMetadata(t.id, u, i))),
                      !c.ignoreNotFound && !n)
                    )
                      throw new G(this.host.models.User.name, a);
                    return [2, { cached: !1, data: n, user: t }];
                }
              });
            })
          );
        }),
        (yp.prototype.findProfileForOrganizations = function (n, r, o) {
          return (
            void 0 === o && (o = {}),
            dh(this, void 0, void 0, function () {
              var t;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = ee.a.defaults(o, { bypassCache: !1, ignoreNotFound: !1 })),
                      [4, this.find(n, $h($h({}, o), { organizationIds: r }))]
                    );
                  case 1:
                    return [2, (t = e.sent()) ? t.profileByOrganizationId : t];
                }
              });
            })
          );
        }),
        (yp.prototype.findProfileForOrganization = function (n, r, o) {
          return (
            void 0 === o && (o = {}),
            dh(this, void 0, void 0, function () {
              var t;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (o = ee.a.defaults(o, { bypassCache: !1, ignoreNotFound: !0 })),
                      'string' != typeof r && (r = r.id),
                      [4, this.find(n, $h($h({}, o), { organizationId: r }))]
                    );
                  case 1:
                    return [
                      2,
                      ((t = e.sent()) &&
                        t.profileByOrganizationId &&
                        t.profileByOrganizationId[r]) ||
                        null,
                    ];
                }
              });
            })
          );
        }),
        (yp.prototype.ensureUsers = function (i, s) {
          return dh(this, void 0, void 0, function () {
            var t, n, r, o;
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  for (
                    this.host.requireUser(),
                      'string' != typeof s && (s = s.id),
                      t = [],
                      n = 0,
                      r = i;
                    n < r.length;
                    n++
                  )
                    (o = r[n]), t.push(this.find(o, { organizationId: s, ignoreNotFound: !0 }));
                  return [4, Promise.all(t)];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (yp.prototype.refresh = function (t) {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this.find(t, { ignoreNotFound: !0, bypassCache: !0 })];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (yp.prototype.update = function (e) {
          var o = e.firstName,
            i = e.lastName,
            s = e.displayName,
            a = e.status,
            u = e.dnd,
            c = e.dndText,
            l = e.avatarFile,
            d = e.removeAvatar;
          return dh(this, void 0, void 0, function () {
            var t, n, r;
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (t = Dr.a.call(
                      {
                        firstName: o,
                        lastName: i,
                        displayName: s,
                        status: a,
                        dnd: u,
                        dndText: c,
                        avatarFile: l,
                        removeAvatar: d,
                      },
                      function (e, t) {
                        return void 0 === e;
                      }
                    )),
                    [4, this.host.api.users.update(this.host.currentUserId, t)]
                  );
                case 1:
                  return (
                    (n = e.sent()),
                    (r = ee.a.omit(t, 'removeAvatar', 'avatarFile')),
                    d
                      ? (r.avatarUrl = null)
                      : void 0 !== n.avatarUrl && (r.avatarUrl = n.avatarUrl),
                    [2, this.host.models.User.inject($h({ id: this.host.currentUserId }, r))]
                  );
              }
            });
          });
        }),
        (yp.prototype.updatePassword = function (t, n) {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              return (
                this.host.requireUser(),
                [
                  2,
                  this.host.api.users.updatePassword(
                    this.host.currentUserId,
                    t,
                    n,
                    this.config.productKey
                  ),
                ]
              );
            });
          });
        }),
        (yp.prototype.setAutoForward = function (n, r) {
          return dh(this, void 0, void 0, function () {
            var t;
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    (t = this.host.currentUser.dnd),
                    [
                      4,
                      this.host.api.users.setAutoForward(this.host.currentUserId, n, {
                        dnd: t,
                        receiverId: r,
                      }),
                    ]
                  );
                case 1:
                  return e.sent(), [2, !0];
              }
            });
          });
        }),
        (yp.prototype.removeAutoForward = function (t) {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    [4, this.host.api.users.removeAutoForward(this.host.currentUserId, t)]
                  );
                case 1:
                  return e.sent(), [2, !0];
              }
            });
          });
        }),
        (yp.prototype.setEulaAccepted = function (t, n) {
          return dh(this, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    this.host.requireUser(),
                    [4, this.host.api.users.setEulaAccepted(this.host.currentUserId, t, n)]
                  );
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (yp.prototype.setAwayMessage = function (o, i) {
          return (
            void 0 === i && (i = {}),
            dh(this, void 0, void 0, function () {
              var t, n, r;
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = i.dnd),
                      (n = i.dndText),
                      (r = void 0 === n ? '' : n),
                      this.host.requireUser(),
                      [
                        4,
                        this.host.api.users.setAwayMessage(this.host.currentUserId, o, {
                          dnd: t,
                          dndText: r,
                        }),
                      ]
                    );
                  case 1:
                    return e.sent(), [2];
                }
              });
            })
          );
        }),
        (yp.prototype.getSignInAuthHeader = function (e, t) {
          return this.host.api.users.getSignInAuthHeader(this.config.productKey, e, t);
        }),
        (yp.prototype.getAll = function () {
          return this.host.models.User.getAll();
        }),
        (yp.prototype.getById = function (e) {
          return this.host.models.User.get(e);
        }),
        (yp.prototype.getMultiById = function (e) {
          return this.host.models.User.getMulti(e);
        }),
        (yp.prototype._onChangeCurrentUserRole = function (e) {
          var t = e.botUser;
          if (t) {
            var n = this.host.roles._roleConversations[t.id];
            if (n)
              for (var r = 0, o = n; r < o.length; r++) {
                for (var i = o[r], s = !1, a = 0, u = i.content; a < u.length; a++) {
                  var c = u[a];
                  (c.shouldEnsureRecipientStatus = !0),
                    this.host.models.Message.inject(c),
                    (s = !0);
                }
                s || this.host.models.Conversation.inject(i);
              }
          }
        }),
        (yp.prototype.reactToUserPreferencesEvent = function (e) {
          this.emit('preferences:change', In.camelizeObject(e));
        }),
        (yp.PROFILE_ATTRIBUTES_PER_ORG = Ch),
        lh(
          [
            Object(Rs.decorator)({
              serializeArguments: function (e) {
                return '';
              },
            }),
          ],
          yp.prototype,
          'signOut',
          null
        ),
        lh([Object(Rs.decorator)()], yp.prototype, 'findOrCreate', null),
        lh([Object(Rs.decorator)()], yp.prototype, 'signOutAllDevices', null),
        lh([Object(Rs.decorator)()], yp.prototype, 'findMe', null),
        lh([Object(Rs.decorator)()], yp.prototype, 'findMyProfilesForAllOrganizations', null),
        lh([Object(Rs.decorator)()], yp.prototype, 'find', null),
        lh([Object(Rs.decorator)()], yp.prototype, '__find', null),
        lh([Object(Rs.decorator)()], yp.prototype, 'refresh', null),
        yp),
      Xh =
        ((yh = function (e, t) {
          return (yh =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        }),
        function (e, t) {
          function n() {
            this.constructor = e;
          }
          yh(e, t),
            (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
        }),
      Qh =
        (Xh(vp, (vh = Ua)),
        (vp.prototype.findAll = function (n) {
          return ph(this, void 0, void 0, function () {
            var t = this;
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('organizationId', 'required');
                  return [4, this.host.api.virtualWaitingRoom.findAll(n)];
                case 1:
                  return [
                    2,
                    e.sent().content.map(function (e) {
                      return t.host.models.VirtualWaitingRoom.inject(e);
                    }),
                  ];
              }
            });
          });
        }),
        (vp.prototype.find = function (n, r) {
          return ph(this, void 0, void 0, function () {
            var t;
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('organizationId', 'required');
                  if (!n) throw new ne('room_id', 'required');
                  return [4, this.host.api.virtualWaitingRoom.find(n, r)];
                case 1:
                  return (t = e.sent()), [2, this.host.models.VirtualWaitingRoom.inject(t)];
              }
            });
          });
        }),
        (vp.prototype.create = function (n, e) {
          var r = e.staff,
            o = e.name;
          return ph(this, void 0, void 0, function () {
            var t;
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('organizationId', 'required');
                  if (!r) throw new ne('staff', 'required');
                  if (!o) throw new ne('name', 'required');
                  return [4, this.host.api.virtualWaitingRoom.create(n, { staff: r, name: o })];
                case 1:
                  return (t = e.sent()), [2, this.host.models.VirtualWaitingRoom.inject(t)];
              }
            });
          });
        }),
        (vp.prototype.update = function (n, r, e) {
          var o = e.staff,
            i = e.name,
            s = e.status,
            a = e.version;
          return ph(this, void 0, void 0, function () {
            var t;
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('organizationId', 'required');
                  if (!n) throw new ne('room_id', 'required');
                  return [
                    4,
                    this.host.api.virtualWaitingRoom.update(n, r, {
                      staff: o,
                      name: i,
                      status: s,
                      version: a,
                    }),
                  ];
                case 1:
                  return (
                    (t = e.sent()),
                    [
                      2,
                      this.host.models.VirtualWaitingRoom.inject({
                        id: n,
                        staff: o,
                        name: i,
                        status: s,
                        version: t.version,
                      }),
                    ]
                  );
              }
            });
          });
        }),
        (vp.prototype.delete = function (n, r) {
          return ph(this, void 0, void 0, function () {
            var t;
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!r) throw new ne('organizationId', 'required');
                  if (!n) throw new ne('room_id', 'required');
                  return (
                    (t = this.host.models.VirtualWaitingRoom.get(n)) &&
                      this.host.models.VirtualWaitingRoom.eject(t),
                    [4, this.host.api.virtualWaitingRoom.delete(n, r)]
                  );
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (vp.prototype.createVisit = function (t) {
          return ph(this, void 0, void 0, function () {
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!t) throw new ne('joinId', 'required');
                  return [4, this.host.api.virtualWaitingRoom.createVisit(t)];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (vp.prototype.editVisit = function (e) {
          var t = e.visitId,
            n = e.firstName,
            r = e.lastName,
            o = e.mobilePhone,
            i = e.visitReason,
            s = e.createResources;
          return ph(this, void 0, void 0, function () {
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.api.virtualWaitingRoom.editVisit({
                      visitId: t,
                      firstName: n,
                      lastName: r,
                      mobilePhone: o,
                      visitReason: i,
                      createResources: s,
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (vp.prototype.clearAllCompletedVisits = function (e) {
          var t = e.roomId,
            n = e.organizationId;
          return ph(this, void 0, void 0, function () {
            return fh(this, function (e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.host.api.virtualWaitingRoom.cleanupVisits({
                      type: 'delete_completed_visits',
                      roomId: t,
                      organizationId: n,
                    }),
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (vp.prototype.reactToJoinableCallSSE = function (e) {
          var t = e.data,
            n = e.type,
            r = Ta(t);
          (r.vwrCallStatus = n.split(':')[1]), this.host.models.VirtualWaitingRoom.inject(r);
        }),
        vp),
      Yh = function (e, t) {
        return (
          t.host,
          e.defineModel('call', {
            replaceKeys: {},
            defaultValues: {},
            skipCamelizationForKeys: ['payload'],
            parseAttrs: function (e) {
              if ((e.id || (e.id = e.roomName), e.payload)) {
                var t = {};
                e.payload.disabled_participants &&
                  ((t = e.payload.disabled_participants), delete e.payload.disabled_participants),
                  (e.payload = In.camelizeObject(e.payload)),
                  (e.payload.disabledParticipants = t);
              }
              return (
                e.payload &&
                  (e.payload.orgId && (e.organizationId = e.payload.orgId),
                  e.payload.callId && (e.callId = e.payload.callId),
                  e.payload.groupId && (e.groupId = e.payload.groupId),
                  e.payload.participantsTokens &&
                    e.payload.callerId &&
                    (e.memberIds = (function () {
                      for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                        e += arguments[t].length;
                      var r = Array(e),
                        o = 0;
                      for (t = 0; t < n; t++)
                        for (var i = arguments[t], s = 0, a = i.length; s < a; s++, o++)
                          r[o] = i[s];
                      return r;
                    })(e.payload.participantsTokens, [e.payload.callerId]))),
                delete e.serverId,
                e
              );
            },
          })
        );
      },
      Jh = function (e, t) {
        var n = t.host;
        return e.defineModel('callLogEntry', {
          parseAttrs: function (e) {
            return (
              (e.isContact = ya()(e, 'target.entity.metadata.isPatientContact')),
              (e.isGroup = 'tigertext:entity:group' === ya()(e, 'target.type')),
              (e.memberCount = ya()(e, 'target.entity.numMembers')),
              (e.isMissed = 'missed_voip_call' === e.type),
              (e.isOptedOut = ya()(e, 'target.entity.metadata.smsOptedOut', !1)),
              (e.isOutgoing = n.currentUserId === ya()(e, 'caller.entity.token')),
              (e.isQuickCall =
                Boolean(mo(ya()(e, 'target.entity.displayName'))) &&
                '00000' === ya()(e, 'target.entity.metadata.patientMrn')),
              e
            );
          },
        });
      },
      Zh = function (h, e) {
        var p = e.host;
        return h.defineModel('conversation', {
          instanceEvents: !0,
          transientAttrs: [
            '_counterPartyAddedOnServer',
            '_origIndex',
            'highestSortNumber',
            'unreadCount',
            'unreadPriorityCount',
          ],
          defaultValues: {
            _markingAsRead: !1,
            _markingAsReadSortNumber: null,
            _markingAsReadExpiration: null,
            firstExpiringUnreadMessage: null,
            firstUnreadMessage: null,
            higherContinuation: null,
            highestSortNumber: 0,
            inProgressEscalationCount: 0,
            isLive: !1,
            lastBangMessageSortNumber: 0,
            lastIncomingMessageSortNumber: 0,
            lastMessage: null,
            lowerContinuation: null,
            markableAsReadMessages: null,
            messages: null,
            muted: null,
            network: fi.PROVIDER,
            timeline: null,
            unreadCount: 0,
            unreadPriorityCount: 0,
          },
          skipCamelizationForKeys: ['metadata', 'muted'],
          parseAttrs: function (e) {
            if ('muted' in e && e.muted) {
              var t = e.muted;
              if (0 < Object.keys(t).length) {
                var n = t.mute_duration,
                  r = t.mute_start;
                r = r && 1e3 * +r;
                var o = p.mute._addEntry(e.id, {
                  durationInMinutes: n,
                  organizationId: e.organizationId,
                  startedAt: r,
                });
                e.muted = o;
              } else e.muted = null;
            }
            return e;
          },
          afterAssignment: function (e) {
            var t = e.counterParty,
              n = e.counterPartyId,
              r = e.counterPartyType,
              o = e.id,
              i = e.isDeletable,
              s = e.isMuteable,
              a = e.metadata,
              u = e.muted;
            if (
              ((u = h.host.config.condensedReplays
                ? u || p.mute.getById(o)
                : p.mute._getByConversationHandle(o)),
              (e.muted = u),
              (e.isMuted = !!e.muted),
              t ? ((n = t.id), (r = t.$entityType)) : (t = r && n ? h.store.get(r, n) : null),
              (e.counterParty = t),
              (e.counterPartyId = n),
              (e.counterPartyType = r),
              (e.shouldDisplay = !('user' === r && t && !t.shouldDisplay)),
              p.conversations._setAllowedSenders(e),
              (i = !0),
              (s = 'distributionList' !== r),
              t && 'group' === r)
            ) {
              var c = t.groupType,
                l = t.p2pSender;
              if (c === si.ROLE_P2P) {
                var d = l && 'role' === l.$entityType;
                (i = 0 < e.allowedSenders.length && !d), (s = s && 0 < e.allowedSenders.length);
              } else
                c === si.ESCALATION
                  ? (s = !(i = !1))
                  : c === si.PATIENT_MESSAGING && (i = 2 < e.counterParty.memberCount);
            } else t && 'team' === r && (s = i = !1);
            (e.isDeletable = i),
              (e.isMuteable = s),
              e.markableAsReadMessages || (e.markableAsReadMessages = []),
              e.messages || (e.messages = []),
              e.timeline || (e.timeline = []),
              e.higherContinuation ||
                (e.higherContinuation = {
                  continuation: h.host.config.condensedReplays
                    ? { higher_continuation: null }
                    : 'HIGHER',
                  itemsEstimate: null,
                }),
              e.lowerContinuation ||
                (e.lowerContinuation = {
                  continuation: h.host.config.condensedReplays
                    ? { lower_continuation: null }
                    : 'LOWER',
                  itemsEstimate: null,
                }),
              a &&
                'patient_messaging' === a.feature_service &&
                ((e.network = fi.PATIENT),
                'group' === r &&
                  ((e.patientId = 'patient:' + a.patient_id),
                  a.patient_contact_id &&
                    (e.patientContactId = 'patientContact:' + a.patient_contact_id)));
          },
          relations: {
            belongsTo: { organization: { type: 'organization', foreignKey: 'organizationId' } },
            hasMany: {
              content: {
                type: 'message',
                foreignKey: 'conversationId',
                sortBy: [
                  ['sortNumber', 'asc'],
                  ['id', 'asc'],
                ],
              },
            },
          },
        });
      },
      ep = function (e, r) {
        var t = e.defineModel('distributionList', {
          replaceKeys: {
            avatar: 'avatarUrl',
            createdBy: 'createdById',
            displayName: 'name',
            organizationKey: 'organizationId',
            totalMembers: 'memberCount',
            updatedBy: 'updatedById',
          },
          skipCamelizationForKeys: ['metadata'],
          transientAttrs: ['$deleted'],
          defaultValues: { memberCount: 0 },
          afterAssignment: function (e) {
            e.displayName = e.name;
          },
          relations: {
            belongsTo: {
              createdBy: { type: 'user', foreignKey: 'createdById' },
              organization: { type: 'organization', foreignKey: 'organizationId' },
              updatedBy: { type: 'user', foreignKey: 'updatedById' },
            },
          },
        });
        return (
          Jd(t, {
            finder: function () {
              for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              return (e = r.host.distributionLists).find.apply(e, t);
            },
            placeholderEntityDelayBeforeRefreshing: function () {
              return e.host.config.placeholderEntityDelayBeforeRefreshing;
            },
            placeholderEntityAllowLoading: function () {
              return e.host.config.placeholderEntityAllowLoading;
            },
            defaultPlaceholderAttrs: { name: 'Loading Distribution List...' },
            defaultNotFoundAttrs: { name: '<Distribution List Not Found>' },
          }),
          t
        );
      },
      tp = function (e, t) {
        var f = t.host;
        return e.defineModel('escalationExecution', {
          replaceKeys: {
            destructionDuration: 'minutesToExpire',
            destructionTime: 'expiresAt',
            displayName: 'displayId',
            escalationExecutionId: 'id',
            escalationGroupToken: 'groupId',
            escalationPath: 'path',
            escalationStatus: 'status',
            level: 'currentStep',
            organizationToken: 'organizationId',
            targetDuration: 'targetMinutesToAcknowledge',
            targetToken: 'targetId',
            triggeredMessageToken: 'carbonCopyMessageId',
            triggeringConversationId: 'originalGroupConversationId',
            triggeringMessageToken: 'originalMessageId',
          },
          defaultValues: { currentStep: 0, status: ii.IN_PROGRESS },
          parseAttrs: function (e) {
            if (
              ('actionTime' in e &&
                'string' == typeof e.actionTime &&
                (e.actionTime = new Date(e.actionTime)),
              'carbonCopyMessageId' in e &&
                'string' == typeof e.carbonCopyMessageId &&
                'undefined' === e.carbonCopyMessageId &&
                (e.carbonCopyMessageId = null),
              'displayId' in e &&
                (e.displayId.startsWith('#') && (e.displayId = e.displayId.slice(1)),
                (e.displayId = e.displayId.toUpperCase())),
              'expiresAt' in e &&
                'string' == typeof e.expiresAt &&
                (e.expiresAt = new Date(e.expiresAt).getTime()),
              'groupId' in e &&
                'string' == typeof e.groupId &&
                'undefined' === e.groupId &&
                (e.groupId = null),
              'path' in e)
            ) {
              for (var t = [], n = !1, r = 0, o = e.path; r < o.length; r++) {
                for (
                  var i = o[r], s = i.targets, a = i.duration, u = [], c = 0, l = s;
                  c < l.length;
                  c++
                ) {
                  var d = l[c];
                  if ('string' == typeof d) u.push(f.injectPlaceholderModel({ id: d }, 'user'));
                  else if (d && d.token) {
                    var h = d.displayName,
                      p = d.token;
                    u.push(f.injectPlaceholderModel({ id: p, displayName: h }, 'user'));
                  } else n = !0;
                }
                t.push({ minutesToAcknowledge: a, targets: u });
              }
              n ? delete e.path : (e.path = t);
            }
            return (
              'status' in e &&
                ('init' === e.status && (e.status = 'in_progress'),
                'destruct' === e.status && (e.status = 'cancelled'),
                (e.status = ii.resolve(e.status))),
              e
            );
          },
          afterAssignment: function (e) {},
          relations: {
            belongsTo: {
              carbonCopyMessage: { type: 'message', foreignKey: 'carbonCopyMessageId' },
              group: { type: 'group', foreignKey: 'groupId' },
              organization: { type: 'organization', foreignKey: 'organizationId' },
              originalConversation: {
                type: 'conversation',
                foreignKey: 'originalGroupConversationId',
              },
              originalMessage: { type: 'message', foreignKey: 'originalMessageId' },
              target: { type: 'user', foreignKey: 'targetId' },
              escalationGroupConversation: {
                type: 'conversation',
                foreignKey: 'escalationGroupConversationId',
              },
            },
          },
        });
      },
      np = function (e, t) {
        return (
          t.host,
          e.defineModel('escalationExecutionChange', {
            parseAttrs: function (e) {
              return (
                'actionTime' in e &&
                  'string' == typeof e.actionTime &&
                  (e.actionTime = new Date(e.actionTime)),
                e
              );
            },
          })
        );
      },
      rp = function (e, t) {
        var f = t.host;
        return e.defineModel('escalationPolicy', {
          replaceKeys: {
            destructionDuration: 'minutesToExpire',
            escalationPath: 'path',
            target: 'targetId',
            targetDuration: 'targetMinutesToAcknowledge',
          },
          defaultValues: { alwaysEscalate: !1 },
          parseAttrs: function (e) {
            if ('path' in e) {
              for (var t = [], n = !1, r = 0, o = e.path; r < o.length; r++) {
                for (
                  var i = o[r], s = i.targets, a = i.duration, u = [], c = 0, l = s;
                  c < l.length;
                  c++
                ) {
                  var d = l[c];
                  if ('string' == typeof d) u.push(f.injectPlaceholderModel({ id: d }, 'user'));
                  else if (d && d.token) {
                    var h = d.displayName,
                      p = d.token;
                    u.push(f.injectPlaceholderModel({ id: p, displayName: h }, 'user'));
                  } else n = !0;
                }
                t.push({ minutesToAcknowledge: a, targets: u });
              }
              n ? delete e.path : (e.path = t);
            }
            return e;
          },
          afterAssignment: function (e) {},
          relations: { belongsTo: { target: { type: 'user', foreignKey: 'targetId' } } },
        });
      },
      op = function (e, t) {
        var u = t.host,
          n = e.defineModel('group', {
            replaceKeys: {
              avatar: 'avatarUrl',
              createdTime: 'createdAt',
              displayName: 'name',
              members: 'memberIds',
              numMembers: '__memberCount',
              organizationKey: 'organizationId',
              proxied_members: 'proxiedMembers',
            },
            transientAttrs: ['__memberCount'],
            defaultValues: { hasCurrentUser: !1, isPublic: !1, memberIds: null },
            skipCamelizationForKeys: ['escalation', 'metadata', 'proxied_members'],
            parseAttrs: function (e) {
              if (
                ('createdAt' in e && (e.createdAt = new Date(e.createdAt)),
                'createdBy' in e && delete e.createdBy,
                e.avatarUrl && (e.avatarUrl = fd(e.avatarUrl, u.config)),
                'escalation' in e)
              ) {
                var t = u.escalations._updateEscalation(e.escalation, { inGroupInject: !0 });
                delete e.escalation, (e.escalationExecutionId = t.id);
              }
              if (e.memberIds) {
                for (var n = [], r = 0, o = e.memberIds; r < o.length; r++) {
                  var i = o[r];
                  'string' == typeof i ? n.push(i) : i.id && n.push(i.id);
                }
                e.memberIds = n;
              }
              if (
                (e.metadata &&
                  'patient_care' === e.metadata.feature_service &&
                  (e.patientDetails = e.metadata.patient),
                e.metadata &&
                  'patient_messaging' === e.metadata.feature_service &&
                  ((e.patientDetails = {
                    dob: e.metadata.patient_dob,
                    gender: e.metadata.patient_gender,
                    id: e.metadata.patient_id,
                    isPatientContact: e.metadata.is_patient_contact,
                    mrn: e.metadata.patient_mrn,
                    name: e.metadata.patient_name,
                    phoneNumber: e.metadata.phone_number,
                    smsOptedOut: e.metadata.sms_opted_out,
                  }),
                  e.patientDetails.isPatientContact &&
                    e.metadata.relation_name &&
                    (e.patientDetails.relationName = e.metadata.relation_name)),
                e.metadata)
              )
                if (e.metadata.team && (e.metadata.team.token || e.metadata.team.id)) {
                  var s = u.models.Team.inject(e.metadata.team);
                  s && (e.teamId = s.id);
                } else e.metadata.team_token && (e.teamId = e.metadata.team_token);
              return 'metadata' in e && delete e.metadata, e;
            },
            afterAssignment: function (e) {
              var t,
                n = e.id,
                r = e.memberIds,
                o = e.organizationId;
              u.config.condensedReplays
                ? e.conversationId && (t = u.conversations.getById(e.conversationId))
                : (t = o ? u.conversations.get('group', n, o) : null);
              var i = o ? u.metadata.get(n, o) : null;
              i = i && i.data;
              var s = u.groups.__extractGroupTypeFromAttrs(e),
                a = i && s === si.ROLE_P2P ? i.target_display_name : e.name;
              (e.conversation = t),
                (e.displayName = a),
                (e.groupType = s),
                (e.memberCount = (r && r.length) || e.__memberCount || 0),
                (e.metadata = i),
                'FORUM' !== s && delete e.hasCurrentUser,
                u.users._setMembersOnEntity(e),
                u.groups._setMembership(e),
                u.groups._setP2PEntities(e);
            },
            beforeCreateInstance: function (e) {
              var t, n, r;
              (t = e.id),
                (n = e.memberIds),
                (r = e.organizationId),
                n &&
                  0 !== n.length &&
                  u.groups.ensureMembersWithIds(t, n, {
                    onlyPlaceholder: !0,
                    attrs: { organizationId: r },
                  });
            },
            relations: {
              belongsTo: {
                organization: { type: 'organization', foreignKey: 'organizationId' },
                escalationExecution: {
                  type: 'escalationExecution',
                  foreignKey: 'escalationExecutionId',
                },
                team: { type: 'team', foreignKey: 'teamId' },
              },
            },
          });
        return (
          Jd(n, {
            finder: function () {
              for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              return (e = u.groups).find.apply(e, t);
            },
            placeholderEntityDelayBeforeRefreshing: function () {
              return u.config.placeholderEntityDelayBeforeRefreshing;
            },
            placeholderEntityAllowLoading: function () {
              return u.config.placeholderEntityAllowLoading;
            },
            defaultPlaceholderAttrs: { displayName: 'Loading group...' },
            defaultNotFoundAttrs: { displayName: '<Group Not Found>' },
            shouldEnsure: function (e, t, n) {
              var r = n.groupMembersOnlyPlaceholder;
              return (
                !e.members ||
                !e.metadata ||
                e.groupType === si.ROLE_P2P ||
                e.members.some(function (e) {
                  return u.models.User.shouldEnsure(e, r);
                })
              );
            },
          }),
          n
        );
      },
      ip = function (e, t) {
        return (
          t.host,
          e.defineModel('groupMembersChange', {
            parseAttrs: function (e) {
              return (
                'actionTime' in e &&
                  'string' == typeof e.actionTime &&
                  (e.actionTime = new Date(e.actionTime)),
                e
              );
            },
          })
        );
      },
      sp = function (d, e) {
        var g = e.host;
        return d.defineModel('message', {
          replaceKeys: {
            clientId: 'id',
            createdTime: 'createdAt',
            data: 'metadata',
            dndAutoForwardedFrom: 'autoForwardedFromId',
            dor: 'deleteOnRead',
            escalationExecId: 'escalationExecutionId',
            groupAvatar: 'groupAvatarUrl',
            groupToken: 'groupId',
            messageId: 'id',
            originalData: 'originalMetadata',
            originalMsgId: 'originalMessageId',
            originalSenderName: 'originalSenderDisplayName',
            originalTimestamp: 'originalForwardedMessageCreatedAt',
            recipient: 'recipientId',
            recipientOrganization: 'recipientOrganizationId',
            recipientOrgToken: 'recipientOrganizationId',
            recipientToken: 'recipientId',
            sender: 'senderId',
            senderAvatar: 'senderAvatarUrl',
            senderOrganization: 'senderOrganizationId',
            senderOrgToken: 'senderOrganizationId',
            senderToken: 'senderId',
          },
          transientAttrs: [
            '__organizationId',
            '$synced',
            'escalationExecutionChange',
            'groupMembersChange',
            'inTimeline',
          ],
          defaultValues: {
            inTimeline: !1,
            isUnread: !1,
            messageType: pi.USER_SENT,
            senderStatus: li.NEW,
            shouldEnsureRecipientStatus: !1,
            sortNumber: 0,
          },
          skipCamelizationForKeys: ['escalation', 'metadata', 'originalMetadata'],
          parseAttrs: function (e) {
            if (
              (e.teamRequest &&
                (e.senderId || (e.senderId = e.teamRequest.createdById),
                (e.teamRequestId = e.teamRequest.id),
                delete e.teamRequest),
              'attachmentName' in e)
            ) {
              var t = e.attachmentName;
              delete e.attachmentName,
                'undefined' !== t &&
                  Array.isArray(e.attachments) &&
                  0 < e.attachments.length &&
                  t &&
                  (e.attachments[0].name = t);
            }
            if (
              (Array.isArray(e.attachments) &&
                e.attachments.forEach(function (e, t) {
                  return (e.id = '' + (t + 1));
                }),
              'priority' in e && (e.priority = ai.resolve(e.priority)),
              'createdAt' in e &&
                'string' == typeof e.createdAt &&
                (e.createdAt = new Date(e.createdAt)),
              'expireIn' in e && ((e.expiresAt = Date.now() + 1e3 * e.expireIn), delete e.expireIn),
              'recipientStatus' in e && delete e.recipientStatus,
              'status' in e && delete e.status,
              'xmlns' in e && delete e.xmlns,
              'escalation' in e)
            ) {
              var n = g.escalations._updateEscalation(e.escalation);
              delete e.escalation, (e.escalationExecutionId = n.id);
            }
            if (('subType' in e && (e.subType = hi.resolve(e.subType)), e.metadata)) {
              e.metadata = ee.a
                .castArray(e.metadata)
                .map(g.metadata.__parseMessageMetadata)
                .filter(Boolean);
              var r = e.metadata.find(function (e) {
                  return 'tigertext:message:role:sender' === e.namespace;
                }),
                o = e.metadata.find(function (e) {
                  return 'tigertext:message:role:owner' === e.namespace;
                }),
                i = e.metadata.find(function (e) {
                  return 'tigertext:message:patient_care' === e.namespace;
                });
              if (r && r.payload) {
                var s = e.senderOrganizationId,
                  a = r.payload;
                (e.senderRole = g.roles.__parseRoleFromMetadata({
                  metadata: a,
                  organizationId: s,
                })),
                  (e.currentSenderRoleId = e.senderRole.id);
              }
              if (o && o.payload) {
                s = e.senderOrganizationId;
                var u = e.senderId;
                (a = o.payload),
                  (e.senderId = a.token),
                  u !== a.token &&
                    ((e.senderRole = {
                      $entityType: 'role',
                      botUserId: u,
                      id: 'role:' + u,
                      organizationId: s,
                    }),
                    (e.currentSenderRoleId = 'role:' + u));
              }
              if (i && i.payload) {
                for (var c = [], l = 0, d = i.payload.components; l < d.length; l++) {
                  var h = d[l];
                  'type' in h && (h.type = gi.resolve(h.type)),
                    'sub_type' in h && (h.sub_type = yi.resolve(h.sub_type)),
                    'action_type' in h && (h.action_type = vi.resolve(h.action_type)),
                    c.push(h);
                }
                e.patientCareCard = c;
              }
            } else 'metadata' in e && delete e.metadata;
            if (e.originalMetadata) {
              (e.originalMetadata = ee.a
                .castArray(e.originalMetadata)
                .map(g.metadata.__parseMessageMetadata)
                .filter(Boolean)),
                (r = e.originalMetadata.find(function (e) {
                  return 'tigertext:message:role:sender' === e.namespace;
                })),
                (o = e.originalMetadata.find(function (e) {
                  return 'tigertext:message:role:owner' === e.namespace;
                }));
              var p = e.originalMetadata.find(function (e) {
                return 'tigertext:message:patient_messaging' === e.namespace;
              });
              if (
                (r &&
                  r.payload &&
                  ((s = e.senderOrganizationId),
                  (a = r.payload),
                  (e.originalSenderRole = g.roles.__parseRoleFromMetadata({
                    metadata: a,
                    organizationId: s,
                  }))),
                o && o.payload)
              ) {
                var f = e.originalSender,
                  v = e.originalSenderDisplayName,
                  y = e.originalSenderRole;
                (s = e.senderOrganizationId),
                  (a = o.payload),
                  y ||
                    'string' != typeof f ||
                    (e.originalSenderRole = {
                      $entityType: 'role',
                      botUserId: f,
                      displayName: v,
                      id: 'role:' + f,
                      organizationId: s,
                    }),
                  (!f || (f && 'string' == typeof f)) &&
                    (e.originalSender = {
                      $entityType: 'user',
                      displayName: a.display_name,
                      id: a.token,
                      organizationId: s,
                    });
              }
              'isForwarded' in e &&
                e.isForwarded &&
                p &&
                ((e.isForwardedFromPatientNetwork = !0),
                p.payload &&
                  ((e.patientDetails = {
                    isPatientContact: p.payload.is_patient_contact,
                    mrn: p.payload.patient_mrn,
                    patientId: p.payload.patient_id,
                    patientName: p.payload.patient_name,
                  }),
                  p.payload.is_patient_contact &&
                    ((e.patientDetails.contactId = p.payload.patient_contact_id),
                    (e.patientDetails.contactName = p.payload.patient_contact_name),
                    (e.patientDetails.relation = p.payload.relation_name)),
                  (e.originalGroupId = p.payload.group_id),
                  (e.originalGroupName = p.payload.group_name)));
            }
            return (
              'originalSender' in e &&
                'string' == typeof e.originalSender &&
                ((s = e.senderOrganizationId),
                (f = e.originalSender),
                (v = e.originalSenderDisplayName),
                (e.originalSender = {
                  $entityType: 'user',
                  displayName: v,
                  id: f,
                  organizationId: s,
                }),
                'patientDetails' in e &&
                  (e.patientDetails.patientId === e.originalSender.id &&
                    (e.originalSender.isPatient = !0),
                  e.patientDetails.contactId === e.originalSender.id &&
                    ((e.originalSender.isPatientContact = !0),
                    (e.originalSender.relation = e.patientDetails.relation))),
                delete e.originalSenderDisplayName),
              e
            );
          },
          afterAssignment: function (e) {
            var t = e.__organizationId,
              n = e.counterParty,
              r = e.counterPartyId,
              o = e.counterPartyType,
              i = e.createdAt,
              s = e.isOutgoing,
              a = e.recipientOrganizationId,
              u = e.senderId,
              c = e.senderOrganizationId,
              l = g.currentUserId;
            if (n)
              switch (((r = n.id), (o = n.$entityType))) {
                case 'group':
                  (e.groupId = r), delete e.recipientId;
                  break;
                case 'distributionList':
                  (e.distributionListId = r), delete e.recipientId;
              }
            else n = o && r ? d.store.get(o, r) : null;
            (e.counterParty = n),
              (e.counterPartyId = r),
              (e.counterPartyType = o),
              (i = i || new Date()),
              u && (s = g.messages._isMessageOutgoing(e)),
              s && c ? (t = c) : !s && a && (t = a),
              (e.__organizationId = t),
              (e.canRecall = 'distributionList' !== o && u === l),
              (e.createdAt = i),
              (e.isOutgoing = s),
              (e.isAutoForwarded = !!e.autoForwardedFromId),
              e.subType || (e.subType = hi.NA),
              g.messages._setRecipientStatus(e);
          },
          relations: {
            belongsTo: {
              autoForwardedFrom: { type: 'user', foreignKey: 'autoForwardedFromId' },
              conversation: { type: 'conversation', foreignKey: 'conversationId' },
              currentSenderRole: { type: 'role', foreignKey: 'currentSenderRoleId' },
              distributionList: { type: 'distributionList', foreignKey: 'distributionListId' },
              escalationExecution: {
                type: 'escalationExecution',
                foreignKey: 'escalationExecutionId',
              },
              group: { type: 'group', foreignKey: 'groupId' },
              originalGroup: { type: 'group', foreignKey: 'originalGroupId' },
              recipient: { type: 'user', foreignKey: 'recipientId' },
              recipientOrganization: {
                type: 'organization',
                foreignKey: 'recipientOrganizationId',
              },
              sender: { type: 'user', foreignKey: 'senderId' },
              senderOrganization: { type: 'organization', foreignKey: 'senderOrganizationId' },
              teamRequest: { type: 'teamRequest', foreignKey: 'teamRequestId' },
            },
            hasMany: {
              statusesPerRecipient: { type: 'messageStatusPerRecipient', foreignKey: 'messageId' },
            },
          },
        });
      },
      ap = function (e) {
        return e.defineModel('messageStatusPerRecipient', {
          replaceKeys: { accountId: 'userId', timestamp: 'createdAt' },
          defaultValues: { status: li.NA },
          parseAttrs: function (e) {
            return (
              e.status && (e.status = li.resolve(e.status)),
              e.createdAt &&
                'string' == typeof e.createdAt &&
                (e.createdAt = new Date(e.createdAt)),
              e
            );
          },
          beforeInject: function (e, t) {
            if (t) {
              var n = t.status,
                r = e.status;
              ci[r] < ci[n] && (delete e.createdAt, delete e.status);
            }
          },
          relations: {
            belongsTo: {
              distributionList: { type: 'distributionList', foreignKey: 'distributionListId' },
              message: { type: 'message', foreignKey: 'messageId' },
              user: { type: 'user', foreignKey: 'userId' },
            },
          },
        });
      },
      up = function (e, t) {
        return (
          t.host,
          e.defineModel('messageTemplate', {
            replaceKeys: {
              createdBy: 'createdById',
              templateLabel: 'title',
              updatedBy: 'updatedById',
            },
            transientAttrs: ['$deleted'],
            parseAttrs: function (e) {
              return (
                (e.hasAttachment = !1),
                e.attachmentName && e.attachmentSize && e.attachmentType && (e.hasAttachment = !0),
                e
              );
            },
            relations: {
              belongsTo: {
                createdBy: { type: 'user', foreignKey: 'createdById' },
                organization: { type: 'organization', foreignKey: 'organizationId' },
                updatedBy: { type: 'user', foreignKey: 'updatedById' },
              },
            },
          })
        );
      },
      cp = function (e, t) {
        return e.defineModel('metadata', {
          parseAttrs: function (e, t) {
            return (e.data = t.data), e;
          },
          relations: {
            belongsTo: { organization: { type: 'organization', foreignKey: 'organizationId' } },
          },
        });
      },
      lp = function (e, t) {
        return (
          t.host,
          e.defineModel('mute', {
            parseAttrs: function (e) {
              return e;
            },
            relations: {
              belongsTo: { organization: { type: 'organization', foreignKey: 'organizationId' } },
            },
          })
        );
      },
      dp = d(29),
      hp = d.n(dp),
      pp = d(30),
      fp = d.n(pp);
    function vp() {
      return (null !== vh && vh.apply(this, arguments)) || this;
    }
    function yp() {
      var _ = (null !== gh && gh.apply(this, arguments)) || this;
      return (
        (_.PROFILE_ATTRIBUTES_PER_ORG = Ch),
        (_._setMembersOnEntity = function (e, t, n) {
          void 0 === t && (t = 'memberIds'), void 0 === n && (n = 'members');
          var r = e,
            o = r[t],
            i = r[n];
          if (o) {
            i ? (i.length = 0) : (i = []);
            for (var s = 0, a = o; s < a.length; s++) {
              var u = a[s],
                c = _.host.models.User.get(u);
              c && i.push(c);
            }
          } else i = null;
          e[n] = i;
        }),
        (_._injectPatientEntity = function (e, t, n) {
          var r = 'patient:' + t;
          if (
            ((e.id = r),
            (e.organizationId = n),
            (e.userId = t),
            _.host.models.Patient.inject(e),
            e.patient_contacts)
          )
            for (var o = 0, i = e.patient_contacts; o < i.length; o++) {
              var s = i[o],
                a = s.entity ? s.entity : s,
                u = a.token || a.id;
              (a.id = u), (a.patientId = r), _.host.models.User.inject(a);
            }
        }),
        (_._injectPatientContactEntity = function (e, t) {
          e.entity && (e = e.entity);
          var n = e.metadata,
            r = {
              editVersion: n.edit_version,
              id: 'patientContact:' + e.id,
              organizationId: t,
              patientDob: n.patient_dob,
              patientGender: n.patient_gender,
              patientId: 'patient:' + n.patient_id,
              patientMrn: n.patient_mrn,
              phoneNumber: n.phone_number,
              relationName: n.relation_name,
              smsOptedOut: n.sms_opted_out,
              userId: e.id,
            };
          _.host.models.PatientContact.inject(r);
        }),
        (_._onChangeMetadata = function (e, t) {
          var n = t.entityId,
            r = _.host.models.User.get(n);
          r && _.host.models.User.inject(r);
        }),
        (_._onChangeRole = function (e, t) {
          var n = _.host.currentUserId,
            r = t.botUserId,
            o = t.memberIds;
          (o = o || []), r && _.host.models.User.injectPlaceholder({ id: r, botRole: t });
          var i = {},
            s = _._roleMemberIds[t.id];
          if (s)
            for (var a = 0, u = s; a < u.length; a++) {
              var c = u[a];
              if ((p = _.host.models.User.get(c)) && !o.includes(c)) {
                var l = (m = p.roles).indexOf(t);
                -1 < l && (m.splice(l, 1), (i[c] = m));
              }
            }
          for (var d = 0, h = (_._roleMemberIds[t.id] = o); d < h.length; d++) {
            var p;
            (c = h[d]),
              (m = (p = _.host.models.User.get(c)) ? p.roles : []).includes(t) ||
                (m.push(t), (i[c] = m));
          }
          for (var f = 0, v = Object.entries(i); f < v.length; f++) {
            var y = v[f],
              g = y[0],
              m = y[1];
            _.host.models.User.injectPlaceholder({ id: g, roles: m }),
              g === n && _._onChangeCurrentUserRole(t);
          }
        }),
        (_._onRemoveRole = function (e, t) {
          var n = t.botUserId;
          n && _.host.models.User.injectPlaceholder({ id: n, botRole: null });
          var r = _._roleMemberIds[t.id];
          if (r) {
            for (var o = 0, i = r; o < i.length; o++) {
              var s = i[o],
                a = _.host.models.User.get(s);
              if (a) {
                var u = a.roles,
                  c = u.indexOf(t);
                -1 < c && (u.splice(c, 1), _.host.models.User.inject(a));
              }
            }
            delete _._roleMemberIds[t.id];
          }
        }),
        (_.getPreferences = function (t) {
          return (
            void 0 === t && (t = _.host.currentUserId),
            dh(_, void 0, void 0, function () {
              return hh(this, function (e) {
                switch (e.label) {
                  case 0:
                    if (!t) throw new ne('userId', 'required');
                    return [4, this.host.api.users.getPreferences(t)];
                  case 1:
                    return [2, e.sent()];
                }
              });
            })
          );
        }),
        (_.editPreferences = function (e) {
          var t = e.quickReplies,
            n = void 0 === t ? [] : t,
            r = e.organizationId,
            o = e.userId,
            i = void 0 === o ? _.host.currentUserId : o;
          return dh(_, void 0, void 0, function () {
            return hh(this, function (e) {
              switch (e.label) {
                case 0:
                  if (!n) throw new ne('quickReplies', 'required');
                  if (!r) throw new ne('organizationId', 'required');
                  if (!i) throw new ne('userId', 'required');
                  return [
                    4,
                    this.host.api.users.editPreferences({
                      organizationId: r,
                      quickReplies: n,
                      userId: i,
                    }),
                  ];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        _
      );
    }
    function gp() {
      return (null !== _h && _h.apply(this, arguments)) || this;
    }
    function mp() {
      var t = (null !== wh && wh.apply(this, arguments)) || this;
      return (
        (t._onMessageSending = function (e) {
          t.stopTyping(e.counterPartyId, { senderId: e.senderId });
        }),
        t
      );
    }
    function _p() {
      return (null !== Oh && Oh.apply(this, arguments)) || this;
    }
    function bp() {
      var e = (null !== Eh && Eh.apply(this, arguments)) || this;
      return (
        (e._query = function ($) {
          return Zd(e, void 0, void 0, function () {
            var o,
              i,
              s,
              a,
              u,
              c,
              l,
              d,
              h,
              p,
              f,
              v,
              y,
              g,
              m,
              _,
              b,
              w,
              I,
              O,
              T,
              E,
              R,
              A,
              C,
              S,
              P,
              j,
              M,
              z,
              k,
              N,
              x,
              U,
              L,
              q,
              D,
              B,
              F,
              G,
              V,
              K,
              H;
            return eh(this, function (e) {
              switch (e.label) {
                case 0:
                  return (
                    (o = $.continuation),
                    (i = void 0 === o ? null : o),
                    (s = $.excludeIds),
                    (a = void 0 === s ? [] : s),
                    (u = $.excludeSelf),
                    (c = void 0 !== u && u),
                    (l = $.followContinuations),
                    (d = void 0 !== l && l),
                    (h = $.network),
                    (p = void 0 === h ? 'provider' : h),
                    (f = $.params),
                    i && (f = jh(jh({}, f), { continuation: i })),
                    (y = []),
                    'patient' === p || f.type.includes('patient_account')
                      ? [4, this.host.api.search.patientQuery(f)]
                      : [3, 2]
                  );
                case 1:
                  return (
                    (v = e.sent()).metadata.continuation || (v.metadata.continuation = null), [3, 4]
                  );
                case 2:
                  return [4, this.host.api.search.query(f)];
                case 3:
                  (v = e.sent()), (e.label = 4);
                case 4:
                  for (y = v.results, g = [], m = 0, _ = y; m < _.length; m++)
                    (M = _[m]),
                      (x = M.type),
                      (k = M.entity),
                      (N = M.organization_id),
                      (b = { entityAttrs: k, organizationId: N, type: x }),
                      this.config.condensedReplays
                        ? k.conversation_id
                          ? ((b.conversationId = k.conversation_id), delete k.conversation_id)
                          : (b.conversationId = M.conversation_id)
                        : delete k.conversation_id,
                      0 !== Object.keys(k).length &&
                        ('tigertext:entity:account' === x
                          ? ((n = 'status'),
                            !((r = 'account_status') in (t = k)) &&
                              n in t &&
                              ((t[r] = t[n]), delete t[n]))
                          : 'tigertext:entity:tag' === x && (k.token = N + ':' + k.token),
                        (D = k.metadata) && this.host.metadata.__injectMetadata(k.token, N, D),
                        g.push(b));
                  return (
                    (w = v.metadata),
                    (I = w.continuation),
                    (O = w.first_hit),
                    (T = w.total_hits),
                    (E = { firstHit: O, totalHits: T }),
                    I && (d ? (E.firstHit = 1) : (E.continuation = I)),
                    (R = []),
                    (A = []),
                    (C = function (e) {
                      for (var t = 0, n = e.results; t < n.length; t++) {
                        var r = n[t];
                        R.push(r);
                      }
                    }),
                    d && I && A.push(this._query(jh(jh({}, $), { continuation: I })).then(C)),
                    [4, Promise.all(A)]
                  );
                case 5:
                  for (e.sent(), S = [], P = 0, j = g; P < j.length; P++)
                    (M = j[P]),
                      (z = M.conversationId),
                      (k = M.entityAttrs),
                      (N = M.organizationId),
                      (x = M.type),
                      (U = this.host.modelNameByTypeNS(x)),
                      (L = 'group' === U && this.host.groups.__extractGroupTypeFromAttrs(k)) ===
                        si.FORUM && delete k.members,
                      (q = this.host.metadata.get(k.token, N)),
                      (D = q ? q.data : null),
                      'user' ===
                        (B = this.host.conversations.__injectCounterParty({
                          conversationId: z,
                          entityAttrs: k,
                          entityType: U,
                          groupType: L,
                          hasCurrentUser: !1,
                          organizationId: N,
                        })).$entityType &&
                        D &&
                        'role' === D.feature_service &&
                        this.host.roles.__injectSearchResult({
                          entity: B,
                          metadata: D,
                          organizationId: N,
                        }),
                      (a.length && a.includes(B.id)) ||
                        ((F = this.host.currentUserId),
                        (c && B.id === F) ||
                          (B
                            ? (B.isRoleBot && B.botRole && (B = B.botRole),
                              (G = new Ld(B, N, z, D)),
                              S.unshift(G))
                            : this.logger.warn('no entity for ', M)));
                  for (V = 0, K = S; V < K.length; V++) (H = K[V]), R.unshift(H);
                  return [2, { results: R, metadata: E }];
              }
              var t, n, r;
            });
          });
        }),
        (e._searchLocalOrganization = function (e) {
          for (
            var t = e.organization,
              n = e.query,
              r = e.types,
              o = void 0 === r ? [] : r,
              i = t.conversations,
              s = t.id,
              a = [],
              u = 0,
              c = i;
            u < c.length;
            u++
          ) {
            var l = c[u],
              d = l.counterParty,
              h = l.counterPartyType,
              p = l.metadata,
              f = zh[h];
            if (o.includes(f))
              if (n && 0 !== Object.keys(n).length) {
                for (var v = !0, y = 0, g = Object.entries(n); y < g.length; y++) {
                  var m = g[y],
                    _ = m[0],
                    b = m[1];
                  (_ = _.split(',')), (b = b.toLowerCase());
                  for (var w = !1, I = 0, O = _; I < O.length; I++) {
                    var T = O[I],
                      E = 'user' === h && Ch.includes(T) ? d.profileByOrganizationId[s] : d;
                    if (E) {
                      var R = E[T];
                      if (void 0 !== R && R.toLowerCase().includes(b)) {
                        w = !0;
                        break;
                      }
                    }
                  }
                  if (!w) {
                    v = !1;
                    break;
                  }
                }
                v && a.push(new Ld(d, s, p));
              } else a.push(new Ld(d, s, p));
          }
          return a;
        }),
        e
      );
    }
    function wp(e, t) {
      return t in e ? e[t].value : null;
    }
    var Ip = function (e, t) {
        var T = t.host,
          n = e.defineModel('organization', {
            instanceEvents: !0,
            replaceKeys: {
              allowMsgForward: '__isForwardAllowed',
              allowPublicGroups: 'forumsEnabled',
              allowRoleScheduleUpload: '__isRolesScheduleUploadEnabled',
              desktopPriorityMessaging: '__desktopPriorityMessagingSounds',
              eula: 'eulaEnabled',
              eulaContent: 'eulaUrl',
              featurePatientCare: '__canShowPatientCare',
              featurePatientNetwork: '__canShowPatientNetwork',
              featureRoleScheduleUpload: '__canUploadRolesSchedule',
              featureRoleService: 'rolesEnabled',
              featureRolesEscalation: '__canEscalateMessages',
              featureTeams: '__canShowTeams',
              featureTransactions: 'canShowTransactions',
              latestIncomingMessageSortNumber: 'lastIncomingMessageSortNumber',
              members: 'memberCount',
              organizationKey: 'organizationId',
              patientCare: '__showPatientCare',
              patientNetwork: '__showPatientNetwork',
              pfNoAttachment: '__isPFAttachmentAllowed',
              pfNoPhoto: '__isPFPhotoAllowed',
              roleService: 'canAdminRoles',
              rolesEscalation: '__isRolesEscalationEnabled',
              ssoWebSessionDuration: 'desktopExtendedSession',
              teams: '__showTeams',
            },
            defaultValues: {
              __canEscalateMessages: !1,
              __canShowPatientCare: !1,
              __canShowTeams: !1,
              __canUploadRolesSchedule: !1,
              __isForwardAllowed: !1,
              __isPFAttachmentAllowed: !1,
              __isPFPhotoAllowed: !1,
              __isRolesEscalationEnabled: !1,
              __isRolesScheduleUploadEnabled: !1,
              __showPatientCare: !1,
              __showTeams: !1,
              canAdminRoles: !1,
              canShowTransactions: !1,
              desktopExtendedSession: -1,
              forumsEnabled: !1,
              highestSortNumber: 0,
              isPatientNetworkEnabled: !1,
              lastIncomingMessageSortNumber: 0,
              networks: null,
              paid: !1,
              rolesEnabled: !1,
              settings: {},
              unreadCount: 0,
              unreadPriorityCount: 0,
            },
            transientAttrs: ['unreadCount', 'unreadPriorityCount'],
            parseAttrs: function (e) {
              return (
                e.settings &&
                  (e.settings = fp.a.call(
                    hp.a.call(e.settings, function (e) {
                      return In.camelizeKey(e.name);
                    }),
                    function (e) {
                      isFinite(e.value) && (e.value = +e.value),
                        'true' === e.value && (e.value = !0),
                        'false' === e.value && (e.value = !1);
                    }
                  )),
                e
              );
            },
            afterAssignment: function (e) {
              var t = e.__canEscalateMessages,
                n = e.__canShowPatientCare,
                r = e.__canShowPatientNetwork,
                o = e.__canShowTeams,
                i = e.__canUploadRolesSchedule,
                s = e.__desktopPriorityMessagingSounds,
                a = e.__isForwardAllowed,
                u = e.__isPFAttachmentAllowed,
                c = e.__isPFPhotoAllowed,
                l = e.__isRolesEscalationEnabled,
                d = e.__isRolesScheduleUploadEnabled,
                h = e.__showPatientCare,
                p = e.__showPatientNetwork,
                f = e.__showTeams,
                v = e.autoForwardReceiverId,
                y = e.id,
                g = e.name,
                m = e.paid,
                _ = e.settings;
              (f = f && !!wp(_, 'teams')),
                (p = 'individual' === p ? !!wp(_, 'patientNetwork') : !!p),
                (v = wp(_, 'dndAutoForwardReceiver')),
                (e.allowPriorityMessage = !!wp(_, 'priorityMessaging')),
                (e.autoLogoutMinutes = wp(_, 'autologoutTime') || 1440),
                (e.canUploadRolesSchedule = i && d),
                (e.deleteOnRead = !!wp(_, 'dor')),
                (e.desktopAutoUpdate = !!wp(_, 'autoUpdate')),
                (e.isEulaAccepted = !wp(_, 'eula')),
                (e.isForwardAllowed = a && 1 === wp(_, 'forward')),
                (e.messageTimeToLive = wp(_, 'ttl') || -1),
                (e.isPatientBroadcastEnabled = !!wp(_, 'pfBroadcast')),
                (e.isPatientScheduledMessagesEnabled = !!wp(_, 'pfScheduleMessages')),
                (e.isPatientVirtualWaitingRoomEnabled = !!wp(_, 'pfVirtualWaitingRoom')),
                (e.isPFVideoCallEnabled = !!wp(_, 'pfVideoCall')),
                (e.isPFVoiceCallEnabled = !!wp(_, 'pfVoiceCall')),
                (e.isPFGroupVideoCallEnabled = !!wp(_, 'pfGroupVideoCall')),
                (e.isPFGroupVoiceCallEnabled = !!wp(_, 'pfGroupVoiceCall')),
                (e.isPFAttachmentAllowed = !u),
                (e.isPFPhotoAllowed = !c);
              var b = 'UpM28mnfW65vJkbqEATtKvxm' === e.id;
              if (
                ((e.allowedSenders = T.organizations._getAllowedSenders(e)),
                (e.autoForwardReceiverId = v),
                (e.autoForwardReceiver = v ? T.models.User.get(v) : null),
                (e.canEscalateMessages = t && l),
                (e.desktopPriorityMessagingSounds = m && s),
                (e.displayName = b ? 'Contacts' : g),
                (e.isContacts = b),
                (e.showPatientCare = n && h),
                (e.isPatientNetworkEnabled = r && p),
                T.currentUser &&
                  (T.currentUser.isPatient || T.currentUser.isPatientContact) &&
                  r &&
                  (e.isPatientNetworkEnabled = 'off' !== p),
                (e.showTeams = o && f),
                (e.userRoles = T.userRoles.getByOrganizationId(y)),
                e.networks || (e.networks = {}),
                e.networks.provider ||
                  (e.networks.provider = { unreadCount: 0, unreadPriorityCount: 0 }),
                e.networks.patient ||
                  (e.networks.patient = {
                    dnd: !1,
                    dndText: '',
                    unreadCount: 0,
                    unreadPriorityCount: 0,
                  }),
                e.networks.virtualWaitingRoom ||
                  (e.networks.virtualWaitingRoom = { unreadCount: 0, unreadPriorityCount: 0 }),
                e.network)
              ) {
                var w = e.network.patient,
                  I = w.dnd,
                  O = w.dndText;
                (e.networks.patient.dnd = I),
                  (e.networks.patient.dndText = null !== O ? O : ''),
                  delete e.network;
              }
            },
            methods: {
              getSettingValue: function (e) {
                return wp(this.settings, e);
              },
              getSettingEntry: function (e) {
                return this.settings && e in this.settings ? this.settings[e] : null;
              },
            },
            relations: {
              hasMany: {
                __expirableMessages: {
                  type: 'message',
                  foreignKey: '__organizationId',
                  filter: function (e) {
                    return !!e.expiresAt;
                  },
                  sortBy: [
                    ['expiresAt', 'asc'],
                    ['id', 'asc'],
                  ],
                },
                __expirableMutes: {
                  type: 'mute',
                  foreignKey: 'organizationId',
                  filter: function (e) {
                    return !!e.expiresAt;
                  },
                  sortBy: [
                    ['expiresAt', 'asc'],
                    ['id', 'asc'],
                  ],
                },
                __markingAsReadConversations: {
                  type: 'conversation',
                  foreignKey: 'organizationId',
                  filter: function (e) {
                    return !!e._markingAsRead;
                  },
                  sortBy: [
                    ['_markingAsReadExpiration', 'asc'],
                    ['id', 'asc'],
                  ],
                },
                conversations: {
                  type: 'conversation',
                  foreignKey: 'organizationId',
                  filter: function (e) {
                    var t = e.counterParty;
                    return !!t && t.groupType !== si.ROLE_ASSIGNMENT;
                  },
                  sortBy: [
                    ['highestSortNumber', 'desc'],
                    ['_origIndex', 'asc'],
                    ['id', 'asc'],
                  ],
                },
                messageTemplates: {
                  type: 'messageTemplate',
                  foreignKey: 'organizationId',
                  sortBy: [['title', 'asc']],
                },
                roles: { type: 'role', foreignKey: 'organizationId' },
                roleTags: { type: 'roleTag', foreignKey: 'organizationId' },
              },
            },
          });
        return (
          Jd(n, {
            finder: function () {
              for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              return (e = T.organizations).find.apply(e, t);
            },
            placeholderEntityDelayBeforeRefreshing: function () {
              return T.config.placeholderEntityDelayBeforeRefreshing;
            },
            placeholderEntityAllowLoading: function () {
              return T.config.placeholderEntityAllowLoading;
            },
            defaultPlaceholderAttrs: { name: 'Loading Organization...' },
            defaultNotFoundAttrs: { displayName: '<Organization Not Found>' },
          }),
          n
        );
      },
      Op = function (e, t) {
        return (
          t.host,
          e.defineModel('patient', {
            replaceKeys: { patientMrn: 'mrn', patientGender: 'gender', patientDob: 'dob' },
            parseAttrs: function (e) {
              return (
                'featureService' in e && delete e.featureService,
                'patientContacts' in e && delete e.patientContacts,
                'isPatientContact' in e && delete e.isPatientContact,
                'dob' in e && (e.dob = ga(e.dob)),
                'phoneNumber' in e && (e.phoneNumber = bo(e.phoneNumber)),
                e
              );
            },
            relations: {
              belongsTo: { user: { type: 'user', foreignKey: 'userId' } },
              hasMany: {
                contacts: { type: 'patientContact', foreignKey: 'patientId' },
                sharedConversations: {
                  type: 'conversation',
                  foreignKey: 'patientId',
                  filter: function (e, t) {
                    var n = e.counterParty;
                    if (!n) return !1;
                    var r = n.groupType,
                      o = n.hasCurrentUserOrRole,
                      i = n.memberIds;
                    return !(r !== si.PATIENT_MESSAGING || !o || !i.includes(t.userId));
                  },
                  sortBy: [
                    ['highestSortNumber', 'desc'],
                    ['_origIndex', 'asc'],
                    ['id', 'asc'],
                  ],
                },
              },
            },
          })
        );
      },
      Tp = function (e, t) {
        return (
          t.host,
          e.defineModel('patientContact', {
            replaceKeys: {
              patientDob: 'dob',
              patientGender: 'gender',
              patientMrn: 'mrn',
              relationName: 'relation',
            },
            parseAttrs: function (e) {
              return (
                'entity' in e && delete e.entity,
                'dob' in e && (e.dob = ga(e.dob)),
                'phoneNumber' in e && (e.phoneNumber = bo(e.phoneNumber)),
                e
              );
            },
            relations: {
              belongsTo: {
                patient: { type: 'patient', foreignKey: 'patientId' },
                user: { type: 'user', foreignKey: 'userId' },
              },
              hasMany: {
                sharedConversations: {
                  type: 'conversation',
                  foreignKey: 'patientContactId',
                  filter: function (e, t) {
                    var n = e.counterParty;
                    if (!n) return !1;
                    var r = n.groupType,
                      o = n.hasCurrentUserOrRole,
                      i = n.memberIds;
                    return !(r !== si.PATIENT_MESSAGING || !o || !i.includes(t.userId));
                  },
                  sortBy: [
                    ['highestSortNumber', 'desc'],
                    ['_origIndex', 'asc'],
                    ['id', 'asc'],
                  ],
                },
              },
            },
          })
        );
      },
      Ep = function (e, t) {
        var n = t.host;
        return e.defineModel('product', {
          defaultValues: {
            activeProcessingEvents: null,
            conversationCount: 0,
            organizations: null,
            rolesOptingIn: null,
            unreadCount: 0,
            unreadPriorityCount: 0,
            unreadVWRCount: 0,
            unreadVWRPriorityCount: 0,
          },
          transientAttrs: [
            'conversationCount',
            'organizations',
            'unreadCount',
            'unreadPriorityCount',
          ],
          afterAssignment: function (e) {
            var t = e.id;
            (e.productRoles = n.userRoles.getByProductId(t)),
              null === e.activeProcessingEvents && (e.activeProcessingEvents = []),
              null === e.organizations && (e.organizations = []),
              null === e.rolesOptingIn && (e.rolesOptingIn = []);
          },
        });
      };
    function Rp(e, t) {
      return !!e && e.includes(t);
    }
    var Ap = function (e, t) {
        return e.defineModel('productRoles', {
          defaultValues: { roles: [] },
          afterAssignment: function (e) {
            var t = e.roles;
            (e.isAdmin = Rp(t, 'tt_admin')),
              (e.isAnalyticsAdmin = Rp(t, 'tt_reporting')),
              (e.isLdapAdmin = Rp(t, 'tt_ldap')),
              (e.isSuperAdmin = Rp(t, 'tt_super_admin'));
          },
          methods: {
            hasRole: function (e) {
              return !!this.roles && this.roles.includes(e);
            },
          },
          relations: {
            belongsTo: {
              product: { type: 'product', foreignKey: 'productId' },
              user: { type: 'user', foreignKey: 'userId' },
            },
          },
        });
      },
      Cp = function (e, t) {
        var n = t.host;
        return e.defineModel('role', {
          defaultValues: { description: '', memberIds: null, roleTagId: null },
          afterAssignment: function (e) {
            n.users._setMembersOnEntity(e);
          },
          relations: {
            belongsTo: {
              assignmentGroup: { type: 'group', foreignKey: 'assignmentGroupId' },
              botUser: { type: 'user', foreignKey: 'botUserId' },
              escalationPolicy: { type: 'escalationPolicy', foreignKey: 'escalationPolicyId' },
              organization: { type: 'organization', foreignKey: 'organizationId' },
              roleTag: { type: 'roleTag', foreignKey: 'roleTagId' },
            },
          },
        });
      },
      Sp = function (e, t) {
        return e.defineModel('roleTag', {
          replaceKeys: { tagColor: 'color', tagName: 'name' },
          relations: {
            belongsTo: { organization: { type: 'organization', foreignKey: 'organizationId' } },
            hasMany: { roles: { type: 'role', foreignKey: 'roleTagId' } },
          },
          parseAttrs: function (e) {
            if ('colorValue' in e) {
              var t = e.color,
                n = e.colorValue;
              (e.color = n), (e.colorId = t), delete e.colorValue;
            }
            return 'color' in e && (e.color = e.color.replace('0x', '#')), e;
          },
          afterAssignment: function (e) {
            var t = e.name;
            (e.displayName = t), (e.isDefault = t && t.startsWith('Default'));
          },
        });
      },
      Pp = function (o, e) {
        var t = e.host;
        return o.defineModel('scheduledMessage', {
          replaceKeys: {
            createdBy: 'createdById',
            recipient: 'recipientId',
            recipientType: '_recipientType',
            senderToken: 'senderId',
            scheduleStatus: 'status',
            updatedBy: 'updatedById',
          },
          transientAttrs: ['$deleted'],
          parseAttrs: function (e) {
            return (
              (e.hasAttachment = !1),
              e.attachmentName && e.attachmentSize && e.attachmentType && (e.hasAttachment = !0),
              e._recipientType &&
                (e.recipientType = t.modelsByEntityType[In.camelizeKey(e._recipientType)].name),
              e
            );
          },
          afterAssignment: function (e) {
            var t = e.recipient,
              n = e.recipientId,
              r = e.recipientType;
            t ? ((n = t.id), (r = t.$entityType)) : (t = r && n ? o.store.get(r, n) : null),
              (e.recipient = t),
              (e.recipientId = n),
              (e.recipientType = r);
          },
          relations: {
            belongsTo: {
              createdBy: { type: 'user', foreignKey: 'createdById' },
              organization: { type: 'organization', foreignKey: 'organizationId' },
              sender: { type: 'user', foreignKey: 'senderId' },
              template: { type: 'messageTemplate', foreignKey: 'templateId' },
              updatedBy: { type: 'user', foreignKey: 'updatedById' },
            },
          },
        });
      },
      jp = function (e, t) {
        var a = t.host,
          n = e.defineModel('team', {
            replaceKeys: {
              avatar: 'avatarUrl',
              group_token: 'groupToken',
              members: '__members',
              numMembers: '__memberCount',
              name: 'displayName',
            },
            transientAttrs: ['__memberCount', '__members'],
            defaultValues: {
              canMembersLeave: !1,
              canRequestToJoin: !1,
              hasCurrentUserOrRole: !1,
              hasCurrentUserPending: !1,
              hasCurrentUserBeenDeclined: !1,
              memberIds: [],
            },
            skipCamelizationForKeys: ['members'],
            parseAttrs: function (e) {
              var t = e.__members;
              if (t) {
                for (var n = [], r = 0, o = t; r < o.length; r++) {
                  var i = o[r];
                  if ('object' == typeof i)
                    if (i.token) {
                      n.push(i.token);
                      var s = a.models.User.inject(i);
                      a.models.User.removePlaceholder({ entity: s, attrs: i });
                    } else i.id && n.push(i.id);
                  else 'string' == typeof i && n.push(i);
                }
                (e.memberIds = n), delete e.__members;
              }
              return e;
            },
            afterAssignment: function (e) {
              var t = e.memberIds;
              a.groups._setMembership(e),
                a.users._setMembersOnEntity(e),
                a.teams._setHasUserPending(e),
                (e.memberCount = (t && t.length) || e.__memberCount || 0);
            },
            relations: { belongsTo: { group: { type: 'group', foreignKey: 'groupId' } } },
          });
        return (
          Jd(n, {
            finder: function () {
              for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
              return (e = a.teams).find.apply(e, t);
            },
            placeholderEntityDelayBeforeRefreshing: function () {
              return a.config.placeholderEntityDelayBeforeRefreshing;
            },
            placeholderEntityAllowLoading: function () {
              return a.config.placeholderEntityAllowLoading;
            },
            defaultPlaceholderAttrs: { displayName: 'Loading...' },
            defaultNotFoundAttrs: { displayName: '<Team Not Found>' },
          }),
          n
        );
      },
      Mp = function (e, t) {
        return (
          t.host,
          e.defineModel('teamRequest', {
            replaceKeys: {},
            transientAttrs: [],
            defaultValues: {},
            parseAttrs: function (e) {
              return (
                e.createdBy && ((e.createdById = e.createdBy.token), delete e.createdBy),
                e.team && ((e.teamId = e.team.id), delete e.team),
                e
              );
            },
            afterAssignment: function (e) {},
            relations: {
              belongsTo: {
                createdBy: { type: 'user', foreignKey: 'createdById' },
                team: { type: 'team', foreignKey: 'teamId' },
              },
            },
          })
        );
      },
      zp = function (e, t) {
        return e.defineModel('userRoles', {
          defaultValues: { roles: [] },
          afterAssignment: function (e) {
            var t = 'UpM28mnfW65vJkbqEATtKvxm' === e.organizationId,
              n = e.roles;
            (e.isAdmin = n.includes('admin')),
              (e.isHelpDesk = n.includes('help_desk')),
              (e.isPatientAdmin = n.includes('patient_messaging_admin')),
              (e.isRoleAdmin = n.includes('feature_role_admin')),
              (e.isTeamAdmin = n.includes('team_admin')),
              (e.isVirtualWaitingRoomAdmin = n.includes('virtual_waiting_room_admin')),
              (e.reportingEnabled = n.includes('reporting') && !t),
              (e.reportingEnabledOnAllOrgs = n.includes('reporting_view_orgs') && !t),
              (e.tigerTouchPlusReportingEnabled = n.includes('tigertouchplus_reporting'));
          },
          methods: {
            hasRole: function (e) {
              return this.roles.includes(e);
            },
          },
          relations: {
            belongsTo: {
              organization: { type: 'organization', foreignKey: 'organizationId' },
              user: { type: 'user', foreignKey: 'userId' },
            },
          },
        });
      },
      kp = function (e, t) {
        return (
          t.host,
          e.defineModel('virtualWaitingRoom', {
            parseAttrs: function (e) {
              return e;
            },
            relations: {
              belongsTo: { organization: { type: 'organization', foreignKey: 'organizationId' } },
            },
          })
        );
      },
      Np = d(31),
      xp = d.n(Np),
      Up = d(32),
      Lp = d.n(Up),
      qp = d(33),
      Dp = d.n(qp),
      Bp = function () {
        return (Bp =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      Fp = {
        computed: {},
        defaultValues: null,
        idAttribute: 'id',
        methods: {},
        parseAttrs: ee.a.identity,
        relations: { belongsTo: {}, hasMany: {} },
      },
      Gp = Symbol('NOT_PROVIDED'),
      Vp = 0,
      Kp = {
        initRelations: !(global.duplicateDebug = {
          initRelations: {},
          outOfOrderElements: [],
          setHighestSortNumber: { conversationId: null },
          updateRelations: {},
        }),
        updateRelationsAdd: !1,
        updateRelationsRemove: !1,
      };
    function Hp(e, t) {
      return 'organization' === e && 'conversations' === t;
    }
    function $p(e, t, n) {
      for (
        var r = (void 0 === n ? {} : n).previousValue,
          o = [],
          i = {},
          s = [],
          a = 0,
          u = !1,
          c = 1 / 0,
          l = 0;
        l < e.length;
        l++
      ) {
        var d = e[l],
          h = d._origIndex,
          p = d.id,
          f = d.highestSortNumber,
          v = { _origIndex: h, id: p, highestSortNumber: f, sortNumber: d.sortNumber };
        if (
          (o.push(v),
          (i[p] = (i[p] || 0) + 1),
          1 < i[p] && a++,
          (r && r.id === p && r.highestSortNumber === f && c < f) || (!r && c < f))
        ) {
          u = !0;
          var y = e[l - 1],
            g = y._origIndex,
            m = y.id,
            _ = y.highestSortNumber,
            b = y.sortNumber;
          s.push({ _origIndex: g, id: m, highestSortNumber: _, sortNumber: b }), s.push(v);
        }
        c = f;
      }
      return { copy: o, duplicateCount: a, outOfOrder: u, outOfOrderElements: s };
    }
    function Wp(e, t, n, r, o) {
      for (
        var i = void 0 === o ? {} : o,
          s = i.action,
          a = i.previousValue,
          u = i.source,
          c = [],
          l = {},
          d = 0,
          h = 0,
          p = n;
        h < p.length;
        h++
      ) {
        var f = p[h],
          v = f._origIndex,
          y = f.id,
          g = f.highestSortNumber,
          m = f.sortNumber;
        c.push({ _origIndex: v, id: y, highestSortNumber: g, sortNumber: m }),
          (l[y] = (l[y] || 0) + 1),
          1 < l[y] && d++;
      }
      return 0 < t || 0 < d
        ? ((v = r._origIndex),
          (y = r.id),
          (g = r.highestSortNumber),
          (m = r.sortNumber),
          console.error(
            s + '\n' + u + '\nBefore duplicate count: ' + t + '\nAfter duplicate count: ' + d,
            '\nBefore elements (' + e.length + '): ',
            e,
            '\nAfter elements (' + c.length + '): ',
            c,
            '\nElement info: ',
            { _origIndex: v, id: y, highestSortNumber: g, sortNumber: m }
          ),
          a &&
            console.error('Previous value', {
              _origIndex: a._origIndex,
              id: a.id,
              highestSortNumber: a.highestSortNumber,
              sortNumber: a.sortNumber,
            }),
          console.log(new Error('Duplicate items stack trace')),
          { logged: !0, currCopy: c, counts: l })
        : { logged: !1, currCopy: c, counts: l };
    }
    function Xp(e, t, n, r) {
      var o = void 0 === r ? {} : r,
        i = o.action,
        s = o.previousValue,
        a = o.source,
        u = t._origIndex,
        c = t.id,
        l = t.highestSortNumber,
        d = t.sortNumber;
      0 === Vp &&
        t.$entityClass.emit(
          'displayInfoDialog',
          'We have automatically corrected a Conversation Store problem, please reach out to Mike O to help us debug it further.'
        ),
        (global.duplicateDebug.outOfOrderElements[Vp] = e),
        console.error(
          i +
            '\n' +
            a +
            '\n\nBefore elements (also saved in window.duplicateDebug.outOfOrderElements[' +
            Vp++ +
            ']): ',
          e,
          '\nOut of order elements: ',
          n,
          '\nElement info: ',
          { _origIndex: u, id: c, highestSortNumber: l, sortNumber: d }
        ),
        s &&
          console.error('Previous value', {
            _origIndex: s._origIndex,
            id: s.id,
            highestSortNumber: s.highestSortNumber,
            sortNumber: s.sortNumber,
          }),
        console.log(new Error('Elements out of order stack trace'));
    }
    var Qp =
      ((Yp.create = function (e, t, n) {
        return new this(e, t, n);
      }),
      (Yp.prototype.__initRelations = function () {
        var r = this,
          T = this,
          e = ee.a.transform(
            this.options.relations.belongsTo,
            function (e, t, n) {
              e[n] = {
                get: function () {
                  return T.store.get(t.type, this[t.foreignKey]);
                },
                set: function (e) {
                  this[t.foreignKey] = T.store.resolveId(t.type, e);
                },
              };
            },
            {}
          );
        Object.assign(this.options.computed, e);
        var t = ee.a.transform(
          this.options.relations.hasMany,
          function (e, t, m) {
            var _ = t.filter,
              b = t.foreignKey,
              n = t.sortBy,
              w = t.type,
              I = r.__getSorted(n),
              O = r.options;
            e[m] = {
              get: function () {
                if (
                  (this.$$transientAttrs.relations || (this.$$transientAttrs.relations = {}),
                  this.$$transientAttrs.relations[m])
                )
                  return this.$$transientAttrs.relations[m];
                var e = [],
                  t = T.store.models[w];
                if (t.hasManySortFields)
                  for (var n = 0, r = t.getAll(); n < r.length; n++) {
                    var o = r[n];
                    if (o[b] === this[T.idAttribute] && (!_ || _(o, this))) {
                      var i = ee.a.has(this.previousHasManySortValues, o[this.idAttribute])
                        ? this.previousHasManySortValues[o[this.idAttribute]]
                        : Gp;
                      t.previousHasManySortValues[o[t.idAttribute]] = ee.a.pick(
                        o,
                        t.hasManySortFields
                      );
                      var s = O.host,
                        a = [],
                        u = 0;
                      if (s.config.condensedReplays && Hp(T.name, m)) {
                        var c = $p(e, 0, { previousValue: i === Gp ? void 0 : i }),
                          l = c.copy,
                          d = c.duplicateCount,
                          h = c.outOfOrder,
                          p = c.outOfOrderElements;
                        (a = l),
                          (u = d),
                          h &&
                            (Xp(a, o, p, {
                              action:
                                '__initRelations - ' + (i === Gp ? 'sorted.add' : 'sorted.update'),
                              previousValue: i === Gp ? void 0 : i,
                              source: 'Elements are out of order in ' + T.name + '.' + m,
                            }),
                            e.sort(I.cmp));
                      }
                      if (
                        (i === Gp ? I.add(e, o) : I.update(e, o, { previousValue: i }),
                        s.config.condensedReplays && !Kp.initRelations && Hp(T.name, m))
                      ) {
                        var f = Wp(a, u, e, o, {
                            action:
                              '__initRelations - ' + (i === Gp ? 'sorted.add' : 'sorted.update'),
                            previousValue: i === Gp ? void 0 : i,
                            source: 'There are duplicates in ' + T.name + '.' + m,
                          }),
                          v = f.logged,
                          y = f.currCopy,
                          g = f.counts;
                        (Kp.initRelations = v) &&
                          (global.duplicateDebug.initRelations = {
                            beforeElements: a,
                            afterElements: y,
                            counts: g,
                          });
                      }
                    }
                  }
                return (this.$$transientAttrs.relations[m] = e);
              },
              set: function (e) {},
            };
          },
          {}
        );
        Object.assign(this.options.computed, t);
      }),
      (Yp.prototype.__getSorted = function (a) {
        void 0 === a && (a = [[this.idAttribute, 'asc']]);
        var e = (function () {
          for (var e = 0, t = [], n = 0, r = a; n < r.length; n++) {
            var o = r[n],
              i = o[0],
              s = o[1];
            if (
              (t.push('const a' + e + " = a['" + i + "']"),
              t.push('const b' + e + " = b['" + i + "']"),
              'asc' === s)
            )
              t.push('if (a' + e + ' === undefined && b' + e + ' !== undefined) return -1'),
                t.push('if (a' + e + ' !== undefined && b' + e + ' === undefined) return 1'),
                t.push('if (a' + e + ' === null && b' + e + ' !== null) return -1'),
                t.push('if (a' + e + ' !== null && b' + e + ' === null) return 1'),
                t.push('if (a' + e + ' < b' + e + ') return -1'),
                t.push('if (a' + e + ' > b' + e + ') return 1');
            else {
              if ('desc' !== s)
                throw new Error('unsupported sort ordering for field ' + i + ': ' + s);
              t.push('if (a' + e + ' === undefined && b' + e + ' !== undefined) return 1'),
                t.push('if (a' + e + ' !== undefined && b' + e + ' === undefined) return -1'),
                t.push('if (a' + e + ' === null && b' + e + ' !== null) return 1'),
                t.push('if (a' + e + ' !== null && b' + e + ' === null) return -1'),
                t.push('if (a' + e + ' < b' + e + ') return 1'),
                t.push('if (a' + e + ' > b' + e + ') return -1');
            }
            e++;
          }
          return t.push('return 0'), new Function('a', 'b', t.join('\n'));
        })();
        return new Pa(e);
      }),
      (Yp.prototype.__initTransientAttrs = function () {
        var e = this,
          t = this,
          r = {
            $$transientAttrs: {
              enumerable: !1,
              get: function () {
                var e = this[t.idAttribute];
                return t.transientAttrsStore[e] || (t.transientAttrsStore[e] = {});
              },
            },
          },
          o = {};
        this.options.transientAttrs &&
          this.options.transientAttrs.forEach(function (n) {
            e.options.defaultValues &&
              n in e.options.defaultValues &&
              ((o[n] = Ta(e.options.defaultValues[n])), delete e.options.defaultValues[n]),
              (r[n] = {
                get: function () {
                  return n in this.$$transientAttrs
                    ? this.$$transientAttrs[n]
                    : n in o
                    ? (this.$$transientAttrs[n] = o[n])
                    : void 0;
                },
                set: function (e) {
                  var t = global.duplicateDebug.setHighestSortNumber;
                  'conversation' !== this.$entityType ||
                    'highestSortNumber' !== n ||
                    Object.isFrozen(t) ||
                    ((t.conversationId = this.id),
                    (t.highestSortNumber = e),
                    (t.stackTrace = new Error('Set Conversation.highestSortNumber'))),
                    (this.$$transientAttrs[n] = e);
                },
              });
          }),
          Object.assign(this.options.computed, r);
      }),
      (Yp.prototype.createInstance = function (e, t) {
        void 0 === t && (t = !0), t && (e = this.parseAttrs(e));
        var n = e[this.idAttribute];
        if (this.entitiesById[n] || this.entitiesByServerId[n])
          throw new Error('called createInstance on an existing instance');
        return this.__wireInstance(e);
      }),
      (Yp.prototype.__wireInstance = function (t) {
        var o = this;
        this.options.defaultValues && ee.a.defaults(t, Ta(this.options.defaultValues));
        var n = {};
        this._writablePropertyKeys.forEach(function (e) {
          Ea(t, e) && ((n[e] = t[e]), delete t[e]);
        }),
          Object.defineProperties(t, this.options.computed),
          Object.assign(t, n),
          this.options.instanceEvents && Object.assign(t, M.a.prototype),
          Object.assign(t, this.options.methods),
          Object.assign(t, {
            toPlainObject: function (e) {
              var t = this,
                n = {};
              o._computedKeys.forEach(function (e) {
                return (n[e] = t[e]);
              });
              var r = Object.assign({}, this, n);
              return (
                delete r.setMaxListeners,
                delete r.emit,
                delete r.addListener,
                delete r.on,
                delete r.once,
                delete r.removeListener,
                delete r.removeAllListeners,
                delete r.listeners,
                delete r.listenerCount,
                delete r.off,
                delete r.toPlainObject,
                delete r._events,
                delete r._maxListeners,
                r
              );
            },
          });
        var e = t[this.idAttribute];
        return (
          !e || 'serverId' in t || (t.serverId = e),
          this.options.beforeCreateInstance && this.options.beforeCreateInstance(t),
          t
        );
      }),
      (Yp.prototype.inject = function (e) {
        var t, n;
        if (this.is(e)) {
          if (((n = e), (t = this.resolveId(n)), this.entitiesById[t])) {
            if (
              (this.__beforeInject(n),
              this.__register(t, n),
              this.options.afterAssignment && this.options.afterAssignment(n),
              this.__addToHasManyRelationships(n),
              this.options.afterInject && this.options.afterInject(n),
              this.emit('afterInject', this, n),
              'conversation' === n.$entityType)
            ) {
              var r = global.duplicateDebug.setHighestSortNumber;
              Object.isFrozen(r) ||
                null === r.conversationId ||
                (r.conversationId !== n.id
                  ? (Object.freeze(r),
                    console.error(
                      'Injected a different conversation after setting Conversation.highestSortNumber.\nCheck `window.duplicateDebug.setHighestSortNumber` for details.'
                    ))
                  : (r.conversationId = null));
            }
            return n;
          }
          Object.isFrozen(global.duplicateDebug.setHighestSortNumber) ||
            'conversation' !== n.$entityType ||
            (global.duplicateDebug.setHighestSortNumber.conversationId = null);
        }
        if (!n && ((e = this.parseAttrs(e)), (t = this.resolveId(e)), !this.isValidId(t)))
          throw new Error("'" + this.idAttribute + "' is required");
        var o = !1,
          i = this.entitiesById[t] || this.entitiesByServerId[t];
        return (
          n
            ? (i || (o = !0), this.__beforeInject(n))
            : i
            ? ((n = i), this.__beforeInject(e, n), Object.assign(n, e))
            : ((o = !0), (n = this.__wireInstance(e)), this.__beforeInject(n)),
          this.__register(t, n),
          this.options.afterAssignment && this.options.afterAssignment(n),
          this.__addToHasManyRelationships(n),
          this.options.afterInject && this.options.afterInject(n),
          this.emit('afterInject', this, n),
          o &&
            (this.options.afterCreate && this.options.afterCreate(n),
            this.emit('afterCreate', this, n)),
          n
        );
      }),
      (Yp.prototype.__beforeInject = function () {
        for (var e, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        var r = t[0],
          o = t[1];
        !o || 'serverId' in r || (r.serverId = o.serverId),
          this.options.beforeInject && (e = this.options).beforeInject.apply(e, t),
          this.emit('beforeInject', this, r);
      }),
      (Yp.prototype.replaceExisting = function (e, t) {
        var n = (void 0 === t ? {} : t).instance,
          r = this.options.idAttribute;
        if (this.is(e))
          throw new Error('cannot call replaceExisting() on an instance; should be plain object');
        if (n && !this.is(n))
          throw new Error("provided 'instance' option is not an instance of this model");
        e = this.parseAttrs(e);
        var o = this.resolveId(e);
        if (!this.isValidId(o)) throw new Error("'" + r + "' is required");
        var i,
          s = o;
        if (n) {
          var a = this.resolveId(n);
          s !== a && (this.entitiesById[s] ? (this.eject(n), (n = null)) : (s = a));
        }
        if ((n || ((n = this.entitiesById[s] || this.entitiesByServerId[s]) && (s = n[r])), n)) {
          var u = {};
          for (var c in e) u[c] = !0;
          this.__beforeInject(e, n);
          for (var l = 0, d = Object.getOwnPropertyNames(n); l < d.length; l++) {
            var h = d[l];
            !u[h] && Ea(n, h) && delete n[h];
          }
          Object.assign(n, e), (n[r] = s), (n.serverId = o), this.__wireInstance(n);
        } else (i = !0), (n = this.__wireInstance(e)), this.__beforeInject(n);
        return (
          this.__register(s, n),
          this.options.afterAssignment && this.options.afterAssignment(n),
          this.__addToHasManyRelationships(n),
          this.options.afterInject && this.options.afterInject(n),
          this.emit('afterInject', this, n),
          i &&
            (this.options.afterCreate && this.options.afterCreate(n),
            this.emit('afterCreate', this, n)),
          n
        );
      }),
      (Yp.prototype.eject = function (e) {
        e = this.resolveId(e);
        var t = this.entitiesById[e] || this.entitiesByServerId[e];
        t &&
          (this.emit('beforeEject', this, t),
          this.__removeFromHasManyRelationships(t),
          this.__unregister(e, t),
          this.emit('afterEject', this, t));
      }),
      (Yp.prototype.__register = function (e, t) {
        this.entitiesById[e] !== t && ((this.entitiesById[e] = t), this.entitiesList.push(t));
        var n = this.previousServerIds[e],
          r = t.serverId;
        n &&
          n !== r &&
          (delete this.entitiesByServerId[n],
          r === e
            ? delete this.previousServerIds[e]
            : ((this.entitiesByServerId[r] = t), (this.previousServerIds[e] = r))),
          n || r === e || ((this.entitiesByServerId[r] = t), (this.previousServerIds[e] = r));
      }),
      (Yp.prototype.__unregister = function (e, t) {
        delete this.entitiesById[e],
          ee.a.pull(this.entitiesList, t),
          e in this.transientAttrsStore && delete this.transientAttrsStore[e];
        var n = this.previousServerIds[e];
        n && (delete this.entitiesByServerId[n], delete this.previousServerIds[e]);
      }),
      (Yp.prototype.injectPlaceholder = function (e) {
        var t = e.token || e[this.idAttribute];
        if (this.get(t)) return this.inject(e);
        var n = this.createInstance(e);
        return (
          Object.defineProperty(n, '$placeholder', { value: !0, configurable: !0 }), this.inject(n)
        );
      }),
      (Yp.prototype.removePlaceholder = function (e) {
        var t = e.entity,
          n = e.attrs;
        t &&
          t.$placeholder &&
          (n
            ? (delete t.$placeholder, delete t.$notFound)
            : Object.defineProperty(t, '$notFound', { value: !0, configurable: !0 }),
          this.inject(t));
      }),
      (Yp.prototype.touch = function (e) {
        var t;
        (e = this.resolveId(e)),
          (this.entitiesById[e] || this.entitiesByServerId[e]) &&
            this.inject((((t = {})[this.idAttribute] = e), t));
      }),
      (Yp.prototype.__addToHasManyRelationships = function (e) {
        this.__updateRelationsIfNeeded(e, 'add');
      }),
      (Yp.prototype.__removeFromHasManyRelationships = function (e) {
        this.__updateRelationsIfNeeded(e, 'remove');
      }),
      (Yp.prototype.__updateRelationsIfNeeded = function (O, T) {
        var E = this,
          e = this.store.getParentRelationshipsOfModel(this.name);
        if (e) {
          this.hasManySortFields ||
            (this.hasManySortFields = gc.a.call(
              dc.a
                .call(
                  e
                    .map(function (e) {
                      var t = e.sortBy;
                      return (
                        t &&
                        t.map(function (e) {
                          return e[0];
                        })
                      );
                    })
                    .filter(Boolean)
                )
                .concat([this.idAttribute])
            ));
          var R = ee.a.has(this.previousHasManySortValues, O[this.idAttribute])
            ? this.previousHasManySortValues[O[this.idAttribute]]
            : Gp;
          (this.previousHasManySortValues[O[this.idAttribute]] = ee.a.pick(
            O,
            this.hasManySortFields
          )),
            e.forEach(function (e) {
              var t = e.filter,
                n = e.foreignKey,
                r = e.relationKey,
                o = e.sortBy,
                i = e.sorted,
                s = E.store.get(e.parent, O[n]);
              if (s && s.$$transientAttrs.relations && s.$$transientAttrs.relations[r]) {
                var a = !1;
                if ('remove' === T || (t && !t(O, s)))
                  if (o) {
                    var u = [],
                      c = 0;
                    if ((b = E.options.host).config.condensedReplays && Hp(e.parent, r)) {
                      var l = $p(s[r], 0, { previousValue: R === Gp ? void 0 : R }),
                        d = l.copy,
                        h = l.duplicateCount,
                        p = l.outOfOrder,
                        f = l.outOfOrderElements;
                      (u = d),
                        (c = h),
                        p &&
                          (Xp(u, O, f, {
                            action: '__updateRelationsIfNeeded action:remove - sorted.remove',
                            previousValue: R === Gp ? void 0 : R,
                            source: 'Elements are out of order in ' + e.parent + '.' + r,
                          }),
                          s[r].sort(i.cmp));
                    }
                    if (
                      ((a = R === Gp ? i.remove(s[r], O) : i.remove(s[r], O, { previousValue: R })),
                      b.config.condensedReplays && !Kp.updateRelationsRemove && Hp(e.parent, r))
                    ) {
                      var v = Wp(u, c, s[r], O, {
                          action: '__updateRelationsIfNeeded action:remove - sorted.remove',
                          previousValue: R === Gp ? void 0 : R,
                          source: 'There are duplicates in ' + e.parent + '.' + r,
                        }),
                        y = v.logged,
                        g = v.currCopy,
                        m = v.counts;
                      (Kp.updateRelationsRemove = y) &&
                        (global.duplicateDebug.updateRelations.remove = {
                          beforeElements: u,
                          afterElements: g,
                          counts: m,
                        });
                    }
                  } else {
                    var _ = s[r].indexOf(O);
                    -1 !== _ && (s[r].splice(_, 1), (a = !0));
                  }
                else if ('add' === T)
                  if (o) {
                    var b;
                    if (
                      ((u = []),
                      (c = 0),
                      (b = E.options.host).config.condensedReplays && Hp(e.parent, r))
                    ) {
                      var w = $p(s[r], 0, { previousValue: R === Gp ? void 0 : R });
                      (d = w.copy),
                        (h = w.duplicateCount),
                        (p = w.outOfOrder),
                        (f = w.outOfOrderElements),
                        (u = d),
                        (c = h),
                        p &&
                          (Xp(u, O, f, {
                            action: '__updateRelationsIfNeeded action:add - sorted.update',
                            previousValue: R === Gp ? void 0 : R,
                            source: 'Elements are out of order in ' + e.parent + '.' + r,
                          }),
                          s[r].sort(i.cmp));
                    }
                    if (
                      ((a = R === Gp ? i.update(s[r], O) : i.update(s[r], O, { previousValue: R })),
                      b.config.condensedReplays && !Kp.updateRelationsAdd && Hp(e.parent, r))
                    ) {
                      var I = Wp(u, c, s[r], O, {
                        action: '__updateRelationsIfNeeded action:add - sorted.update',
                        previousValue: R === Gp ? void 0 : R,
                        source: 'There are duplicates in ' + e.parent + '.' + r,
                      });
                      (y = I.logged),
                        (g = I.currCopy),
                        (m = I.counts),
                        (Kp.updateRelationsAdd = y) &&
                          (global.duplicateDebug.updateRelations.add = {
                            beforeElements: u,
                            afterElements: g,
                            counts: m,
                          });
                    }
                  } else s[r].includes(O) || (s[r].push(O), (a = !0));
                s.$$transientAttrs.$$wasUpdatedByRelation ||
                  (s.$$transientAttrs.$$wasUpdatedByRelation = a);
              }
            });
        }
      }),
      (Yp.prototype.ejectAll = function () {
        for (; 0 < this.entitiesList.length; ) this.eject(this.entitiesList[0]);
      }),
      (Yp.prototype.parseAttrs = function (e) {
        var t = this,
          n = ee.a.pickBy(e, function (e) {
            return t.store.isEntity(e) || t.store.isEntityArray(e);
          }),
          r = ee.a.pick(e, this.options.transientAttrs),
          o = ee.a.omit(e, Object.keys(n), this.options.transientAttrs),
          i = this.options.parseAttrs(Ta(o));
        return Bp(Bp(Bp({}, i), n), r);
      }),
      (Yp.prototype.getAll = function () {
        return this.entitiesList;
      }),
      (Yp.prototype.getMulti = function (e) {
        return e.map(this.get);
      }),
      (Yp.prototype.resolveId = function (e) {
        return this.isValidId(e) ? e : e[this.idAttribute];
      }),
      (Yp.prototype.isValidId = function (e) {
        return 'string' == typeof e || 'number' == typeof e;
      }),
      (Yp.prototype.is = function (e) {
        return e && e.$entityClass === this;
      }),
      Yp);
    function Yp(e, t, n) {
      var r = this;
      void 0 === n && (n = {}),
        (this.get = function (e) {
          return r.entitiesById[e] || r.entitiesByServerId[e] || null;
        }),
        (this.options = ee.a.defaultsDeep({}, n, Fp)),
        (this.idAttribute = this.options.idAttribute),
        (this.name = t),
        (this.store = e),
        (this.entitiesById = {}),
        (this.entitiesByServerId = {}),
        (this.entitiesList = []),
        (this.hasManySortFields = null),
        (this.previousHasManySortValues = {}),
        (this.previousServerIds = {}),
        (this.transientAttrsStore = {}),
        this.options.relations && this.__initRelations(),
        this.__initTransientAttrs(),
        Object.assign(this.options.computed, {
          $entityType: { enumerable: !0, value: t, writable: !1 },
          $entityClass: { enumerable: !1, value: this, writable: !1 },
        }),
        (this.options.computed = ee.a.transform(
          this.options.computed,
          function (e, t, n) {
            e[n] = 'function' == typeof t ? { get: t, enumerable: !1 } : t;
          },
          {}
        )),
        (this._computedKeys = _c.a.call(
          Lp.a.call(this.options.computed),
          '$entityType',
          '$entityClass',
          '$$transientAttrs'
        )),
        (this._writablePropertyKeys = vc.a.call(
          xp.a.call(Dp.a.call(this.options.computed), function (e) {
            return e[1].set;
          }),
          ee.a.first
        )),
        (this._relationKeys = dc.a.call(vc.a.call(qh.a.call(this.options.relations), ee.a.keys)));
    }
    Object.assign(Qp.prototype, M.a.prototype);
    function Jp(e, s, a, u) {
      return new (a = a || Promise)(function (n, t) {
        function r(e) {
          try {
            i(u.next(e));
          } catch (e) {
            t(e);
          }
        }
        function o(e) {
          try {
            i(u.throw(e));
          } catch (e) {
            t(e);
          }
        }
        function i(e) {
          var t;
          e.done
            ? n(e.value)
            : ((t = e.value) instanceof a
                ? t
                : new a(function (e) {
                    e(t);
                  })
              ).then(r, o);
        }
        i((u = u.apply(e, s || [])).next());
      });
    }
    function Zp(n, r) {
      var o,
        i,
        s,
        e,
        a = {
          label: 0,
          sent: function () {
            if (1 & s[0]) throw s[1];
            return s[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (e = { next: t(0), throw: t(1), return: t(2) }),
        'function' == typeof Symbol &&
          (e[Symbol.iterator] = function () {
            return this;
          }),
        e
      );
      function t(t) {
        return function (e) {
          return (function (t) {
            if (o) throw new TypeError('Generator is already executing.');
            for (; a; )
              try {
                if (
                  ((o = 1),
                  i &&
                    (s =
                      2 & t[0]
                        ? i.return
                        : t[0]
                        ? i.throw || ((s = i.return) && s.call(i), 0)
                        : i.next) &&
                    !(s = s.call(i, t[1])).done)
                )
                  return s;
                switch (((i = 0), s && (t = [2 & t[0], s.value]), t[0])) {
                  case 0:
                  case 1:
                    s = t;
                    break;
                  case 4:
                    return a.label++, { value: t[1], done: !1 };
                  case 5:
                    a.label++, (i = t[1]), (t = [0]);
                    continue;
                  case 7:
                    (t = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(
                        (s = 0 < (s = a.trys).length && s[s.length - 1]) ||
                        (6 !== t[0] && 2 !== t[0])
                      )
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === t[0] && (!s || (t[1] > s[0] && t[1] < s[3]))) {
                      a.label = t[1];
                      break;
                    }
                    if (6 === t[0] && a.label < s[1]) {
                      (a.label = s[1]), (s = t);
                      break;
                    }
                    if (s && a.label < s[2]) {
                      (a.label = s[2]), a.ops.push(t);
                      break;
                    }
                    s[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                t = r.call(n, a);
              } catch (e) {
                (t = [6, e]), (i = 0);
              } finally {
                o = s = 0;
              }
            if (5 & t[0]) throw t[1];
            return { value: t[0] ? t[1] : void 0, done: !0 };
          })([t, e]);
        };
      }
    }
    var ef =
        ((lf.prototype.defineModel = function (i, e) {
          var s = this;
          if ((void 0 === e && (e = {}), this.models[i])) throw new Error(i + ' already defined');
          (e = Bp(Bp({}, this.options), e)), (this.models[i] = Qp.create(this, i, e));
          var t = this.models[i].options.relations.hasMany;
          return (
            ee.a.isEmpty(t) ||
              ee.a.each(t, function (e, t) {
                var n = e.sortBy,
                  r = e.type,
                  o = s.models[i].__getSorted(n);
                s.__relationsOfHasManyByContainedItem[r] ||
                  (s.__relationsOfHasManyByContainedItem[r] = []),
                  s.__relationsOfHasManyByContainedItem[r].push(
                    Bp(Bp({}, e), { relationKey: t, sorted: o, parent: i })
                  );
              }),
            this.models[i]
          );
        }),
        (lf.prototype.getParentRelationshipsOfModel = function (e) {
          return this.__relationsOfHasManyByContainedItem[e];
        }),
        (lf.prototype.isEntity = function (e) {
          return e && e.$entityClass && e.$entityClass.constructor === Qp;
        }),
        (lf.prototype.isEntityArray = function (e) {
          return e && Array.isArray(e) && e.some(this.isEntity);
        }),
        (lf.prototype.clear = function () {
          ee.a.values(this.models).forEach(function (e) {
            return e.ejectAll();
          });
        }),
        lf),
      tf = function () {
        return (tf =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      nf =
        ((cf.prototype.defineModels = function () {
          var n = this,
            r = {},
            o = tf(tf({}, this.options), { host: this.host, logger: this.logger });
          ee.a.each(i, function (e, t) {
            r[t] = e(n, o);
          }),
            (this.models = r);
        }),
        (cf.prototype.defineModel = function (e, o) {
          return (
            void 0 === o && (o = {}),
            ee.a.defaults(o, { replaceKeys: {}, skipCamelizationForKeys: null }),
            ee.a.defaults(o.replaceKeys, { token: 'id' }),
            this.store.defineModel(
              e,
              tf(tf({}, o), {
                afterInject: function (e) {
                  var t = Date.now();
                  e.$lastModified === t && (t += 1e-5),
                    (e.$lastModified = t),
                    o.afterInject && o.afterInject(e);
                },
                parseAttrs: function (e) {
                  var t;
                  if (ee.a.isEmpty(o.skipCamelizationForKeys)) t = In.camelizeObject(e);
                  else {
                    var n = ee.a.omit(e, o.skipCamelizationForKeys),
                      r = ee.a.pick(e, o.skipCamelizationForKeys);
                    t = tf(tf({}, In.camelizeObject(n)), r);
                  }
                  return (
                    (function (e, t) {
                      for (var n = 0, r = Object.entries(t); n < r.length; n++) {
                        var o = r[n],
                          i = o[0],
                          s = o[1];
                        !(s in e) && i in e && ((e[s] = e[i]), delete e[i]);
                      }
                    })(t, o.replaceKeys),
                    o.parseAttrs && (t = o.parseAttrs(t, e)),
                    t
                  );
                },
              })
            )
          );
        }),
        (cf.prototype.clear = function () {
          this.store.clear();
        }),
        cf),
      rf = d(34).version,
      of = (rf = rf.replace('-dev', '')),
      sf = function () {
        return (sf =
          Object.assign ||
          function (e) {
            for (var t, n = 1, r = arguments.length; n < r; n++)
              for (var o in (t = arguments[n]))
                Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
            return e;
          }).apply(this, arguments);
      },
      af =
        ((uf.prototype._listenToEvents = function () {
          var r = this;
          this.on('signedIn', function (e, t) {
            r.logger.info('signedIn', e.id);
          }),
            this.on('signedOut', function (e) {
              e.resetClient && r.reset();
            }),
            this.on('signUp', function (e) {
              var t = e.user,
                n = e.auth;
              r.logger.info('signUp', t.id), r._setCurrentUser(t), r._setAuth(n);
            }),
            this.events.on('event', function (e) {
              r.emit('event', e), 'bang' === e.type && r._resetLastBang();
            }),
            this.events.on('batch:available', function (e) {
              return r.emit('events:batch:available', e);
            }),
            this.events.on('connected', function () {
              return r.emit('events:connected');
            }),
            this.events.on('disconnected', this._onDisconnected),
            this.events.on('processing:start', function (e) {
              return r.emit('processing:start', e);
            }),
            this.events.on('processing:stop', function (e) {
              return r.emit('processing:stop', e);
            }),
            this.events.on('visibilityChange', function (e, t) {
              return r.emit('visibilityChange', e, t);
            }),
            this.calls.on('answered', function (e) {
              return r.emit('call:answered', e);
            }),
            this.calls.on('ended', function (e) {
              return r.emit('call:ended', e);
            }),
            this.calls.on('incoming', function (e) {
              return r.emit('call:incoming', e);
            }),
            this.calls.on('state', function (e) {
              return r.emit('call:state', e);
            }),
            this.conversations.on('clearTimeline', function (e) {
              return r.emit('conversation:clearTimeline', e);
            }),
            this.conversations.on('clearMessageStatuses', function (e) {
              return r.emit('conversation:clearMessageStatuses', e);
            }),
            this.conversations.on('message', function (e) {
              return r.emit('message', e);
            }),
            this.conversations.on('friends', function (e) {
              return r.emit('friends', e);
            }),
            this.eventSourceClient.on('auth:invalid', function () {
              return r.emit('auth:invalid');
            }),
            this.groups.on('membership:change', function (e) {
              return r.emit('group:membership:change', e);
            }),
            this.httpClient.on('networkStatus:change', function (e) {
              return r.emit('networkStatus:change', e);
            }),
            this.notifications.on('connected', function () {
              return r.emit('notifications:connected');
            }),
            this.notifications.on('disconnected', function (e) {
              return r.emit('notifications:disconnected');
            }),
            this.notifications.on('signingIn', function () {
              return r.emit('notifications:signingIn');
            }),
            this.notifications.on('signedIn', function (e) {
              return r.emit('notifications:signedIn', e);
            }),
            this.notifications.on('signingOut', function (e) {
              return r.emit('notifications:signingOut', e);
            }),
            this.notifications.on('signedOut', function (e) {
              return r.emit('notifications:signedOut', e);
            }),
            this.notifications.on('event', function (e) {
              return r.emit('notifications:event', e);
            }),
            this.notifications.on('message', function (e) {
              return r.emit('notification:message', e);
            }),
            this.notifications.on('unread:change', function (e) {
              return r.emit('notification:unread:change', e);
            }),
            this.organizations.on('preferences:change', function (e) {
              return r.emit('organization:preferences:change', e);
            }),
            this.presence.on('change', function (e) {
              return r.emit('presence:change', e);
            }),
            this.roles.on('change', function (e) {
              return r.emit('role:change', e);
            }),
            this.typingStatus.on('change', function (e) {
              return r.emit('typing:change', e);
            }),
            this.users.on('preferences:change', function (e) {
              return r.emit('user:preferences:change', e);
            }),
            'undefined' != typeof window &&
              window.addEventListener('unload', this._onBrowserUnload);
        }),
        (uf.prototype._startTicker = function () {
          (this.__ticker = setTimeout(this._onTick, 5e3)), (this.__tickerFrame = null);
        }),
        (uf.prototype._stopTicker = function () {
          null !== this.__ticker && (clearTimeout(this.__ticker), (this.__ticker = null)),
            null !== this.__tickerFrame &&
              (U.a.cancel(this.__tickerFrame), (this.__tickerFrame = null));
        }),
        (uf.prototype.signIn = function (u, c, l) {
          return (
            void 0 === l && (l = {}),
            Jp(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a;
              return Zp(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = l.udid),
                      (n = void 0 === t ? q()() : t),
                      (r = l.refreshUser),
                      (o = void 0 === r || r),
                      this.emit('signingIn'),
                      [4, this.users.signIn(u, c, { udid: n })]
                    );
                  case 1:
                    return (
                      (i = e.sent()),
                      (s = i.auth),
                      (a = i.user),
                      this._setCurrentUser(a),
                      this._setAuth(s),
                      o ? [4, this.users.findMe({ bypassCache: !0 })] : [3, 3]
                    );
                  case 2:
                    e.sent(), (e.label = 3);
                  case 3:
                    return this.emit('signedIn', a, s), [2, { auth: s, user: a }];
                }
              });
            })
          );
        }),
        (uf.prototype.signInWithApiKeyAndSecret = function (u, c, l) {
          return (
            void 0 === l && (l = {}),
            Jp(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a;
              return Zp(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = l.udid),
                      (n = void 0 === t ? q()() : t),
                      (r = l.refreshUser),
                      (o = void 0 === r || r),
                      this.emit('signingIn'),
                      [4, this.users.signInWithApiKeyAndSecret(u, c, { udid: n })]
                    );
                  case 1:
                    return (
                      (i = e.sent()),
                      (s = i.auth),
                      (a = i.user),
                      this._setCurrentUser(a),
                      this._setAuth(s),
                      o ? [4, this.users.findMe({ bypassCache: !0 })] : [3, 3]
                    );
                  case 2:
                    e.sent(), (e.label = 3);
                  case 3:
                    return this.emit('signedIn', a, s), [2, { auth: s, user: a }];
                }
              });
            })
          );
        }),
        (uf.prototype.signInWithMagicToken = function (u, c) {
          return (
            void 0 === c && (c = {}),
            Jp(this, void 0, void 0, function () {
              var t, n, r, o, i, s, a;
              return Zp(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = c.udid),
                      (n = void 0 === t ? q()() : t),
                      (r = c.refreshUser),
                      (o = void 0 === r || r),
                      this.emit('signingIn'),
                      [4, this.users.signInWithMagicToken(u, { udid: n })]
                    );
                  case 1:
                    return (
                      (i = e.sent()),
                      (s = i.auth),
                      (a = i.user),
                      this._setCurrentUser(a),
                      this._setAuth(s),
                      o ? [4, this.users.findMe({ bypassCache: !0 })] : [3, 3]
                    );
                  case 2:
                    e.sent(), (e.label = 3);
                  case 3:
                    return this.emit('signedIn', a, s), [2, { auth: s, user: a }];
                }
              });
            })
          );
        }),
        (uf.prototype.signOut = function (e) {
          var t = void 0 === e ? {} : e,
            n = t.async,
            r = void 0 === n || n,
            o = t.fromServer,
            i = void 0 !== o && o,
            s = t.resetClient,
            a = void 0 === s || s;
          if (!this.isSignedIn) return Promise.resolve(!1);
          if (!r && 'undefined' == typeof XMLHttpRequest)
            throw new Error(
              '`async: false` option cannot be set unless using signOut() in a browser'
            );
          if ((this.events.disconnect({ source: 'On sign out' }), r))
            return this.users.signOut({ fromServer: i, resetClient: a });
          this.emit('signingOut', { fromServer: i, resetClient: a });
          var u = new XMLHttpRequest();
          u.open('POST', this.config.baseUrl + '/v2/logout', !1);
          for (var c = 0, l = Object.entries(this.httpClient.getAuthHeaders()); c < l.length; c++) {
            var d = l[c],
              h = d[0],
              p = d[1];
            u.setRequestHeader(h, p);
          }
          return (
            u.send(null),
            this.emit('signedOut', { fromServer: i, resetClient: a, signedOut: !0 }),
            Promise.resolve(!0)
          );
        }),
        (uf.prototype.signOutAllDevices = function (e) {
          var t = (void 0 === e ? {} : e).async,
            n = void 0 === t || t;
          if (!this.isSignedIn) return Promise.resolve();
          if (!n && 'undefined' == typeof XMLHttpRequest)
            throw new Error(
              '`async: false` option cannot be set unless using signOutAllDevices() in a browser'
            );
          if (n) return this.users.signOutAllDevices();
          var r = new XMLHttpRequest();
          r.open('POST', this.config.baseUrl + '/v2/wipe?token=' + this.currentUserId, !1);
          for (var o = 0, i = Object.entries(this.httpClient.getAuthHeaders()); o < i.length; o++) {
            var s = i[o],
              a = s[0],
              u = s[1];
            r.setRequestHeader(a, u);
          }
          return r.send(null), Promise.resolve();
        }),
        (uf.prototype.authenticate = function (t, n) {
          return Jp(this, void 0, void 0, function () {
            return Zp(this, function (e) {
              switch (e.label) {
                case 0:
                  return [4, this._authenticateWithParams({ key: t, secret: n })];
                case 1:
                  return [2, e.sent()];
              }
            });
          });
        }),
        (uf.prototype.authenticateUsingOauth = function (r, o) {
          return (
            void 0 === o && (o = { udid: void 0 }),
            Jp(this, void 0, void 0, function () {
              var t, n;
              return Zp(this, function (e) {
                switch (e.label) {
                  case 0:
                    return (
                      (t = o.udid),
                      (n = void 0 === t ? q()() : t),
                      [4, this._authenticateWithParams({ bearerToken: r, udid: n })]
                    );
                  case 1:
                    return [2, e.sent()];
                }
              });
            })
          );
        }),
        (uf.prototype._authenticateWithParams = function (r) {
          return Jp(this, void 0, void 0, function () {
            var t, n;
            return Zp(this, function (e) {
              switch (e.label) {
                case 0:
                  this._setAuth(r), (e.label = 1);
                case 1:
                  return e.trys.push([1, 3, , 4]), [4, this.users.findMe()];
                case 2:
                  return (
                    (t = e.sent()), this._setCurrentUser(t), this.emit('signedIn', t, r), [2, t]
                  );
                case 3:
                  throw ((n = e.sent()), this._removeAuth(), (this._currentUser = null), n);
                case 4:
                  return [2];
              }
            });
          });
        }),
        (uf.prototype._setCurrentUser = function (e) {
          this._currentUser = e;
        }),
        (uf.prototype._setAuth = function (e) {
          (this._auth = e), this.httpClient.setAuth(e), this.events.setAuth(e);
        }),
        (uf.prototype._removeAuth = function () {
          (this._auth = null), this.httpClient.removeAuth(), this.events.removeAuth();
        }),
        (uf.prototype.getCurrentUser = function () {
          return this._currentUser || null;
        }),
        Object.defineProperty(uf.prototype, 'currentUser', {
          get: function () {
            return this.getCurrentUser();
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(uf.prototype, 'currentUserId', {
          get: function () {
            var e = this.getCurrentUser();
            return e ? e.id : null;
          },
          enumerable: !1,
          configurable: !0,
        }),
        (uf.prototype.getAuth = function () {
          return this._auth;
        }),
        Object.defineProperty(uf.prototype, 'isSignedIn', {
          get: function () {
            return !!this.getAuth();
          },
          enumerable: !1,
          configurable: !0,
        }),
        (uf.prototype.requireUser = function () {
          if (!this.isSignedIn) throw new K();
        }),
        (uf.prototype.reactToAdvisoryEvent = function (e, t) {
          switch ((this.emit('advisory', { type: e, data: t }), e)) {
            case 'replayStart':
              (this.currentlyServingOfflineMessages = !0),
                this.emit('messages:offline:start', t),
                this.products._addProcessingEvent({
                  actionType: _i.MESSAGE_REPLAY,
                  entity: this.products.getAll()[0],
                  itemsEstimate: t.replayMessageCount,
                });
              break;
            case 'replayStop':
              null === this._checkBangTimer &&
                (this.emit('groups:offline:start'), this._startBangTimer()),
                this.products._removeProcessingEvent({
                  actionType: _i.MESSAGE_REPLAY,
                  entity: this.products.getAll()[0],
                });
          }
        }),
        Object.defineProperty(uf.prototype, 'MODEL_BY_TYPE_NS', {
          get: function () {
            return (
              this._MODEL_BY_TYPE_NS ||
                (this._MODEL_BY_TYPE_NS = {
                  'tigertext:entity:account': this.models.User,
                  'tigertext:entity:group': this.models.Group,
                  'tigertext:entity:distribution_list': this.models.DistributionList,
                  'tigertext:entity:dist_list_member': this.models.User,
                  'tigertext:entity:list': this.models.DistributionList,
                  'tigertext:entity:message_template': this.models.MessageTemplate,
                  'tigertext:entity:patient_distribution_list': this.models.DistributionList,
                  'tigertext:entity:schedule_message': this.models.ScheduledMessage,
                  'tigertext:entity:tag': this.models.RoleTag,
                  'tigertext:entity:team': this.models.Team,
                  'tigertext:iq:message': this.models.Message,
                  'tigertext:iq:group_message': this.models.Message,
                  'tigertext:iq:group:message': this.models.Message,
                }),
              this._MODEL_BY_TYPE_NS
            );
          },
          enumerable: !1,
          configurable: !0,
        }),
        (uf.prototype.modelByTypeNS = function (e) {
          return this.MODEL_BY_TYPE_NS[e];
        }),
        (uf.prototype.modelNameByTypeNS = function (e) {
          var t = this.MODEL_BY_TYPE_NS[e];
          return t ? t.name : (k()(t, 'modelNameByTypeNS: Missing class for ' + e), null);
        }),
        (uf.prototype.modelNameByEntityType = function (e) {
          var t = this.modelsByEntityType[e] || this.MODEL_BY_TYPE_NS[e];
          if (t) return t.name;
          k()(t, 'modelNameByEntityType: Missing class for ' + e);
        }),
        (uf.prototype.ejectModel = function (e, t) {
          void 0 === t && (t = e.xmlns || e.type);
          var n = this.MODEL_BY_TYPE_NS[t] || this.modelsByEntityType[t];
          if (n) return n.eject(e);
          k()(n, 'ejectModel: Missing class for ' + t);
        }),
        (uf.prototype.injectModel = function (e, t) {
          void 0 === t && (t = e.xmlns || e.type);
          var n = this.MODEL_BY_TYPE_NS[t] || this.modelsByEntityType[t];
          return n ? n.inject(e) : (k()(n, 'injectModel: Missing class for ' + t), null);
        }),
        (uf.prototype.injectPlaceholderModel = function (e, t) {
          void 0 === t && (t = e.xmlns || e.type);
          var n = this.modelByTypeNS(t) || this.modelsByEntityType[t];
          return n
            ? n.injectPlaceholder(e)
            : (k()(n, 'injectPlaceholderModel: Missing class for ' + t), null);
        }),
        (uf.prototype.getEntity = function (e, t) {
          return this.modelsByEntityType[e].get(t);
        }),
        (uf.prototype.getEntities = function (e) {
          var t = this;
          return e.map(function (e) {
            return t.getEntity(e.type, e.id);
          });
        }),
        (uf.prototype.dispose = function () {
          this._stopTicker(),
            (this.conversationsLoaded = !1),
            null !== this._checkBangTimer &&
              (clearTimeout(this._checkBangTimer), (this._checkBangTimer = null));
          for (var e = 0, t = this._services; e < t.length; e++) {
            var n = t[e];
            n.dispose && n.dispose();
          }
          this.store && this.store.clear();
        }),
        (uf.prototype.reset = function () {
          this.dispose();
          for (var e = 0, t = this._services; e < t.length; e++) {
            var n = t[e];
            n.mounted && n.mounted();
          }
          this._startTicker();
        }),
        (uf.prototype.configure = function (e) {
          return Object.assign(this.config, e), this.httpClient.mounted(), this;
        }),
        (uf.prototype.setDefaultOrganization = function (e) {
          return this.configure({ defaultOrganizationId: e });
        }),
        Object.defineProperty(uf.prototype, 'networkStatus', {
          get: function () {
            return this.httpClient.networkStatus;
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(uf.prototype, 'forgotPasswordUrl', {
          get: function () {
            return Vo.FORGOT_PASSWORD_URLS[this.config.apiEnv];
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(uf.prototype, 'adminUrl', {
          get: function () {
            return this.config.adminFeatureBranch
              ? '/feature/' + this.config.adminFeatureBranch + '/app/admin'
              : this.config.localAdminUrl
              ? this.config.localAdminUrl
              : Vo.ADMIN_URLS[this.config.apiEnv];
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(uf.prototype, 'cnUrl', {
          get: function () {
            return this.config.localCnUrl ? this.config.localCnUrl : Vo.CN_URLS[this.config.apiEnv];
          },
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperty(uf.prototype, 'rolesUrl', {
          get: function () {
            return this.config.rolesFeatureBranch
              ? '/feature/' + this.config.rolesFeatureBranch + '/app/roles/index.html'
              : this.config.localRolesUrl
              ? this.config.localRolesUrl
              : Vo.ROLES_URLS[this.config.apiEnv];
          },
          enumerable: !1,
          configurable: !0,
        }),
        (uf.CONSUMER_ORGANIZATION_ID = Vo.CONSUMER_ORGANIZATION_ID),
        (uf.errors = m),
        (uf.VERSION = of),
        (uf.version = of),
        uf);
    function uf(e) {
      var n = this;
      void 0 === e && (e = {}),
        (this.errors = m),
        (this.VERSION = of),
        (this.version = of),
        (this._onBrowserUnload = function () {
          var r = [];
          n.emit('browserUnload', function (e, t, n) {
            return r.push({ fn: e, priority: t, name: n });
          }),
            ee.a.orderBy(r, ['priority'], ['desc']).forEach(function (e) {
              var t = e.fn,
                n = e.priority,
                r = e.name;
              console.log('[unload]', n, r), t();
            });
        }),
        (this._onDisconnected = function (e) {
          var t = e.isRecoverable;
          t || n._removeAuth(), n.emit('events:disconnected', { isRecoverable: t });
        }),
        (this._onTick = function () {
          n.__tickerFrame = U()(function () {
            try {
              n.emit('tick');
            } finally {
              n.__ticker = setTimeout(n._onTick, 5e3);
            }
          });
        }),
        (this._resetLastBang = function () {
          n._bangOccurredDuringReplay = !0;
        }),
        (this._startBangTimer = function () {
          (n._bangOccurredDuringReplay = !1),
            (n._checkBangTimer = setTimeout(n._didBangOccur, n.config.detectBangReplayTimeout));
        }),
        (this._didBangOccur = function () {
          n._bangOccurredDuringReplay
            ? n._startBangTimer()
            : ((n._checkBangTimer = null), n._bangReplayDone());
        }),
        (this._bangReplayDone = function () {
          n.currentlyServingOfflineMessages &&
            ((n.currentlyServingOfflineMessages = !1),
            n.emit('conversations:loading:start'),
            n.conversations.hasPendingReloads() && n.conversations.__flushConversationsToReload(),
            n.emit('groups:offline:stop'),
            n.emit('messages:offline:stop'),
            n.emit('conversations:loading:stop'),
            n.emit('messages:new:start'));
        }),
        (this.config = Object.assign({}, e)),
        ee.a.defaultsDeep(this.config, Vo.CONFIG_DEFAULT);
      var t = this.config,
        r = t.apiEnv,
        o = t.logLevel;
      (this.config.cloudfront = Vo.CLOUDFRONT[r]),
        /(env\d+|lt\d*)/.test(r) &&
          ((this.config.cloudfront = Vo.CLOUDFRONT.development),
          (Vo.BASE_URLS[this.config.apiEnv] = 'https://' + r + '-devapi.tigertext.xyz'),
          (Vo.FORGOT_PASSWORD_URLS[this.config.apiEnv] = 'https://' + r + '-forget.tigertext.com'),
          (Vo.CN_URLS[this.config.apiEnv] = 'https://' + r + '-console.tigertext.xyz'),
          (Vo.ADMIN_URLS[this.config.apiEnv] = Vo.CN_URLS[r] + '/app/admin'),
          (Vo.ROLES_URLS[this.config.apiEnv] = '/' + r + '/app/roles/index.html')),
        this.config.baseUrl || (this.config.baseUrl = Vo.BASE_URLS[r]),
        (this.config.autoSignOutOnBrowserUnload = !1),
        Object.assign(this, { attachments: O, date: T, email: _, file: E, phone: b }),
        (this.httpClient = new fa({
          config: this.config,
          logger: new Ho({ name: 'HttpClient', level: o }),
        })),
        (this.eventSourceClient = new Es({
          config: this.config,
          httpClient: this.httpClient,
          logger: new Ho({ name: 'EventSourceClient', level: o }),
        })),
        (this.enums = sf(sf({}, I), { NetworkStatus: Os })),
        (this.store = new nf(this, { logger: new Ho({ name: 'Store', level: o }) })),
        this.store.defineModels(),
        (this.models = this.store.models),
        (this.modelsByEntityType = ee.a.mapKeys(this.store.models, function (e, t) {
          return In.camelizeKey(t);
        })),
        (this.modelsByEntityType.account = this.modelsByEntityType.user),
        (this.modelsByEntityType.list = this.modelsByEntityType.distributionList),
        (this.allModelEntityTypes = Object.keys(this.modelsByEntityType)),
        (this.logger = new Ho({ name: 'TigerConnectClient', level: o })),
        (this.api = {});
      for (var i = 0, s = Object.entries(w); i < s.length; i++) {
        var a = s[i],
          u = a[0],
          c = a[1],
          l = In.camelizeKey(u);
        this.api[l] = new c(this, { logger: new Ho({ name: u + 'API', level: o }) });
      }
      this._services = [];
      for (var d = 0, h = Object.entries(R); d < h.length; d++) {
        var p = h[d],
          f = p[0],
          v =
            ((c = p[1]),
            (l = In.camelizeKey(f)),
            new c(this, {
              logger: new Ho({ name: f + 'Service', level: this.config.serviceLogLevels[l] || o }),
            }));
        (this[l] = v), this._services.push(v);
      }
      for (var y = 0, g = this._services; y < g.length; y++) (v = g[y]).mounted && v.mounted();
      this._listenToEvents(),
        this._startTicker(),
        this.on('browserUnload', function (e) {
          return e(
            function () {
              n.config.autoSignOutOnBrowserUnload &&
                (n.notifications.disconnect({ source: 'On browser unload' }),
                n.signOut({ async: !1, resetClient: !1 }));
            },
            100,
            'signOut'
          );
        }),
        (this._checkBangTimer = null),
        (this.conversationsLoaded = !1),
        (this.currentlyServingOfflineMessages = !1);
    }
    function cf(e, t) {
      void 0 === t && (t = {});
      var n = t.logger,
        r = (function (e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
          if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
            var o = 0;
            for (r = Object.getOwnPropertySymbols(e); o < r.length; o++)
              t.indexOf(r[o]) < 0 &&
                Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
                (n[r[o]] = e[r[o]]);
          }
          return n;
        })(t, ['logger']);
      (this.host = e),
        (this.options = r),
        (this.logger = n),
        (this.store = new ef(tf(tf({}, r), { host: e, logger: n }))),
        (this.store.host = e);
    }
    function lf(e) {
      var i = this;
      void 0 === e && (e = {}),
        (this.options = e),
        (this.models = {}),
        (this.__relationsOfHasManyByContainedItem = {}),
        ['filter', 'get', 'getAll', 'inject', 'injectPlaceholder', 'is', 'resolveId'].forEach(
          function (o) {
            i[o] = function (e) {
              for (var t, n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];
              return (t = i.models[e])[o].apply(t, n);
            };
          }
        );
    }
    Object.assign(af.prototype, M.a.prototype);
  },
]);
