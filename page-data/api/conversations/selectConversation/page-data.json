{"componentChunkName":"component---src-templates-docs-js","path":"/api/conversations/selectConversation","webpackCompilationHash":"a669c454a7fb87295f51","result":{"data":{"site":{"siteMetadata":{"title":"SDK Documentation | TigerConnect"}},"mdx":{"fields":{"id":"53eae28a-3bb2-53ba-9b20-a77bf203aedb","title":"conversations.selectConversation()","slug":"/api/conversations/selectConversation"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"conversations.selectConversation()\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversations.selectConversation()\"), \" method, given a conversation ID and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minItemsToFetch\"), \" parameter, calls \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/api/conversations/fetchTimeline\"\n  }), \"client.conversations.fetchTimeline()\"), \" repeatedly until at least that number of timeline items are loaded into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.timeline\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.timeline\"), \" array includes all messages and bangs that were fetched for the conversation.\"), mdx(\"p\", null, \"This method will load messages first in the higher direction using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.higherContinuation\"), \" and then in the lower direction using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.lowerContinuation\"), \" as needed to fulfill the desired minimum value.\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"markAsRead=true\"), \" is supplied, the messages will appear to be Read immediately (we call this the \\\"optimistic status\\\"), and then a server call will be made, and then the results of the server call will be reconciled with that optimistic status.\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetchAllItems=true\"), \" is supplied, then all unexpired messages will be fetched for the conversation, this will be defaulted to false.\"), mdx(\"p\", null, \"Please note that in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/models/conversation\"\n  }), \"Conversation\"), \" models affected by these calls, the values of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.lowerContinuation.itemsEstimate\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.higherContinuation.itemsEstimate\"), \" will only be either \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0\"), \" (which means \\\"no more messages are in this direction\\\") or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \" (which means \\\"one or more messages may be present in this direction\\\"). If exactly \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"maxItems\"), \" number of messages are fetched in the conversation, it is possible that the SDK may return \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \" even if there are no more messages left, in which case the next attempt to follow the continuation in that direction will yield no messages and change the value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itemsEstimate\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0\"), \"; the SDK makes an attempt to minimize the number of cases where this can happen.\"), mdx(\"h3\", {\n    \"id\": \"definition\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#definition\",\n    \"aria-label\": \"definition permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Definition\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"await client.conversations.selectConversation(\\n  conversationId: string|Conversation,\\n  options: ?Object\\n):Promise<Object,Error>\\n\")), mdx(\"h3\", {\n    \"id\": \"parameters\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#parameters\",\n    \"aria-label\": \"parameters permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Parameters\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"conversationId\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\"), \"|\", mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"/js-sdk/models/conversation\"\n  }), \"Conversation\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"A conversation ID\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"options\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?Object\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Options (described below)\")))), mdx(\"h4\", {\n    \"id\": \"options\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#options\",\n    \"aria-label\": \"options permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Options\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"anchorPoint = FIRST_UNREAD_ITEM\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Anchor the results to the unread conversation item with the lowest sortNumber in that conversation.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"anchorPoint = CONVERSATION_END\"), \" (default)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?string\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Anchor the results to the end of the conversation and provide a page of results which end with the last item of the conversation\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fetchAllItems = false\"), \" (default)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Call \", mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"/js-sdk/api/conversations/fetchTimeline\"\n  }), \"client.conversations.fetchTimeline()\"), \" repeatedly until all messages are returned\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"markAsDelivered\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Whether to automatically mark fetched items as Delivered (default: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \"). At this time, the parameter is ignored, and the fetched messages will always be marked as Delivered. Please contact your TigerConnect support representative if you are interested in being able to fetch messages without automatically marking them as Delivered.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"markAsRead\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Whether to automatically mark fetched items as Read (default: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"), \"); when this and \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"markAsDelivered\"), \" are both true, fetched items will be marked as Read instead of Delivered.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"maxItemsPerBatch\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?number\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"How many items to retrieve (default: the value of the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"minItemsToFetch\"), \" argument) for each \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fetchTimeline()\"), \" call\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"minItemsToFetch\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"?number\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Call \", mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"/js-sdk/api/conversations/fetchTimeline\"\n  }), \"client.conversations.fetchTimeline()\"), \" repeatedly until at least this many items (default: 20) are returned\")))), mdx(\"h3\", {\n    \"id\": \"returns\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#returns\",\n    \"aria-label\": \"returns permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Returns\"), mdx(\"p\", null, \"The function returns a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Promise\"), \" with an object containing the number of items that were added to the Timeline and a message object which represents the previous first unread message. This function will also assign \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.lowerContinuation\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"conversation.higherContinuation\"), \", you can find the description for those fields in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/models/conversation\"\n  }), \"Conversation model\"), \".\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"addedMessages\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Number of items that were added to the Timeline\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"previousFirstUnreadMessage\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"a\", _extends({\n    parentName: \"td\"\n  }, {\n    \"href\": \"/js-sdk/models/message\"\n  }), \"Message\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"A message model representing the firstUnreadMessage before all messages in this conversation are marked as 'Read'\")))), mdx(\"h3\", {\n    \"id\": \"examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conversation.timeline = []\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Messages 1, 2, 3 are Read\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Message 4, 5, 6, 7, 8, 9, 10 are New\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const {\\n  addedMessages,\\n  previousFirstUnreadMessage\\n} = await client.conversations.selectConversation(\\n  conversationId,\\n  {\\n    anchorPoint: 'FIRST_UNREAD_ITEM',\\n    minItemsToFetch: 8\\n  }\\n);\\nconsole.log(`added ${addedMessages} messages to the conversation`);\\n\\nconst conversation = client.conversations.getById(conversationId);\\nif (conversation.lowerContinuation.itemsEstimate > 0) {\\n  console.log('there may be more messages in the lower (historical) direction');\\n}\\nif (conversation.higherContinuation.itemsEstimate > 0) {\\n  console.log('there may be more messages in the higher (future) direction');\\n}\\n\")), mdx(\"p\", null, \"Result:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conversation.timeline = \", \"[3, 4, 5, 6, 7, 8, 9, 10]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This could also include more messages, depending on implementation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conversation.lowerContinuation.continuation = \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lower_continuation_A\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conversation.lowerContinuation.itemsEstimate = 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conversation.higherContinuation.continuation = \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"higher_continuation_B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conversation.higherContinuation.itemsEstimate = 0\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#definition","title":"Definition"},{"url":"#parameters","title":"Parameters","items":[{"url":"#options","title":"Options"}]},{"url":"#returns","title":"Returns"},{"url":"#examples","title":"Examples"}]},"parent":{"__typename":"File","relativePath":"api/conversations/selectConversation.mdx"},"frontmatter":{"title":"conversations.selectConversation()","metaTitle":"","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/debugging","title":"Debugging"}}},{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/events","title":"Events Reference"}}},{"node":{"fields":{"slug":"/api","title":"API Reference"}}},{"node":{"fields":{"slug":"/models","title":"Models Reference"}}},{"node":{"fields":{"slug":"/quickstart/android","title":"Android SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/quickstart","title":"Quick Start Guides"}}},{"node":{"fields":{"slug":"/","title":"TigerConnect SDK Documentation"}}},{"node":{"fields":{"slug":"/models/attachment","title":"Attachment Model"}}},{"node":{"fields":{"slug":"/quickstart/ios","title":"iOS SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/models/conversation","title":"Conversation Model"}}},{"node":{"fields":{"slug":"/quickstart/js","title":"JS SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/models/distributionList","title":"DistributionList Model"}}},{"node":{"fields":{"slug":"/models/group","title":"Group Model"}}},{"node":{"fields":{"slug":"/models/metadata","title":"Metadata Model"}}},{"node":{"fields":{"slug":"/models/messageStatusPerRecipient","title":"MessageStatusPerRecipient Model"}}},{"node":{"fields":{"slug":"/models/patientContact","title":"Patient Contact Model"}}},{"node":{"fields":{"slug":"/models/organization","title":"Organization Model"}}},{"node":{"fields":{"slug":"/models/role","title":"Role Model"}}},{"node":{"fields":{"slug":"/quickstart/js/getting-inbox","title":"Getting Inbox with the JS SDK"}}},{"node":{"fields":{"slug":"/models/user","title":"User Model"}}},{"node":{"fields":{"slug":"/models/patient","title":"Patient Model"}}},{"node":{"fields":{"slug":"/quickstart/js/do-not-disturb","title":"Do Not Disturb on the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/groups","title":"Groups and the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/logging-in","title":"Logging In with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/installation","title":"How to Install the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/messages","title":"Messages and the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/logging-out","title":"Logging Out with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/getting-inbox","title":"Getting the Inbox with the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/processing-events","title":"Processing Events in the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/model-lifecycle","title":"Model Lifecycle of the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/realtime-updates","title":"Realtime Updates with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/logging-in","title":"How to Log In to the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/logging-out","title":"How to Log Out of the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/installation","title":"How to Install the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/getting-inbox","title":"Getting the Inbox with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/messages","title":"Messages and the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/realtime-updates","title":"Realtime Updates with the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/groups","title":"Groups and Forums with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/installation","title":"How to Install the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/logging-in","title":"Logging In with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/logging-out","title":"Logging Out with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/messages","title":"Messages and the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/realtime-updates","title":"Realtime Updates with the Android SDK"}}},{"node":{"fields":{"slug":"/events/conversations-loading-start","title":"Event: \"conversations:loading:start\""}}},{"node":{"fields":{"slug":"/events/group-membership-change","title":"Event: \"group:membership:change\""}}},{"node":{"fields":{"slug":"/events/conversations-loading-stop","title":"Event: \"conversations:loading:stop\""}}},{"node":{"fields":{"slug":"/events/messages-offline-start","title":"Event: \"messages:offline:start\""}}},{"node":{"fields":{"slug":"/events/messages-offline-stop","title":"Event: \"messages:offline:stop\""}}},{"node":{"fields":{"slug":"/events/typing-change","title":"Event: \"typing:change\""}}},{"node":{"fields":{"slug":"/events/signedIn","title":"Event: \"signedIn\""}}},{"node":{"fields":{"slug":"/quickstart/js/messages/expiration","title":"Message Expiration"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/forwarding","title":"How to Forward Messages"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/priority-messages","title":"How to Send A Priority Message"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/sending-attachments","title":"How to Send Messages with Attachments"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/sending","title":"How to Send Messages"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/statuses","title":"How to Determine Message Status Text"}}},{"node":{"fields":{"slug":"/api/client","title":"Client"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/unread-counts","title":"How to Determine Unread Message Counts on the Conversation and Entire Inbox"}}},{"node":{"fields":{"slug":"/api/conversations","title":"Conversations"}}},{"node":{"fields":{"slug":"/__examples/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/debugging/client-events","title":"Debugging client.events"}}},{"node":{"fields":{"slug":"/api/forums","title":"Forums"}}},{"node":{"fields":{"slug":"/api/events","title":"Events"}}},{"node":{"fields":{"slug":"/api/groups","title":"Groups"}}},{"node":{"fields":{"slug":"/api/messages","title":"Messages"}}},{"node":{"fields":{"slug":"/api/organizations","title":"Organizations"}}},{"node":{"fields":{"slug":"/api/search","title":"Search"}}},{"node":{"fields":{"slug":"/api/metadata","title":"Metadata"}}},{"node":{"fields":{"slug":"/api/typingStatus","title":"Typing Status"}}},{"node":{"fields":{"slug":"/api/typingStatus/startTyping","title":"typingStatus.startTyping()"}}},{"node":{"fields":{"slug":"/api/users","title":"Users"}}},{"node":{"fields":{"slug":"/api/users/find","title":"users.find()"}}},{"node":{"fields":{"slug":"/api/typingStatus/stopTyping","title":"typingStatus.stopTyping()"}}},{"node":{"fields":{"slug":"/api/users/checkLogin","title":"users.checkLogin()"}}},{"node":{"fields":{"slug":"/api/users/findMyProfilesForAllOrganizations","title":"users.findMyProfilesForAllOrganizations()"}}},{"node":{"fields":{"slug":"/api/users/findMe","title":"users.findMe()"}}},{"node":{"fields":{"slug":"/api/users/removeAutoForward","title":"users.removeAutoForward()"}}},{"node":{"fields":{"slug":"/api/users/setAutoForward","title":"users.setAutoForward()"}}},{"node":{"fields":{"slug":"/api/users/update","title":"users.update()"}}},{"node":{"fields":{"slug":"/api/metadata/find","title":"metadata.find()"}}},{"node":{"fields":{"slug":"/api/search/query","title":"search.query()"}}},{"node":{"fields":{"slug":"/api/patients/update","title":"patients.update()"}}},{"node":{"fields":{"slug":"/api/metadata/findMulti","title":"metadata.findMulti()"}}},{"node":{"fields":{"slug":"/api/metadata/update","title":"metadata.update()"}}},{"node":{"fields":{"slug":"/api/metadata/fullUpdate","title":"metadata.fullUpdate()"}}},{"node":{"fields":{"slug":"/api/organizations/findAll","title":"organizations.findAll()"}}},{"node":{"fields":{"slug":"/api/organizations/find","title":"organizations.find()"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachment","title":"messages.downloadAttachment()"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachmentUrl","title":"messages.downloadAttachmentUrl()"}}},{"node":{"fields":{"slug":"/api/messages/endPreviewMessage","title":"messages.endPreviewMessage()"}}},{"node":{"fields":{"slug":"/api/patients/create","title":"patients.create()"}}},{"node":{"fields":{"slug":"/api/messages/ensureRecipientStatus","title":"messages.ensureRecipientStatus()"}}},{"node":{"fields":{"slug":"/api/messages/findAttachment","title":"messages.findAttachment()"}}},{"node":{"fields":{"slug":"/api/messages/_sendMessageOptions","title":"Common Message Options"}}},{"node":{"fields":{"slug":"/api/messages/findRecipientStatus","title":"messages.findRecipientStatus()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToConversation","title":"messages.forwardToConversation()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToDistributionList","title":"messages.forwardToDistributionList()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToGroup","title":"messages.forwardToGroup()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToGroupOfUsers","title":"messages.forwardToGroupOfUsers()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToRole","title":"messages.forwardToRole()"}}},{"node":{"fields":{"slug":"/api/messages/previewMessage","title":"messages.previewMessage()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToUser","title":"messages.forwardToUser()"}}},{"node":{"fields":{"slug":"/api/messages/recall","title":"messages.recall()"}}},{"node":{"fields":{"slug":"/api/messages/resend","title":"messages.resend()"}}},{"node":{"fields":{"slug":"/api/messages/sendToConversation","title":"messages.sendToConversation()"}}},{"node":{"fields":{"slug":"/api/messages/retrySend","title":"messages.retrySend()"}}},{"node":{"fields":{"slug":"/api/messages/sendToGroup","title":"messages.sendToGroup()"}}},{"node":{"fields":{"slug":"/api/messages/sendToDistributionList","title":"messages.sendToDistributionList()"}}},{"node":{"fields":{"slug":"/api/messages/sendToRole","title":"messages.sendToRole()"}}},{"node":{"fields":{"slug":"/api/messages/sendToGroupOfUsers","title":"messages.sendToGroupOfUsers()"}}},{"node":{"fields":{"slug":"/api/messages/sendToUser","title":"messages.sendToUser()"}}},{"node":{"fields":{"slug":"/api/groups/addMember","title":"groups.addMember()"}}},{"node":{"fields":{"slug":"/api/groups/create","title":"groups.create()"}}},{"node":{"fields":{"slug":"/api/groups/addMembers","title":"groups.addMembers()"}}},{"node":{"fields":{"slug":"/api/groups/destroy","title":"groups.destroy()"}}},{"node":{"fields":{"slug":"/api/groups/find","title":"groups.find()"}}},{"node":{"fields":{"slug":"/api/groups/findAll","title":"groups.findAll()"}}},{"node":{"fields":{"slug":"/api/groups/leave","title":"groups.leave()"}}},{"node":{"fields":{"slug":"/api/groups/removeMember","title":"groups.removeMember()"}}},{"node":{"fields":{"slug":"/api/groups/removeMembers","title":"groups.removeMembers()"}}},{"node":{"fields":{"slug":"/api/forums/create","title":"forums.create()"}}},{"node":{"fields":{"slug":"/api/forums/find","title":"forums.find()"}}},{"node":{"fields":{"slug":"/api/groups/update","title":"groups.update()"}}},{"node":{"fields":{"slug":"/api/forums/findAll","title":"forums.findAll()"}}},{"node":{"fields":{"slug":"/api/forums/join","title":"forums.join()"}}},{"node":{"fields":{"slug":"/api/conversations/find","title":"conversations.find()"}}},{"node":{"fields":{"slug":"/api/events/connect","title":"events.connect()"}}},{"node":{"fields":{"slug":"/api/conversations/findAll","title":"conversations.findAll()"}}},{"node":{"fields":{"slug":"/api/conversations/markAsDelivered","title":"conversations.markAsDelivered()"}}},{"node":{"fields":{"slug":"/api/conversations/markAsRead","title":"conversations.markAsRead()"}}},{"node":{"fields":{"slug":"/api/conversations/fetchTimeline","title":"conversations.fetchTimeline()"}}},{"node":{"fields":{"slug":"/api/conversations/mute","title":"conversations.mute()"}}},{"node":{"fields":{"slug":"/api/conversations/remove","title":"conversations.remove()"}}},{"node":{"fields":{"slug":"/api/conversations/unmuteAll","title":"conversations.unmuteAll()"}}},{"node":{"fields":{"slug":"/api/client/authenticate","title":"client.authenticate()"}}},{"node":{"fields":{"slug":"/api/conversations/selectConversation","title":"conversations.selectConversation()"}}},{"node":{"fields":{"slug":"/api/conversations/unmute","title":"conversations.unmute()"}}},{"node":{"fields":{"slug":"/api/client/authenticateUsingOauth","title":"client.authenticateUsingOauth()"}}},{"node":{"fields":{"slug":"/api/client/signIn","title":"client.signIn()"}}},{"node":{"fields":{"slug":"/api/client/signInWithApiKeyAndSecret","title":"client.signInWithApiKeyAndSecret()"}}},{"node":{"fields":{"slug":"/api/client/signOut","title":"client.signOut()"}}},{"node":{"fields":{"slug":"/api/client/signOutAllDevices","title":"client.signOutAllDevices()"}}},{"node":{"fields":{"slug":"/api/client/initialize-client","title":"Initializing Client"}}},{"node":{"fields":{"slug":"/models/message","title":"Message Model"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"53eae28a-3bb2-53ba-9b20-a77bf203aedb"}}}