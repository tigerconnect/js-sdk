{"componentChunkName":"component---src-templates-docs-js","path":"/quickstart/js/messages/statuses","result":{"data":{"site":{"siteMetadata":{"title":"SDK Documentation | TigerConnect"}},"mdx":{"fields":{"id":"e2bd324a-5a1b-5834-8b09-fa06b66ae7b5","title":"How to Determine Message Status Text","slug":"/quickstart/js/messages/statuses"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Determine Message Status Text\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Overview\"), mdx(\"p\", null, \"When displaying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Delivered\"), \" / \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Read\"), \" status text on a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/models/message\"\n  }), \"Message\"), \", there are a few different fields which help to manage this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message.statusesPerRecipient\"), \": This is a list of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/models/messageStatusPerRecipient\"\n  }), \"MessageStatusPerRecipient\"), \" objects. Each one contains an intended recipient of the message and also their individual message status.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message.shouldEnsureRecipientStatus\"), \": If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message.statusesPerRecipient\"), \" information might not yet be fully populated for every member of the conversation.\"))), mdx(\"h3\", {\n    \"id\": \"p2p-conversations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#p2p-conversations\",\n    \"aria-label\": \"p2p conversations permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"P2P Conversations\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message.shouldEnsureRecipientStatus\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \", and this is a P2P conversation, message statuses should be ensured (that is, downloaded only if they are missing), using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/api/messages/ensureRecipientStatus\"\n  }), \"client.messages.ensureRecipientStatus()\"), \".\"), mdx(\"p\", null, \"This check should be made whenever the message content is about to be displayed on screen.\"), mdx(\"p\", null, \"When this check is complete, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message.statusesPerRecipient[0].status\"), \" will contain the status text:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Arguments: client, message\\n\\nconst { statusesPerRecipient } = message;\\nconst { MessageRecipientStatus } = client.enums;\\nconst initialStatus = statusesPerRecipient.length > 0 ?\\n  statusesPerRecipient[0].status : null;\\n\\nlet displayLabel = '';\\n\\nif (initialStatus === MessageRecipientStatus.NEW) {\\n  displayLabel = 'Sent';\\n} else if (initialStatus === MessageRecipientStatus.DELIVERED) {\\n  displayLabel = 'Delivered';\\n} else if (initialStatus === MessageRecipientStatus.READ) {\\n  displayLabel = 'Read';\\n}\\n\\n// displayLabel is ready to render\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NA\"), \" (which should usually be displayed as empty string), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NEW\"), \" (which usually should be displayed as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Sent\"), \"), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DELIVERED\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"READ\"), \".\"), mdx(\"h3\", {\n    \"id\": \"group-conversations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#group-conversations\",\n    \"aria-label\": \"group conversations permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Group Conversations\"), mdx(\"p\", null, \"If this is a group conversation, you should call \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/js-sdk/api/messages/findRecipientStatus\"\n  }), \"client.messages.findRecipientStatus()\"), \" 100% of the time upon render/update of the message content. Do this instead of checking \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message.shouldEnsureRecipientStatus\"), \".\"), mdx(\"p\", null, \"The reason this is currently required is that we do not guarantee that every member of a conversation is notified when another member reads a message due to concerns about traffic volume.\"), mdx(\"p\", null, \"When this check is complete, you will need to write further code like the following, in order to display a single representative message status for the message:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Arguments: client, message, group\\n\\nconst { statusesPerRecipient } = message;\\nconst { MessageRecipientStatus } = client.enums;\\n\\nlet readCount = 0;\\nlet sentCount = 0;\\n\\nif (statusesPerRecipient && group && group.memberIds) {\\n  for (const { status, userId } of statusesPerRecipient) {\\n    if (!group.memberIds.includes(userId)) continue;\\n    sentCount++;\\n    if (status === MessageRecipientStatus.READ) readCount++;\\n  }\\n}\\n\\nconst displayLabel = readCount === 0 ?\\n  'Sent' :\\n  `${readCount}/${sentCount} Read`;\\n\\n// displayLabel is ready to render\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#p2p-conversations","title":"P2P Conversations"},{"url":"#group-conversations","title":"Group Conversations"}]},"parent":{"__typename":"File","relativePath":"quickstart/js/messages/statuses.mdx"},"frontmatter":{"title":"How to Determine Message Status Text","metaTitle":"","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/debugging","title":"Debugging"}}},{"node":{"fields":{"slug":"/","title":"TigerConnect SDK Documentation"}}},{"node":{"fields":{"slug":"/api","title":"API Reference"}}},{"node":{"fields":{"slug":"/events","title":"Events Reference"}}},{"node":{"fields":{"slug":"/quickstart","title":"Quick Start Guides"}}},{"node":{"fields":{"slug":"/models","title":"Models Reference"}}},{"node":{"fields":{"slug":"/quickstart/android","title":"Android SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/quickstart/ios","title":"iOS SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/quickstart/js/do-not-disturb","title":"Do Not Disturb on the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js","title":"JS SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/quickstart/js/getting-inbox","title":"Getting Inbox with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/groups","title":"Groups and the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/installation","title":"How to Install the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/logging-in","title":"Logging In with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/logging-out","title":"Logging Out with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/model-lifecycle","title":"Model Lifecycle of the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/processing-events","title":"Processing Events in the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/expiration","title":"Message Expiration"}}},{"node":{"fields":{"slug":"/quickstart/js/realtime-updates","title":"Realtime Updates with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/messages","title":"Messages and the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/forwarding","title":"How to Forward Messages"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/priority-messages","title":"How to Send A Priority Message"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/unread-counts","title":"How to Determine Unread Message Counts on the Conversation and Entire Inbox"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/sending-attachments","title":"How to Send Messages with Attachments"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/sending","title":"How to Send Messages"}}},{"node":{"fields":{"slug":"/quickstart/ios/getting-inbox","title":"Getting the Inbox with the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/statuses","title":"How to Determine Message Status Text"}}},{"node":{"fields":{"slug":"/quickstart/ios/installation","title":"How to Install the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/logging-out","title":"How to Log Out of the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/logging-in","title":"How to Log In to the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/messages","title":"Messages and the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/realtime-updates","title":"Realtime Updates with the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/logging-in","title":"Logging In with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/installation","title":"How to Install the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/getting-inbox","title":"Getting the Inbox with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/groups","title":"Groups and Forums with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/logging-out","title":"Logging Out with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/realtime-updates","title":"Realtime Updates with the Android SDK"}}},{"node":{"fields":{"slug":"/models/attachment","title":"Attachment Model"}}},{"node":{"fields":{"slug":"/quickstart/android/messages","title":"Messages and the Android SDK"}}},{"node":{"fields":{"slug":"/models/group","title":"Group Model"}}},{"node":{"fields":{"slug":"/models/distributionList","title":"DistributionList Model"}}},{"node":{"fields":{"slug":"/models/conversation","title":"Conversation Model"}}},{"node":{"fields":{"slug":"/models/messageStatusPerRecipient","title":"MessageStatusPerRecipient Model"}}},{"node":{"fields":{"slug":"/models/message","title":"Message Model"}}},{"node":{"fields":{"slug":"/models/metadata","title":"Metadata Model"}}},{"node":{"fields":{"slug":"/models/patient","title":"Patient Model"}}},{"node":{"fields":{"slug":"/models/organization","title":"Organization Model"}}},{"node":{"fields":{"slug":"/models/patientContact","title":"Patient Contact Model"}}},{"node":{"fields":{"slug":"/models/user","title":"User Model"}}},{"node":{"fields":{"slug":"/models/role","title":"Role Model"}}},{"node":{"fields":{"slug":"/events/conversations-loading-start","title":"Event: \"conversations:loading:start\""}}},{"node":{"fields":{"slug":"/events/conversations-loading-stop","title":"Event: \"conversations:loading:stop\""}}},{"node":{"fields":{"slug":"/events/group-membership-change","title":"Event: \"group:membership:change\""}}},{"node":{"fields":{"slug":"/events/messages-offline-start","title":"Event: \"messages:offline:start\""}}},{"node":{"fields":{"slug":"/events/signedIn","title":"Event: \"signedIn\""}}},{"node":{"fields":{"slug":"/events/messages-offline-stop","title":"Event: \"messages:offline:stop\""}}},{"node":{"fields":{"slug":"/events/typing-change","title":"Event: \"typing:change\""}}},{"node":{"fields":{"slug":"/debugging/client-events","title":"Debugging client.events"}}},{"node":{"fields":{"slug":"/api/conversations","title":"Conversations"}}},{"node":{"fields":{"slug":"/api/forums","title":"Forums"}}},{"node":{"fields":{"slug":"/api/client","title":"Client"}}},{"node":{"fields":{"slug":"/api/events","title":"Events"}}},{"node":{"fields":{"slug":"/api/groups","title":"Groups"}}},{"node":{"fields":{"slug":"/api/messages","title":"Messages"}}},{"node":{"fields":{"slug":"/api/metadata","title":"Metadata"}}},{"node":{"fields":{"slug":"/api/organizations","title":"Organizations"}}},{"node":{"fields":{"slug":"/api/search","title":"Search"}}},{"node":{"fields":{"slug":"/api/users","title":"Users"}}},{"node":{"fields":{"slug":"/api/typingStatus","title":"Typing Status"}}},{"node":{"fields":{"slug":"/api/users/checkLogin","title":"users.checkLogin()"}}},{"node":{"fields":{"slug":"/api/users/findMyProfilesForAllOrganizations","title":"users.findMyProfilesForAllOrganizations()"}}},{"node":{"fields":{"slug":"/api/users/find","title":"users.find()"}}},{"node":{"fields":{"slug":"/api/users/findMe","title":"users.findMe()"}}},{"node":{"fields":{"slug":"/api/users/removeAutoForward","title":"users.removeAutoForward()"}}},{"node":{"fields":{"slug":"/api/users/update","title":"users.update()"}}},{"node":{"fields":{"slug":"/api/users/setAutoForward","title":"users.setAutoForward()"}}},{"node":{"fields":{"slug":"/api/typingStatus/startTyping","title":"typingStatus.startTyping()"}}},{"node":{"fields":{"slug":"/api/typingStatus/stopTyping","title":"typingStatus.stopTyping()"}}},{"node":{"fields":{"slug":"/api/patients/create","title":"patients.create()"}}},{"node":{"fields":{"slug":"/api/search/query","title":"search.query()"}}},{"node":{"fields":{"slug":"/api/patients/update","title":"patients.update()"}}},{"node":{"fields":{"slug":"/api/organizations/find","title":"organizations.find()"}}},{"node":{"fields":{"slug":"/api/metadata/findMulti","title":"metadata.findMulti()"}}},{"node":{"fields":{"slug":"/api/organizations/findAll","title":"organizations.findAll()"}}},{"node":{"fields":{"slug":"/api/messages/_sendMessageOptions","title":"Common Message Options"}}},{"node":{"fields":{"slug":"/api/metadata/update","title":"metadata.update()"}}},{"node":{"fields":{"slug":"/api/metadata/find","title":"metadata.find()"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachment","title":"messages.downloadAttachment()"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachmentUrl","title":"messages.downloadAttachmentUrl()"}}},{"node":{"fields":{"slug":"/api/metadata/fullUpdate","title":"metadata.fullUpdate()"}}},{"node":{"fields":{"slug":"/api/messages/endPreviewMessage","title":"messages.endPreviewMessage()"}}},{"node":{"fields":{"slug":"/api/messages/ensureRecipientStatus","title":"messages.ensureRecipientStatus()"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachmentBlobAndUrl","title":"messages.downloadAttachmentBlobAndUrl()"}}},{"node":{"fields":{"slug":"/api/messages/findAttachment","title":"messages.findAttachment()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToGroup","title":"messages.forwardToGroup()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToGroupOfUsers","title":"messages.forwardToGroupOfUsers()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToConversation","title":"messages.forwardToConversation()"}}},{"node":{"fields":{"slug":"/api/messages/findRecipientStatus","title":"messages.findRecipientStatus()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToDistributionList","title":"messages.forwardToDistributionList()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToRole","title":"messages.forwardToRole()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToUser","title":"messages.forwardToUser()"}}},{"node":{"fields":{"slug":"/api/messages/previewMessage","title":"messages.previewMessage()"}}},{"node":{"fields":{"slug":"/api/messages/retrySend","title":"messages.retrySend()"}}},{"node":{"fields":{"slug":"/api/messages/recall","title":"messages.recall()"}}},{"node":{"fields":{"slug":"/api/messages/resend","title":"messages.resend()"}}},{"node":{"fields":{"slug":"/api/messages/sendToDistributionList","title":"messages.sendToDistributionList()"}}},{"node":{"fields":{"slug":"/api/messages/sendToGroup","title":"messages.sendToGroup()"}}},{"node":{"fields":{"slug":"/api/messages/sendToGroupOfUsers","title":"messages.sendToGroupOfUsers()"}}},{"node":{"fields":{"slug":"/api/messages/sendToConversation","title":"messages.sendToConversation()"}}},{"node":{"fields":{"slug":"/api/groups/addMember","title":"groups.addMember()"}}},{"node":{"fields":{"slug":"/api/messages/sendToUser","title":"messages.sendToUser()"}}},{"node":{"fields":{"slug":"/api/messages/sendToRole","title":"messages.sendToRole()"}}},{"node":{"fields":{"slug":"/api/groups/destroy","title":"groups.destroy()"}}},{"node":{"fields":{"slug":"/api/groups/find","title":"groups.find()"}}},{"node":{"fields":{"slug":"/api/groups/addMembers","title":"groups.addMembers()"}}},{"node":{"fields":{"slug":"/api/groups/create","title":"groups.create()"}}},{"node":{"fields":{"slug":"/api/groups/findAll","title":"groups.findAll()"}}},{"node":{"fields":{"slug":"/api/groups/removeMember","title":"groups.removeMember()"}}},{"node":{"fields":{"slug":"/api/forums/find","title":"forums.find()"}}},{"node":{"fields":{"slug":"/api/groups/leave","title":"groups.leave()"}}},{"node":{"fields":{"slug":"/api/groups/update","title":"groups.update()"}}},{"node":{"fields":{"slug":"/api/forums/create","title":"forums.create()"}}},{"node":{"fields":{"slug":"/api/conversations/fetchTimeline","title":"conversations.fetchTimeline()"}}},{"node":{"fields":{"slug":"/api/forums/findAll","title":"forums.findAll()"}}},{"node":{"fields":{"slug":"/api/forums/join","title":"forums.join()"}}},{"node":{"fields":{"slug":"/api/events/connect","title":"events.connect()"}}},{"node":{"fields":{"slug":"/api/conversations/findAll","title":"conversations.findAll()"}}},{"node":{"fields":{"slug":"/api/conversations/find","title":"conversations.find()"}}},{"node":{"fields":{"slug":"/api/conversations/mute","title":"conversations.mute()"}}},{"node":{"fields":{"slug":"/api/conversations/markAsRead","title":"conversations.markAsRead()"}}},{"node":{"fields":{"slug":"/api/conversations/remove","title":"conversations.remove()"}}},{"node":{"fields":{"slug":"/api/conversations/selectConversation","title":"conversations.selectConversation()"}}},{"node":{"fields":{"slug":"/api/conversations/unmuteAll","title":"conversations.unmuteAll()"}}},{"node":{"fields":{"slug":"/api/conversations/markAsDelivered","title":"conversations.markAsDelivered()"}}},{"node":{"fields":{"slug":"/api/client/authenticateUsingOauth","title":"client.authenticateUsingOauth()"}}},{"node":{"fields":{"slug":"/api/conversations/unmute","title":"conversations.unmute()"}}},{"node":{"fields":{"slug":"/api/client/authenticate","title":"client.authenticate()"}}},{"node":{"fields":{"slug":"/api/client/signInWithApiKeyAndSecret","title":"client.signInWithApiKeyAndSecret()"}}},{"node":{"fields":{"slug":"/api/client/initialize-client","title":"Initializing Client"}}},{"node":{"fields":{"slug":"/api/client/signOut","title":"client.signOut()"}}},{"node":{"fields":{"slug":"/api/client/signOutAllDevices","title":"client.signOutAllDevices()"}}},{"node":{"fields":{"slug":"/api/groups/removeMembers","title":"groups.removeMembers()"}}},{"node":{"fields":{"slug":"/__examples/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/api/client/signIn","title":"client.signIn()"}}}]}},"pageContext":{"id":"e2bd324a-5a1b-5834-8b09-fa06b66ae7b5"}},"staticQueryHashes":["2619113677","2619113677","2619113677","2619113677","3684623420","3684623420","3706406642","3706406642"]}