{"componentChunkName":"component---src-templates-docs-js","path":"/quickstart/android/messages","webpackCompilationHash":"83c3876e70b09e2fdf4b","result":{"data":{"site":{"siteMetadata":{"title":"JS SDK Documentation | TigerConnect"}},"mdx":{"fields":{"id":"ddaa1a46-1da1-569e-afb7-fdcb7c2b8274","title":"Messages and the Android SDK","slug":"/quickstart/android/messages"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Messages and the Android SDK\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"sending-a-message\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#sending-a-message\",\n    \"aria-label\": \"sending a message permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Sending a Message\"), mdx(\"p\", null, \"There are several ways to send a message. The following snippet is one way to send a message.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public void sendMessage() {\\n    Message messageForSend =  Message.messageForSend(\\\"Hello World!\\\", 0,\\n        rosterEntry, organizationTTL, null, null, deleteOnRead);\\n    TT.getInstance().getConversationManager().sendMessage(messageForSend);\\n}\\n\")), mdx(\"p\", null, \"RosterEntry is the person/group you are trying to send the message to, TTL is the time-to-live for the message, usually this time is specified by an organization setting.\"), mdx(\"h3\", {\n    \"id\": \"sending-an-attachment\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#sending-an-attachment\",\n    \"aria-label\": \"sending an attachment permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Sending an Attachment\"), mdx(\"p\", null, \"Sending an attachment is very similar to sending a normal message, the difference is that a File object is required along with a mimeType of the attachment that you want to send.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public void sendAttachment() {\\n    Message attachmentForSend = Message.messageForSend(\\\"Hello World!\\\", 0,\\n        rosterEntry, organizationTTL, photoFile, AttachmentMimeTypes.TYPE_JPG, deleteOnRead);\\n\\n    TT.getInstance().getConversationManager().sendAttachment(attachmentForSend, shouldDeleteAttachment);\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"resending-a-message\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#resending-a-message\",\n    \"aria-label\": \"resending a message permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Resending a Message\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"private void resendMessage(Message message) {\\n    // Notify our Conversation Manager that this message needs to be resent\\n    TT.getInstance().getConversationManager().resendMessage(message.getMessageId());\\n    conversationAdapter.addMessage(message);\\n    scrollToBottom();\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"recalling-a-message\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#recalling-a-message\",\n    \"aria-label\": \"recalling a message permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Recalling a Message\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"private void recallMessage(Message message) {\\n    // Notify our Conversation Manager that this message needs to be recalled\\n    TT.getInstance().getConversationManager().recallMessage(message.getMessageId());\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"forwarding-a-message\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#forwarding-a-message\",\n    \"aria-label\": \"forwarding a message permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Forwarding a Message\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"private void forwardMessage(Message message) {\\n    // Notify our Conversation Manager that this message is to be forwarded\\n    TT.getInstance().getConversationManager().forwardMessage(message.getMessageId(), message);\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"autoforwarding\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#autoforwarding\",\n    \"aria-label\": \"autoforwarding permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Autoforwarding\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"private void autoForwardToThisUser(RosterEntry rosterEntry) {\\n    Map<SettingType, Object> modifiedSettingsMap = new ArrayMap<>(1);\\n    modifiedSettingsMap.put(SettingType.DND_AUTO_FORWARD_RECEIVER, rosterEntry.getId());\\n\\n    // Call this method to notify our Organization Manager to modify the organization settings\\n    // and set this user as the recipient of our auto forwarded messages\\n    TT.getInstance().getOrganizationManager().modifyOrganizationSettings(mRosterEntry.getOrgId(), modifiedSettingsMap, null);\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"receiving-updates-for-messages\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#receiving-updates-for-messages\",\n    \"aria-label\": \"receiving updates for messages permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Receiving Updates for Messages\"), mdx(\"p\", null, \"In your Conversation View, you would want to subscribe to Message updates like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MESSAGE_ADDED\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MESSAGE_UPDATED\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MESSAGES_REMOVED\"), \", etc.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"@Override\\npublic void onEventReceived(@NonNull String event, @Nullable Object o) {\\n  if (getActivity() == null) {\\n      return;\\n  }\\n\\n  switch (event) {\\n    case TTEvent.MESSAGE_ADDED: {\\n      /**\\n       *  It may also be useful to check if the fragment is alive as well!\\n       */\\n      // Confirm that this new message is for this conversation and organization,\\n      // if not, return early\\n      if (!isEventForRosterEntryOrg(o)) return;\\n\\n      Timber.d(\\\"Message Added\\\");\\n      Message message = (Message) o;\\n\\n      /**\\n       onEventReceived is done on a background thread, so make sure to publish your logic\\n       on the UI thread\\n       */\\n      getActivity().runOnUiThread(() -> {\\n          if (getUserVisibleHint()) {\\n              // This is how you mark a conversation as read\\n              TT.getInstance().getConversationManager().markConversationAsRead(mRosterEntry);\\n          }\\n          conversationAdapter.addMessage(message);\\n          scrollToBottom();\\n       });\\n    }\\n    break;\\n\\n    case TTEvent.MESSAGE_UPDATED: {\\n      if (!isEventForRosterEntryOrg(o)) return;\\n      Timber.d(\\\"Message Updated\\\");\\n    }\\n    break;\\n\\n    case TTEvent.MESSAGES_REMOVED: {\\n      Timber.d(\\\"Messages Removed\\\");\\n      List<Message> messages = (List<Message>) o;\\n      if (getActivity() == null) return;\\n\\n      getActivity().runOnUiThread(() -> {\\n          conversationAdapter.removeMessages(messages);\\n      });\\n    }\\n    break;\\n\\n    case TTEvent.MESSAGE_STATUS_UPDATED: {\\n      // This is where to handle message status updates like Read, Delivered\\n      Timber.d(\\\"Message Status Received!\\\");\\n      Message message = (Message) o;\\n      if (!isEventForRosterEntryOrg(message)) return;\\n\\n      getActivity().runOnUiThread(() -> {\\n          conversationAdapter.markMessageAsRead(m);\\n      });\\n    }\\n    break;\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#sending-a-message","title":"Sending a Message"},{"url":"#sending-an-attachment","title":"Sending an Attachment"},{"url":"#resending-a-message","title":"Resending a Message"},{"url":"#recalling-a-message","title":"Recalling a Message"},{"url":"#forwarding-a-message","title":"Forwarding a Message"},{"url":"#autoforwarding","title":"Autoforwarding"},{"url":"#receiving-updates-for-messages","title":"Receiving Updates for Messages"}]},"parent":{"__typename":"File","relativePath":"quickstart/android/messages.mdx"},"frontmatter":{"title":"Messages and the Android SDK","metaTitle":"","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/404","title":"Page Not Found"}}},{"node":{"fields":{"slug":"/api","title":"API Reference"}}},{"node":{"fields":{"slug":"/","title":"TigerConnect SDK Documentation"}}},{"node":{"fields":{"slug":"/models","title":"Models Reference"}}},{"node":{"fields":{"slug":"/events","title":"Events Reference"}}},{"node":{"fields":{"slug":"/quickstart/android","title":"Android SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/quickstart","title":"Quick Start Guides"}}},{"node":{"fields":{"slug":"/quickstart/ios","title":"iOS SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/quickstart/js","title":"JS SDK Quick Start Guide"}}},{"node":{"fields":{"slug":"/models/attachment","title":"Attachment Model"}}},{"node":{"fields":{"slug":"/models/conversation","title":"Conversation Model"}}},{"node":{"fields":{"slug":"/models/distributionList","title":"DistributionList Model"}}},{"node":{"fields":{"slug":"/models/group","title":"Group Model"}}},{"node":{"fields":{"slug":"/models/organization","title":"Organization Model"}}},{"node":{"fields":{"slug":"/models/metadata","title":"Metadata Model"}}},{"node":{"fields":{"slug":"/models/messageStatusPerRecipient","title":"MessageStatusPerRecipient Model"}}},{"node":{"fields":{"slug":"/models/role","title":"Role Model"}}},{"node":{"fields":{"slug":"/quickstart/js/getting-inbox","title":"Getting Inbox with the JS SDK"}}},{"node":{"fields":{"slug":"/models/user","title":"User Model"}}},{"node":{"fields":{"slug":"/quickstart/js/groups","title":"Groups and the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/installation","title":"How to Install the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/logging-in","title":"Logging In with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/model-lifecycle","title":"Model Lifecycle of the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/messages","title":"Messages and the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/logging-out","title":"Logging Out with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/processing-events","title":"Processing Events in the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/js/realtime-updates","title":"Realtime Updates with the JS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/installation","title":"How to Install the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/getting-inbox","title":"Getting the Inbox with the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/logging-in","title":"How to Log In to the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/messages","title":"Messages and the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/getting-inbox","title":"Getting the Inbox with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/logging-out","title":"How to Log Out of the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/ios/realtime-updates","title":"Realtime Updates with the iOS SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/groups","title":"Groups and Forums with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/installation","title":"How to Install the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/logging-in","title":"Logging In with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/messages","title":"Messages and the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/logging-out","title":"Logging Out with the Android SDK"}}},{"node":{"fields":{"slug":"/quickstart/android/realtime-updates","title":"Realtime Updates with the Android SDK"}}},{"node":{"fields":{"slug":"/events/conversations-loading-stop","title":"Event: \"conversations:loading:stop\""}}},{"node":{"fields":{"slug":"/events/conversations-loading-start","title":"Event: \"conversations:loading:start\""}}},{"node":{"fields":{"slug":"/events/group-membership-change","title":"Event: \"group:membership:change\""}}},{"node":{"fields":{"slug":"/events/messages-offline-start","title":"Event: \"messages:offline:start\""}}},{"node":{"fields":{"slug":"/events/signedIn","title":"Event: \"signedIn\""}}},{"node":{"fields":{"slug":"/events/messages-offline-stop","title":"Event: \"messages:offline:stop\""}}},{"node":{"fields":{"slug":"/events/typing-change","title":"Event: \"typing:change\""}}},{"node":{"fields":{"slug":"/quickstart/js/messages/expiration","title":"Message Expiration"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/forwarding","title":"How to Forward Messages"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/priority-messages","title":"How to Send A Priority Message"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/sending-attachments","title":"How to Send Messages with Attachments"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/sending","title":"How to Send Messages"}}},{"node":{"fields":{"slug":"/quickstart/js/messages/unread-counts","title":"How to Determine Unread Message Counts on the Conversation and Entire Inbox"}}},{"node":{"fields":{"slug":"/api/client","title":"Client"}}},{"node":{"fields":{"slug":"/api/conversations","title":"Conversations"}}},{"node":{"fields":{"slug":"/api/events","title":"Events"}}},{"node":{"fields":{"slug":"/api/groups","title":"Groups"}}},{"node":{"fields":{"slug":"/api/forums","title":"Forums"}}},{"node":{"fields":{"slug":"/api/messages","title":"Messages"}}},{"node":{"fields":{"slug":"/api/organizations","title":"Organizations"}}},{"node":{"fields":{"slug":"/api/metadata","title":"Metadata"}}},{"node":{"fields":{"slug":"/api/search","title":"Search"}}},{"node":{"fields":{"slug":"/api/typingStatus","title":"Typing Status"}}},{"node":{"fields":{"slug":"/api/users","title":"Users"}}},{"node":{"fields":{"slug":"/__examples/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/api/typingStatus/startTyping","title":"typingStatus.startTyping()"}}},{"node":{"fields":{"slug":"/api/users/checkLogin","title":"users.checkLogin()"}}},{"node":{"fields":{"slug":"/api/typingStatus/stopTyping","title":"typingStatus.stopTyping()"}}},{"node":{"fields":{"slug":"/api/users/find","title":"users.find()"}}},{"node":{"fields":{"slug":"/api/users/findMe","title":"users.findMe()"}}},{"node":{"fields":{"slug":"/api/users/findMyProfilesForAllOrganizations","title":"users.findMyProfilesForAllOrganizations()"}}},{"node":{"fields":{"slug":"/api/users/setAutoForward","title":"users.setAutoForward()"}}},{"node":{"fields":{"slug":"/api/users/removeAutoForward","title":"users.removeAutoForward()"}}},{"node":{"fields":{"slug":"/api/users/update","title":"users.update()"}}},{"node":{"fields":{"slug":"/api/organizations/find","title":"organizations.find()"}}},{"node":{"fields":{"slug":"/api/organizations/findAll","title":"organizations.findAll()"}}},{"node":{"fields":{"slug":"/api/metadata/find","title":"metadata.find()"}}},{"node":{"fields":{"slug":"/api/search/query","title":"search.query()"}}},{"node":{"fields":{"slug":"/api/metadata/findMulti","title":"metadata.findMulti()"}}},{"node":{"fields":{"slug":"/api/metadata/fullUpdate","title":"metadata.fullUpdate()"}}},{"node":{"fields":{"slug":"/api/metadata/update","title":"metadata.update()"}}},{"node":{"fields":{"slug":"/api/messages/_sendMessageOptions","title":"Common Message Options"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachment","title":"messages.downloadAttachment()"}}},{"node":{"fields":{"slug":"/api/messages/downloadAttachmentUrl","title":"messages.downloadAttachmentUrl()"}}},{"node":{"fields":{"slug":"/api/messages/endPreviewMessage","title":"messages.endPreviewMessage()"}}},{"node":{"fields":{"slug":"/api/messages/findAttachment","title":"messages.findAttachment()"}}},{"node":{"fields":{"slug":"/api/messages/ensureRecipientStatus","title":"messages.ensureRecipientStatus()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToConversation","title":"messages.forwardToConversation()"}}},{"node":{"fields":{"slug":"/api/messages/findRecipientStatus","title":"messages.findRecipientStatus()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToDistributionList","title":"messages.forwardToDistributionList()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToRole","title":"messages.forwardToRole()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToGroup","title":"messages.forwardToGroup()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToUser","title":"messages.forwardToUser()"}}},{"node":{"fields":{"slug":"/api/messages/forwardToGroupOfUsers","title":"messages.forwardToGroupOfUsers()"}}},{"node":{"fields":{"slug":"/api/messages/previewMessage","title":"messages.previewMessage()"}}},{"node":{"fields":{"slug":"/api/messages/recall","title":"messages.recall()"}}},{"node":{"fields":{"slug":"/api/messages/resend","title":"messages.resend()"}}},{"node":{"fields":{"slug":"/api/messages/sendToConversation","title":"messages.sendToConversation()"}}},{"node":{"fields":{"slug":"/api/messages/retrySend","title":"messages.retrySend()"}}},{"node":{"fields":{"slug":"/api/messages/sendToDistributionList","title":"messages.sendToDistributionList()"}}},{"node":{"fields":{"slug":"/api/messages/sendToGroup","title":"messages.sendToGroup()"}}},{"node":{"fields":{"slug":"/api/messages/sendToGroupOfUsers","title":"messages.sendToGroupOfUsers()"}}},{"node":{"fields":{"slug":"/api/messages/sendToRole","title":"messages.sendToRole()"}}},{"node":{"fields":{"slug":"/api/messages/sendToUser","title":"messages.sendToUser()"}}},{"node":{"fields":{"slug":"/api/groups/addMembers","title":"groups.addMembers()"}}},{"node":{"fields":{"slug":"/api/groups/addMember","title":"groups.addMember()"}}},{"node":{"fields":{"slug":"/api/groups/create","title":"groups.create()"}}},{"node":{"fields":{"slug":"/api/groups/destroy","title":"groups.destroy()"}}},{"node":{"fields":{"slug":"/api/groups/find","title":"groups.find()"}}},{"node":{"fields":{"slug":"/api/groups/findAll","title":"groups.findAll()"}}},{"node":{"fields":{"slug":"/api/groups/leave","title":"groups.leave()"}}},{"node":{"fields":{"slug":"/api/groups/removeMembers","title":"groups.removeMembers()"}}},{"node":{"fields":{"slug":"/api/groups/removeMember","title":"groups.removeMember()"}}},{"node":{"fields":{"slug":"/api/groups/update","title":"groups.update()"}}},{"node":{"fields":{"slug":"/api/forums/create","title":"forums.create()"}}},{"node":{"fields":{"slug":"/api/forums/findAll","title":"forums.findAll()"}}},{"node":{"fields":{"slug":"/api/forums/find","title":"forums.find()"}}},{"node":{"fields":{"slug":"/api/forums/join","title":"forums.join()"}}},{"node":{"fields":{"slug":"/api/conversations/fetchTimeline","title":"conversations.fetchTimeline()"}}},{"node":{"fields":{"slug":"/api/events/connect","title":"events.connect()"}}},{"node":{"fields":{"slug":"/api/conversations/markAsDelivered","title":"conversations.markAsDelivered()"}}},{"node":{"fields":{"slug":"/api/conversations/find","title":"conversations.find()"}}},{"node":{"fields":{"slug":"/api/conversations/findAll","title":"conversations.findAll()"}}},{"node":{"fields":{"slug":"/api/conversations/markAsRead","title":"conversations.markAsRead()"}}},{"node":{"fields":{"slug":"/api/conversations/mute","title":"conversations.mute()"}}},{"node":{"fields":{"slug":"/api/conversations/remove","title":"conversations.remove()"}}},{"node":{"fields":{"slug":"/api/conversations/unmuteAll","title":"conversations.unmuteAll()"}}},{"node":{"fields":{"slug":"/api/client/authenticate","title":"client.authenticate()"}}},{"node":{"fields":{"slug":"/api/conversations/unmute","title":"conversations.unmute()"}}},{"node":{"fields":{"slug":"/api/client/authenticateUsingOauth","title":"client.authenticateUsingOauth()"}}},{"node":{"fields":{"slug":"/api/client/initialize-client","title":"Initializing Client"}}},{"node":{"fields":{"slug":"/api/client/signIn","title":"client.signIn()"}}},{"node":{"fields":{"slug":"/api/client/signInWithApiKeyAndSecret","title":"client.signInWithApiKeyAndSecret()"}}},{"node":{"fields":{"slug":"/api/client/signOutAllDevices","title":"client.signOutAllDevices()"}}},{"node":{"fields":{"slug":"/api/client/signOut","title":"client.signOut()"}}},{"node":{"fields":{"slug":"/models/message","title":"Message Model"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"ddaa1a46-1da1-569e-afb7-fdcb7c2b8274"}}}